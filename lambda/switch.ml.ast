[
  structure_item (lambda/switch.ml[17,1080+0]..[17,1080+44])
    Pstr_type Rec
    [
      type_declaration "shared" (lambda/switch.ml[17,1080+8]..[17,1080+14]) (lambda/switch.ml[17,1080+0]..[17,1080+44])
        ptype_params =
          [
            core_type (lambda/switch.ml[17,1080+5]..[17,1080+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/switch.ml[17,1080+17]..[17,1080+29])
                "Shared" (lambda/switch.ml[17,1080+17]..[17,1080+23])
                [
                  core_type (lambda/switch.ml[17,1080+27]..[17,1080+29])
                    Ptyp_var a
                ]
                None
              (lambda/switch.ml[17,1080+30]..[17,1080+44])
                "Single" (lambda/switch.ml[17,1080+32]..[17,1080+38])
                [
                  core_type (lambda/switch.ml[17,1080+42]..[17,1080+44])
                    Ptyp_var a
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/switch.ml[19,1126+0]..[23,1265+43])
    Pstr_type Rec
    [
      type_declaration "t_store" (lambda/switch.ml[19,1126+16]..[19,1126+23]) (lambda/switch.ml[19,1126+0]..[23,1265+43])
        ptype_params =
          [
            core_type (lambda/switch.ml[19,1126+6]..[19,1126+8])
              Ptyp_var a
            core_type (lambda/switch.ml[19,1126+10]..[19,1126+14])
              Ptyp_var ctx
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/switch.ml[20,1152+3]..[20,1152+31])
                Immutable
                "act_get" (lambda/switch.ml[20,1152+3]..[20,1152+10])                core_type (lambda/switch.ml[20,1152+13]..[20,1152+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/switch.ml[20,1152+13]..[20,1152+17])
                    Ptyp_constr "unit" (lambda/switch.ml[20,1152+13]..[20,1152+17])
                    []
                  core_type (lambda/switch.ml[20,1152+21]..[20,1152+29])
                    Ptyp_constr "array" (lambda/switch.ml[20,1152+24]..[20,1152+29])
                    [
                      core_type (lambda/switch.ml[20,1152+21]..[20,1152+23])
                        Ptyp_var a
                    ]
              (lambda/switch.ml[21,1184+3]..[21,1184+45])
                Immutable
                "act_get_shared" (lambda/switch.ml[21,1184+3]..[21,1184+17])                core_type (lambda/switch.ml[21,1184+20]..[21,1184+43])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/switch.ml[21,1184+20]..[21,1184+24])
                    Ptyp_constr "unit" (lambda/switch.ml[21,1184+20]..[21,1184+24])
                    []
                  core_type (lambda/switch.ml[21,1184+28]..[21,1184+43])
                    Ptyp_constr "array" (lambda/switch.ml[21,1184+38]..[21,1184+43])
                    [
                      core_type (lambda/switch.ml[21,1184+28]..[21,1184+37])
                        Ptyp_constr "shared" (lambda/switch.ml[21,1184+31]..[21,1184+37])
                        [
                          core_type (lambda/switch.ml[21,1184+28]..[21,1184+30])
                            Ptyp_var a
                        ]
                    ]
              (lambda/switch.ml[22,1230+3]..[22,1230+34])
                Immutable
                "act_store" (lambda/switch.ml[22,1230+3]..[22,1230+12])                core_type (lambda/switch.ml[22,1230+15]..[22,1230+32])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/switch.ml[22,1230+15]..[22,1230+19])
                    Ptyp_var ctx
                  core_type (lambda/switch.ml[22,1230+23]..[22,1230+32])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/switch.ml[22,1230+23]..[22,1230+25])
                      Ptyp_var a
                    core_type (lambda/switch.ml[22,1230+29]..[22,1230+32])
                      Ptyp_constr "int" (lambda/switch.ml[22,1230+29]..[22,1230+32])
                      []
              (lambda/switch.ml[23,1265+3]..[23,1265+41])
                Immutable
                "act_store_shared" (lambda/switch.ml[23,1265+3]..[23,1265+19])                core_type (lambda/switch.ml[23,1265+22]..[23,1265+39])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/switch.ml[23,1265+22]..[23,1265+26])
                    Ptyp_var ctx
                  core_type (lambda/switch.ml[23,1265+30]..[23,1265+39])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/switch.ml[23,1265+30]..[23,1265+32])
                      Ptyp_var a
                    core_type (lambda/switch.ml[23,1265+36]..[23,1265+39])
                      Ptyp_constr "int" (lambda/switch.ml[23,1265+36]..[23,1265+39])
                      []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/switch.ml[25,1310+0]..[30,1426+3])
    Pstr_modtype "Stored" (lambda/switch.ml[25,1310+12]..[25,1310+18])
      module_type (lambda/switch.ml[25,1310+21]..[30,1426+3])
        Pmty_signature
        [
          signature_item (lambda/switch.ml[26,1335+2]..[26,1335+8])
            Psig_type Rec
            [
              type_declaration "t" (lambda/switch.ml[26,1335+7]..[26,1335+8]) (lambda/switch.ml[26,1335+2]..[26,1335+8])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (lambda/switch.ml[27,1344+2]..[27,1344+10])
            Psig_type Rec
            [
              type_declaration "key" (lambda/switch.ml[27,1344+7]..[27,1344+10]) (lambda/switch.ml[27,1344+2]..[27,1344+10])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (lambda/switch.ml[28,1355+2]..[28,1355+37])
            Psig_value
            value_description "compare_key" (lambda/switch.ml[28,1355+6]..[28,1355+17]) (lambda/switch.ml[28,1355+2]..[28,1355+37])
              core_type (lambda/switch.ml[28,1355+20]..[28,1355+37])
                Ptyp_arrow
                Nolabel
                core_type (lambda/switch.ml[28,1355+20]..[28,1355+23])
                  Ptyp_constr "key" (lambda/switch.ml[28,1355+20]..[28,1355+23])
                  []
                core_type (lambda/switch.ml[28,1355+27]..[28,1355+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/switch.ml[28,1355+27]..[28,1355+30])
                    Ptyp_constr "key" (lambda/switch.ml[28,1355+27]..[28,1355+30])
                    []
                  core_type (lambda/switch.ml[28,1355+34]..[28,1355+37])
                    Ptyp_constr "int" (lambda/switch.ml[28,1355+34]..[28,1355+37])
                    []
              []
          signature_item (lambda/switch.ml[29,1393+2]..[29,1393+32])
            Psig_value
            value_description "make_key" (lambda/switch.ml[29,1393+6]..[29,1393+14]) (lambda/switch.ml[29,1393+2]..[29,1393+32])
              core_type (lambda/switch.ml[29,1393+17]..[29,1393+32])
                Ptyp_arrow
                Nolabel
                core_type (lambda/switch.ml[29,1393+17]..[29,1393+18])
                  Ptyp_constr "t" (lambda/switch.ml[29,1393+17]..[29,1393+18])
                  []
                core_type (lambda/switch.ml[29,1393+22]..[29,1393+32])
                  Ptyp_constr "option" (lambda/switch.ml[29,1393+26]..[29,1393+32])
                  [
                    core_type (lambda/switch.ml[29,1393+22]..[29,1393+25])
                      Ptyp_constr "key" (lambda/switch.ml[29,1393+22]..[29,1393+25])
                      []
                  ]
              []
        ]
  structure_item (lambda/switch.ml[32,1431+0]..[36,1535+3])
    Pstr_modtype "CtxStored" (lambda/switch.ml[32,1431+12]..[32,1431+21])
      module_type (lambda/switch.ml[32,1431+24]..[36,1535+3])
        Pmty_signature
        [
          signature_item (lambda/switch.ml[33,1459+2]..[33,1459+16])
            Psig_include
            module_type (lambda/switch.ml[33,1459+10]..[33,1459+16])
              Pmty_ident "Stored" (lambda/switch.ml[33,1459+10]..[33,1459+16])
          signature_item (lambda/switch.ml[34,1476+2]..[34,1476+14])
            Psig_type Rec
            [
              type_declaration "context" (lambda/switch.ml[34,1476+7]..[34,1476+14]) (lambda/switch.ml[34,1476+2]..[34,1476+14])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (lambda/switch.ml[35,1491+2]..[35,1491+43])
            Psig_value
            value_description "make_key" (lambda/switch.ml[35,1491+6]..[35,1491+14]) (lambda/switch.ml[35,1491+2]..[35,1491+43])
              core_type (lambda/switch.ml[35,1491+17]..[35,1491+43])
                Ptyp_arrow
                Nolabel
                core_type (lambda/switch.ml[35,1491+17]..[35,1491+24])
                  Ptyp_constr "context" (lambda/switch.ml[35,1491+17]..[35,1491+24])
                  []
                core_type (lambda/switch.ml[35,1491+28]..[35,1491+43])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/switch.ml[35,1491+28]..[35,1491+29])
                    Ptyp_constr "t" (lambda/switch.ml[35,1491+28]..[35,1491+29])
                    []
                  core_type (lambda/switch.ml[35,1491+33]..[35,1491+43])
                    Ptyp_constr "option" (lambda/switch.ml[35,1491+37]..[35,1491+43])
                    [
                      core_type (lambda/switch.ml[35,1491+33]..[35,1491+36])
                        Ptyp_constr "key" (lambda/switch.ml[35,1491+33]..[35,1491+36])
                        []
                    ]
              []
        ]
  structure_item (lambda/switch.ml[38,1540+0]..[91,3074+3])
    Pstr_module
    "CtxStore" (lambda/switch.ml[38,1540+7]..[38,1540+15])
      module_expr (lambda/switch.ml[38,1540+15]..[91,3074+3])
        Pmod_functor "A" (lambda/switch.ml[38,1540+16]..[38,1540+17])
        module_type (lambda/switch.ml[38,1540+18]..[38,1540+27])
          Pmty_ident "CtxStored" (lambda/switch.ml[38,1540+18]..[38,1540+27])
        module_expr (lambda/switch.ml[38,1540+31]..[91,3074+3])
          Pmod_structure
          [
            structure_item (lambda/switch.ml[39,1578+2]..[40,1594+67])
              Pstr_module
              "AMap" (lambda/switch.ml[39,1578+9]..[39,1578+13])
                module_expr (lambda/switch.ml[40,1594+4]..[40,1594+67])
                  Pmod_apply
                  module_expr (lambda/switch.ml[40,1594+4]..[40,1594+12])
                    Pmod_ident "Map.Make" (lambda/switch.ml[40,1594+4]..[40,1594+12])
                  module_expr (lambda/switch.ml[40,1594+13]..[40,1594+66])
                    Pmod_structure
                    [
                      structure_item (lambda/switch.ml[40,1594+20]..[40,1594+34])
                        Pstr_type Rec
                        [
                          type_declaration "t" (lambda/switch.ml[40,1594+25]..[40,1594+26]) (lambda/switch.ml[40,1594+20]..[40,1594+34])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (lambda/switch.ml[40,1594+29]..[40,1594+34])
                                  Ptyp_constr "A.key" (lambda/switch.ml[40,1594+29]..[40,1594+34])
                                  []
                        ]
                      structure_item (lambda/switch.ml[40,1594+35]..[40,1594+62])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[40,1594+39]..[40,1594+46])
                              Ppat_var "compare" (lambda/switch.ml[40,1594+39]..[40,1594+46])
                            expression (lambda/switch.ml[40,1594+49]..[40,1594+62])
                              Pexp_ident "A.compare_key" (lambda/switch.ml[40,1594+49]..[40,1594+62])
                        ]
                    ]
            structure_item (lambda/switch.ml[42,1663+2]..[45,1749+41])
              Pstr_type Rec
              [
                type_declaration "intern" (lambda/switch.ml[42,1663+7]..[42,1663+13]) (lambda/switch.ml[42,1663+2]..[45,1749+41])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (lambda/switch.ml[43,1679+6]..[43,1679+42])
                          Mutable
                          "map" (lambda/switch.ml[43,1679+14]..[43,1679+17])                          core_type (lambda/switch.ml[43,1679+20]..[43,1679+40])
                            Ptyp_constr "AMap.t" (lambda/switch.ml[43,1679+34]..[43,1679+40])
                            [
                              core_type (lambda/switch.ml[43,1679+21]..[43,1679+31])
                                Ptyp_tuple
                                [
                                  core_type (lambda/switch.ml[43,1679+21]..[43,1679+25])
                                    Ptyp_constr "bool" (lambda/switch.ml[43,1679+21]..[43,1679+25])
                                    []
                                  core_type (lambda/switch.ml[43,1679+28]..[43,1679+31])
                                    Ptyp_constr "int" (lambda/switch.ml[43,1679+28]..[43,1679+31])
                                    []
                                ]
                            ]
                        (lambda/switch.ml[44,1722+6]..[44,1722+26])
                          Mutable
                          "next" (lambda/switch.ml[44,1722+14]..[44,1722+18])                          core_type (lambda/switch.ml[44,1722+21]..[44,1722+24])
                            Ptyp_constr "int" (lambda/switch.ml[44,1722+21]..[44,1722+24])
                            []
                        (lambda/switch.ml[45,1749+6]..[45,1749+39])
                          Mutable
                          "acts" (lambda/switch.ml[45,1749+14]..[45,1749+18])                          core_type (lambda/switch.ml[45,1749+21]..[45,1749+38])
                            Ptyp_constr "list" (lambda/switch.ml[45,1749+34]..[45,1749+38])
                            [
                              core_type (lambda/switch.ml[45,1749+22]..[45,1749+32])
                                Ptyp_tuple
                                [
                                  core_type (lambda/switch.ml[45,1749+22]..[45,1749+26])
                                    Ptyp_constr "bool" (lambda/switch.ml[45,1749+22]..[45,1749+26])
                                    []
                                  core_type (lambda/switch.ml[45,1749+29]..[45,1749+32])
                                    Ptyp_constr "A.t" (lambda/switch.ml[45,1749+29]..[45,1749+32])
                                    []
                                ]
                            ]
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lambda/switch.ml[47,1792+2]..[90,3023+50])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[47,1792+6]..[47,1792+14])
                    Ppat_var "mk_store" (lambda/switch.ml[47,1792+6]..[47,1792+14])
                  expression (lambda/switch.ml[47,1792+15]..[90,3023+50]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[47,1792+15]..[47,1792+17])
                      Ppat_construct "()" (lambda/switch.ml[47,1792+15]..[47,1792+17])
                      None
                    expression (lambda/switch.ml[48,1812+4]..[90,3023+50])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/switch.ml[48,1812+8]..[48,1812+10])
                            Ppat_var "st" (lambda/switch.ml[48,1812+8]..[48,1812+10])
                          expression (lambda/switch.ml[49,1825+6]..[51,1871+21])
                            Pexp_record
                            [
                              "map" (lambda/switch.ml[49,1825+8]..[49,1825+11])
                                expression (lambda/switch.ml[49,1825+14]..[49,1825+24])
                                  Pexp_ident "AMap.empty" (lambda/switch.ml[49,1825+14]..[49,1825+24])
                              "next" (lambda/switch.ml[50,1852+8]..[50,1852+12])
                                expression (lambda/switch.ml[50,1852+15]..[50,1852+16])
                                  Pexp_constant PConst_int (0,None)
                              "acts" (lambda/switch.ml[51,1871+8]..[51,1871+12])
                                expression (lambda/switch.ml[51,1871+15]..[51,1871+17])
                                  Pexp_construct "[]" (lambda/switch.ml[51,1871+15]..[51,1871+17])
                                  None
                            ]
                            None
                      ]
                      expression (lambda/switch.ml[53,1897+4]..[90,3023+50])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[53,1897+8]..[53,1897+11])
                              Ppat_var "add" (lambda/switch.ml[53,1897+8]..[53,1897+11])
                            expression (lambda/switch.ml[53,1897+12]..[57,2019+7]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/switch.ml[53,1897+12]..[53,1897+21])
                                Ppat_var "mustshare" (lambda/switch.ml[53,1897+12]..[53,1897+21])
                              expression (lambda/switch.ml[53,1897+22]..[57,2019+7]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/switch.ml[53,1897+22]..[53,1897+25])
                                  Ppat_var "act" (lambda/switch.ml[53,1897+22]..[53,1897+25])
                                expression (lambda/switch.ml[54,1925+6]..[57,2019+7])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/switch.ml[54,1925+10]..[54,1925+11])
                                        Ppat_var "i" (lambda/switch.ml[54,1925+10]..[54,1925+11])
                                      expression (lambda/switch.ml[54,1925+14]..[54,1925+21])
                                        Pexp_field
                                        expression (lambda/switch.ml[54,1925+14]..[54,1925+16])
                                          Pexp_ident "st" (lambda/switch.ml[54,1925+14]..[54,1925+16])
                                        "next" (lambda/switch.ml[54,1925+17]..[54,1925+21])
                                  ]
                                  expression (lambda/switch.ml[55,1950+6]..[57,2019+7])
                                    Pexp_sequence
                                    expression (lambda/switch.ml[55,1950+6]..[55,1950+43])
                                      Pexp_setfield
                                      expression (lambda/switch.ml[55,1950+6]..[55,1950+8])
                                        Pexp_ident "st" (lambda/switch.ml[55,1950+6]..[55,1950+8])
                                      "acts" (lambda/switch.ml[55,1950+9]..[55,1950+13])
                                      expression (lambda/switch.ml[55,1950+17]..[55,1950+43])
                                        Pexp_construct "::" (lambda/switch.ml[55,1950+33]..[55,1950+35])
                                        Some
                                          expression (lambda/switch.ml[55,1950+17]..[55,1950+43]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lambda/switch.ml[55,1950+17]..[55,1950+32])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/switch.ml[55,1950+18]..[55,1950+27])
                                                    Pexp_ident "mustshare" (lambda/switch.ml[55,1950+18]..[55,1950+27])
                                                  expression (lambda/switch.ml[55,1950+28]..[55,1950+31])
                                                    Pexp_ident "act" (lambda/switch.ml[55,1950+28]..[55,1950+31])
                                                ]
                                              expression (lambda/switch.ml[55,1950+36]..[55,1950+43])
                                                Pexp_field
                                                expression (lambda/switch.ml[55,1950+36]..[55,1950+38])
                                                  Pexp_ident "st" (lambda/switch.ml[55,1950+36]..[55,1950+38])
                                                "acts" (lambda/switch.ml[55,1950+39]..[55,1950+43])
                                            ]
                                    expression (lambda/switch.ml[56,1996+6]..[57,2019+7])
                                      Pexp_sequence
                                      expression (lambda/switch.ml[56,1996+6]..[56,1996+20])
                                        Pexp_setfield
                                        expression (lambda/switch.ml[56,1996+6]..[56,1996+8])
                                          Pexp_ident "st" (lambda/switch.ml[56,1996+6]..[56,1996+8])
                                        "next" (lambda/switch.ml[56,1996+9]..[56,1996+13])
                                        expression (lambda/switch.ml[56,1996+17]..[56,1996+20])
                                          Pexp_apply
                                          expression (lambda/switch.ml[56,1996+18]..[56,1996+19])
                                            Pexp_ident "+" (lambda/switch.ml[56,1996+18]..[56,1996+19])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[56,1996+17]..[56,1996+18])
                                                Pexp_ident "i" (lambda/switch.ml[56,1996+17]..[56,1996+18])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[56,1996+19]..[56,1996+20])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                      expression (lambda/switch.ml[57,2019+6]..[57,2019+7])
                                        Pexp_ident "i" (lambda/switch.ml[57,2019+6]..[57,2019+7])
                        ]
                        expression (lambda/switch.ml[59,2031+4]..[90,3023+50])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/switch.ml[59,2031+8]..[59,2031+13])
                                Ppat_var "store" (lambda/switch.ml[59,2031+8]..[59,2031+13])
                              expression (lambda/switch.ml[59,2031+14]..[71,2445+27]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/switch.ml[59,2031+14]..[59,2031+23])
                                  Ppat_var "mustshare" (lambda/switch.ml[59,2031+14]..[59,2031+23])
                                expression (lambda/switch.ml[59,2031+24]..[71,2445+27]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/switch.ml[59,2031+24]..[59,2031+27])
                                    Ppat_var "ctx" (lambda/switch.ml[59,2031+24]..[59,2031+27])
                                  expression (lambda/switch.ml[59,2031+28]..[71,2445+27]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lambda/switch.ml[59,2031+28]..[59,2031+31])
                                      Ppat_var "act" (lambda/switch.ml[59,2031+28]..[59,2031+31])
                                    expression (lambda/switch.ml[59,2031+34]..[71,2445+27])
                                      Pexp_match
                                      expression (lambda/switch.ml[59,2031+40]..[59,2031+58])
                                        Pexp_apply
                                        expression (lambda/switch.ml[59,2031+40]..[59,2031+50])
                                          Pexp_ident "A.make_key" (lambda/switch.ml[59,2031+40]..[59,2031+50])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[59,2031+51]..[59,2031+54])
                                              Pexp_ident "ctx" (lambda/switch.ml[59,2031+51]..[59,2031+54])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[59,2031+55]..[59,2031+58])
                                              Pexp_ident "act" (lambda/switch.ml[59,2031+55]..[59,2031+58])
                                        ]
                                      [
                                        <case>
                                          pattern (lambda/switch.ml[60,2095+8]..[60,2095+16])
                                            Ppat_construct "Some" (lambda/switch.ml[60,2095+8]..[60,2095+12])
                                            Some
                                              []
                                              pattern (lambda/switch.ml[60,2095+13]..[60,2095+16])
                                                Ppat_var "key" (lambda/switch.ml[60,2095+13]..[60,2095+16])
                                          expression (lambda/switch.ml[61,2115+10]..[69,2415+13])
                                            Pexp_try
                                            expression (lambda/switch.ml[62,2135+12]..[64,2260+13])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lambda/switch.ml[62,2135+16]..[62,2135+26])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/switch.ml[62,2135+17]..[62,2135+23])
                                                        Ppat_var "shared" (lambda/switch.ml[62,2135+17]..[62,2135+23])
                                                      pattern (lambda/switch.ml[62,2135+24]..[62,2135+25])
                                                        Ppat_var "i" (lambda/switch.ml[62,2135+24]..[62,2135+25])
                                                    ]
                                                  expression (lambda/switch.ml[62,2135+29]..[62,2135+49])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[62,2135+29]..[62,2135+38])
                                                      Pexp_ident "AMap.find" (lambda/switch.ml[62,2135+29]..[62,2135+38])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[62,2135+39]..[62,2135+42])
                                                          Pexp_ident "key" (lambda/switch.ml[62,2135+39]..[62,2135+42])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[62,2135+43]..[62,2135+49])
                                                          Pexp_field
                                                          expression (lambda/switch.ml[62,2135+43]..[62,2135+45])
                                                            Pexp_ident "st" (lambda/switch.ml[62,2135+43]..[62,2135+45])
                                                          "map" (lambda/switch.ml[62,2135+46]..[62,2135+49])
                                                    ]
                                              ]
                                              expression (lambda/switch.ml[63,2188+12]..[64,2260+13])
                                                Pexp_sequence
                                                expression (lambda/switch.ml[63,2188+12]..[63,2188+69])
                                                  Pexp_ifthenelse
                                                  expression (lambda/switch.ml[63,2188+15]..[63,2188+25])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[63,2188+15]..[63,2188+18])
                                                      Pexp_ident "not" (lambda/switch.ml[63,2188+15]..[63,2188+18])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[63,2188+19]..[63,2188+25])
                                                          Pexp_ident "shared" (lambda/switch.ml[63,2188+19]..[63,2188+25])
                                                    ]
                                                  expression (lambda/switch.ml[63,2188+31]..[63,2188+69])
                                                    Pexp_setfield
                                                    expression (lambda/switch.ml[63,2188+31]..[63,2188+33])
                                                      Pexp_ident "st" (lambda/switch.ml[63,2188+31]..[63,2188+33])
                                                    "map" (lambda/switch.ml[63,2188+34]..[63,2188+37])
                                                    expression (lambda/switch.ml[63,2188+41]..[63,2188+69])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[63,2188+41]..[63,2188+49])
                                                        Pexp_ident "AMap.add" (lambda/switch.ml[63,2188+41]..[63,2188+49])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[63,2188+50]..[63,2188+53])
                                                            Pexp_ident "key" (lambda/switch.ml[63,2188+50]..[63,2188+53])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[63,2188+54]..[63,2188+62])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/switch.ml[63,2188+55]..[63,2188+59])
                                                                Pexp_construct "true" (lambda/switch.ml[63,2188+55]..[63,2188+59])
                                                                None
                                                              expression (lambda/switch.ml[63,2188+60]..[63,2188+61])
                                                                Pexp_ident "i" (lambda/switch.ml[63,2188+60]..[63,2188+61])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[63,2188+63]..[63,2188+69])
                                                            Pexp_field
                                                            expression (lambda/switch.ml[63,2188+63]..[63,2188+65])
                                                              Pexp_ident "st" (lambda/switch.ml[63,2188+63]..[63,2188+65])
                                                            "map" (lambda/switch.ml[63,2188+66]..[63,2188+69])
                                                      ]
                                                  None
                                                expression (lambda/switch.ml[64,2260+12]..[64,2260+13])
                                                  Pexp_ident "i" (lambda/switch.ml[64,2260+12]..[64,2260+13])
                                            [
                                              <case>
                                                pattern (lambda/switch.ml[65,2274+15]..[65,2274+24])
                                                  Ppat_construct "Not_found" (lambda/switch.ml[65,2274+15]..[65,2274+24])
                                                  None
                                                expression (lambda/switch.ml[66,2302+12]..[68,2401+13])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lambda/switch.ml[66,2302+16]..[66,2302+17])
                                                        Ppat_var "i" (lambda/switch.ml[66,2302+16]..[66,2302+17])
                                                      expression (lambda/switch.ml[66,2302+20]..[66,2302+37])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[66,2302+20]..[66,2302+23])
                                                          Pexp_ident "add" (lambda/switch.ml[66,2302+20]..[66,2302+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[66,2302+24]..[66,2302+33])
                                                              Pexp_ident "mustshare" (lambda/switch.ml[66,2302+24]..[66,2302+33])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[66,2302+34]..[66,2302+37])
                                                              Pexp_ident "act" (lambda/switch.ml[66,2302+34]..[66,2302+37])
                                                        ]
                                                  ]
                                                  expression (lambda/switch.ml[67,2343+12]..[68,2401+13])
                                                    Pexp_sequence
                                                    expression (lambda/switch.ml[67,2343+12]..[67,2343+55])
                                                      Pexp_setfield
                                                      expression (lambda/switch.ml[67,2343+12]..[67,2343+14])
                                                        Pexp_ident "st" (lambda/switch.ml[67,2343+12]..[67,2343+14])
                                                      "map" (lambda/switch.ml[67,2343+15]..[67,2343+18])
                                                      expression (lambda/switch.ml[67,2343+22]..[67,2343+55])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[67,2343+22]..[67,2343+30])
                                                          Pexp_ident "AMap.add" (lambda/switch.ml[67,2343+22]..[67,2343+30])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[67,2343+31]..[67,2343+34])
                                                              Pexp_ident "key" (lambda/switch.ml[67,2343+31]..[67,2343+34])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[67,2343+35]..[67,2343+48])
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/switch.ml[67,2343+36]..[67,2343+45])
                                                                  Pexp_ident "mustshare" (lambda/switch.ml[67,2343+36]..[67,2343+45])
                                                                expression (lambda/switch.ml[67,2343+46]..[67,2343+47])
                                                                  Pexp_ident "i" (lambda/switch.ml[67,2343+46]..[67,2343+47])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[67,2343+49]..[67,2343+55])
                                                              Pexp_field
                                                              expression (lambda/switch.ml[67,2343+49]..[67,2343+51])
                                                                Pexp_ident "st" (lambda/switch.ml[67,2343+49]..[67,2343+51])
                                                              "map" (lambda/switch.ml[67,2343+52]..[67,2343+55])
                                                        ]
                                                    expression (lambda/switch.ml[68,2401+12]..[68,2401+13])
                                                      Pexp_ident "i" (lambda/switch.ml[68,2401+12]..[68,2401+13])
                                            ]
                                        <case>
                                          pattern (lambda/switch.ml[70,2429+8]..[70,2429+12])
                                            Ppat_construct "None" (lambda/switch.ml[70,2429+8]..[70,2429+12])
                                            None
                                          expression (lambda/switch.ml[71,2445+10]..[71,2445+27])
                                            Pexp_apply
                                            expression (lambda/switch.ml[71,2445+10]..[71,2445+13])
                                              Pexp_ident "add" (lambda/switch.ml[71,2445+10]..[71,2445+13])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[71,2445+14]..[71,2445+23])
                                                  Pexp_ident "mustshare" (lambda/switch.ml[71,2445+14]..[71,2445+23])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[71,2445+24]..[71,2445+27])
                                                  Pexp_ident "act" (lambda/switch.ml[71,2445+24]..[71,2445+27])
                                            ]
                                      ]
                            <def>
                              pattern (lambda/switch.ml[73,2474+8]..[73,2474+11])
                                Ppat_var "get" (lambda/switch.ml[73,2474+8]..[73,2474+11])
                              expression (lambda/switch.ml[73,2474+12]..[73,2474+74]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/switch.ml[73,2474+12]..[73,2474+14])
                                  Ppat_construct "()" (lambda/switch.ml[73,2474+12]..[73,2474+14])
                                  None
                                expression (lambda/switch.ml[73,2474+17]..[73,2474+74])
                                  Pexp_apply
                                  expression (lambda/switch.ml[73,2474+17]..[73,2474+30])
                                    Pexp_ident "Array.of_list" (lambda/switch.ml[73,2474+17]..[73,2474+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[73,2474+31]..[73,2474+74])
                                        Pexp_apply
                                        expression (lambda/switch.ml[73,2474+32]..[73,2474+44])
                                          Pexp_ident "List.rev_map" (lambda/switch.ml[73,2474+32]..[73,2474+44])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[73,2474+45]..[73,2474+65])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lambda/switch.ml[73,2474+50]..[73,2474+57])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/switch.ml[73,2474+51]..[73,2474+52])
                                                    Ppat_any
                                                  pattern (lambda/switch.ml[73,2474+53]..[73,2474+56])
                                                    Ppat_var "act" (lambda/switch.ml[73,2474+53]..[73,2474+56])
                                                ]
                                              expression (lambda/switch.ml[73,2474+61]..[73,2474+64])
                                                Pexp_ident "act" (lambda/switch.ml[73,2474+61]..[73,2474+64])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[73,2474+66]..[73,2474+73])
                                              Pexp_field
                                              expression (lambda/switch.ml[73,2474+66]..[73,2474+68])
                                                Pexp_ident "st" (lambda/switch.ml[73,2474+66]..[73,2474+68])
                                              "acts" (lambda/switch.ml[73,2474+69]..[73,2474+73])
                                        ]
                                  ]
                            <def>
                              pattern (lambda/switch.ml[75,2550+8]..[75,2550+18])
                                Ppat_var "get_shared" (lambda/switch.ml[75,2550+8]..[75,2550+18])
                              expression (lambda/switch.ml[75,2550+19]..[88,2946+10]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/switch.ml[75,2550+19]..[75,2550+21])
                                  Ppat_construct "()" (lambda/switch.ml[75,2550+19]..[75,2550+21])
                                  None
                                expression (lambda/switch.ml[76,2574+6]..[88,2946+10])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/switch.ml[76,2574+10]..[76,2574+14])
                                        Ppat_var "acts" (lambda/switch.ml[76,2574+10]..[76,2574+14])
                                      expression (lambda/switch.ml[77,2591+8]..[81,2730+21])
                                        Pexp_apply
                                        expression (lambda/switch.ml[77,2591+8]..[77,2591+21])
                                          Pexp_ident "Array.of_list" (lambda/switch.ml[77,2591+8]..[77,2591+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[78,2613+10]..[81,2730+21])
                                              Pexp_apply
                                              expression (lambda/switch.ml[78,2613+11]..[78,2613+23])
                                                Pexp_ident "List.rev_map" (lambda/switch.ml[78,2613+11]..[78,2613+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[79,2637+13]..[80,2671+58])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (lambda/switch.ml[79,2637+18]..[79,2637+30])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/switch.ml[79,2637+19]..[79,2637+25])
                                                          Ppat_var "shared" (lambda/switch.ml[79,2637+19]..[79,2637+25])
                                                        pattern (lambda/switch.ml[79,2637+26]..[79,2637+29])
                                                          Ppat_var "act" (lambda/switch.ml[79,2637+26]..[79,2637+29])
                                                      ]
                                                    expression (lambda/switch.ml[80,2671+16]..[80,2671+57])
                                                      Pexp_ifthenelse
                                                      expression (lambda/switch.ml[80,2671+19]..[80,2671+25])
                                                        Pexp_ident "shared" (lambda/switch.ml[80,2671+19]..[80,2671+25])
                                                      expression (lambda/switch.ml[80,2671+31]..[80,2671+41])
                                                        Pexp_construct "Shared" (lambda/switch.ml[80,2671+31]..[80,2671+37])
                                                        Some
                                                          expression (lambda/switch.ml[80,2671+38]..[80,2671+41])
                                                            Pexp_ident "act" (lambda/switch.ml[80,2671+38]..[80,2671+41])
                                                      Some
                                                        expression (lambda/switch.ml[80,2671+47]..[80,2671+57])
                                                          Pexp_construct "Single" (lambda/switch.ml[80,2671+47]..[80,2671+53])
                                                          Some
                                                            expression (lambda/switch.ml[80,2671+54]..[80,2671+57])
                                                              Pexp_ident "act" (lambda/switch.ml[80,2671+54]..[80,2671+57])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[81,2730+13]..[81,2730+20])
                                                    Pexp_field
                                                    expression (lambda/switch.ml[81,2730+13]..[81,2730+15])
                                                      Pexp_ident "st" (lambda/switch.ml[81,2730+13]..[81,2730+15])
                                                    "acts" (lambda/switch.ml[81,2730+16]..[81,2730+20])
                                              ]
                                        ]
                                  ]
                                  expression (lambda/switch.ml[82,2755+6]..[88,2946+10])
                                    Pexp_sequence
                                    expression (lambda/switch.ml[82,2755+6]..[87,2929+14])
                                      Pexp_apply
                                      expression (lambda/switch.ml[82,2755+6]..[82,2755+15])
                                        Pexp_ident "AMap.iter" (lambda/switch.ml[82,2755+6]..[82,2755+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[83,2771+8]..[86,2898+30])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (lambda/switch.ml[83,2771+13]..[83,2771+14])
                                              Ppat_any
                                            expression (lambda/switch.ml[83,2771+15]..[86,2898+29]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lambda/switch.ml[83,2771+15]..[83,2771+25])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/switch.ml[83,2771+16]..[83,2771+22])
                                                    Ppat_var "shared" (lambda/switch.ml[83,2771+16]..[83,2771+22])
                                                  pattern (lambda/switch.ml[83,2771+23]..[83,2771+24])
                                                    Ppat_var "i" (lambda/switch.ml[83,2771+23]..[83,2771+24])
                                                ]
                                              expression (lambda/switch.ml[84,2800+11]..[86,2898+29])
                                                Pexp_ifthenelse
                                                expression (lambda/switch.ml[84,2800+14]..[84,2800+20])
                                                  Pexp_ident "shared" (lambda/switch.ml[84,2800+14]..[84,2800+20])
                                                expression (lambda/switch.ml[84,2800+26]..[86,2898+29])
                                                  Pexp_match
                                                  expression (lambda/switch.ml[84,2800+32]..[84,2800+40])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[84,2800+32]..[84,2800+40]) ghost
                                                      Pexp_ident "Array.get" (lambda/switch.ml[84,2800+32]..[84,2800+40]) ghost
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[84,2800+32]..[84,2800+36])
                                                          Pexp_ident "acts" (lambda/switch.ml[84,2800+32]..[84,2800+36])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[84,2800+38]..[84,2800+39])
                                                          Pexp_ident "i" (lambda/switch.ml[84,2800+38]..[84,2800+39])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (lambda/switch.ml[85,2846+15]..[85,2846+25])
                                                        Ppat_construct "Single" (lambda/switch.ml[85,2846+15]..[85,2846+21])
                                                        Some
                                                          []
                                                          pattern (lambda/switch.ml[85,2846+22]..[85,2846+25])
                                                            Ppat_var "act" (lambda/switch.ml[85,2846+22]..[85,2846+25])
                                                      expression (lambda/switch.ml[85,2846+29]..[85,2846+51])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[85,2846+29]..[85,2846+51]) ghost
                                                          Pexp_ident "Array.set" (lambda/switch.ml[85,2846+29]..[85,2846+51]) ghost
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[85,2846+29]..[85,2846+33])
                                                              Pexp_ident "acts" (lambda/switch.ml[85,2846+29]..[85,2846+33])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[85,2846+35]..[85,2846+36])
                                                              Pexp_ident "i" (lambda/switch.ml[85,2846+35]..[85,2846+36])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[85,2846+41]..[85,2846+51])
                                                              Pexp_construct "Shared" (lambda/switch.ml[85,2846+41]..[85,2846+47])
                                                              Some
                                                                expression (lambda/switch.ml[85,2846+48]..[85,2846+51])
                                                                  Pexp_ident "act" (lambda/switch.ml[85,2846+48]..[85,2846+51])
                                                        ]
                                                    <case>
                                                      pattern (lambda/switch.ml[86,2898+15]..[86,2898+23])
                                                        Ppat_construct "Shared" (lambda/switch.ml[86,2898+15]..[86,2898+21])
                                                        Some
                                                          []
                                                          pattern (lambda/switch.ml[86,2898+22]..[86,2898+23])
                                                            Ppat_any
                                                      expression (lambda/switch.ml[86,2898+27]..[86,2898+29])
                                                        Pexp_construct "()" (lambda/switch.ml[86,2898+27]..[86,2898+29])
                                                        None
                                                  ]
                                                None
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[87,2929+8]..[87,2929+14])
                                            Pexp_field
                                            expression (lambda/switch.ml[87,2929+8]..[87,2929+10])
                                              Pexp_ident "st" (lambda/switch.ml[87,2929+8]..[87,2929+10])
                                            "map" (lambda/switch.ml[87,2929+11]..[87,2929+14])
                                      ]
                                    expression (lambda/switch.ml[88,2946+6]..[88,2946+10])
                                      Pexp_ident "acts" (lambda/switch.ml[88,2946+6]..[88,2946+10])
                          ]
                          expression (lambda/switch.ml[89,2960+4]..[90,3023+50])
                            Pexp_record
                            [
                              "act_store" (lambda/switch.ml[89,2960+5]..[89,2960+14])
                                expression (lambda/switch.ml[89,2960+17]..[89,2960+28])
                                  Pexp_apply
                                  expression (lambda/switch.ml[89,2960+17]..[89,2960+22])
                                    Pexp_ident "store" (lambda/switch.ml[89,2960+17]..[89,2960+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[89,2960+23]..[89,2960+28])
                                        Pexp_construct "false" (lambda/switch.ml[89,2960+23]..[89,2960+28])
                                        None
                                  ]
                              "act_store_shared" (lambda/switch.ml[89,2960+31]..[89,2960+47])
                                expression (lambda/switch.ml[89,2960+50]..[89,2960+60])
                                  Pexp_apply
                                  expression (lambda/switch.ml[89,2960+50]..[89,2960+55])
                                    Pexp_ident "store" (lambda/switch.ml[89,2960+50]..[89,2960+55])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[89,2960+56]..[89,2960+60])
                                        Pexp_construct "true" (lambda/switch.ml[89,2960+56]..[89,2960+60])
                                        None
                                  ]
                              "act_get" (lambda/switch.ml[90,3023+5]..[90,3023+12])
                                expression (lambda/switch.ml[90,3023+15]..[90,3023+18])
                                  Pexp_ident "get" (lambda/switch.ml[90,3023+15]..[90,3023+18])
                              "act_get_shared" (lambda/switch.ml[90,3023+20]..[90,3023+34])
                                expression (lambda/switch.ml[90,3023+37]..[90,3023+47])
                                  Pexp_ident "get_shared" (lambda/switch.ml[90,3023+37]..[90,3023+47])
                            ]
                            None
              ]
          ]
  structure_item (lambda/switch.ml[93,3079+0]..[103,3276+3])
    Pstr_module
    "Store" (lambda/switch.ml[93,3079+7]..[93,3079+12])
      module_expr (lambda/switch.ml[93,3079+12]..[103,3276+3])
        Pmod_functor "A" (lambda/switch.ml[93,3079+13]..[93,3079+14])
        module_type (lambda/switch.ml[93,3079+15]..[93,3079+21])
          Pmty_ident "Stored" (lambda/switch.ml[93,3079+15]..[93,3079+21])
        module_expr (lambda/switch.ml[93,3079+25]..[103,3276+3])
          Pmod_structure
          [
            structure_item (lambda/switch.ml[94,3111+2]..[100,3235+10])
              Pstr_module
              "Me" (lambda/switch.ml[94,3111+9]..[94,3111+11])
                module_expr (lambda/switch.ml[95,3125+4]..[100,3235+10])
                  Pmod_apply
                  module_expr (lambda/switch.ml[95,3125+4]..[95,3125+12])
                    Pmod_ident "CtxStore" (lambda/switch.ml[95,3125+4]..[95,3125+12])
                  module_expr (lambda/switch.ml[96,3138+7]..[100,3235+9])
                    Pmod_structure
                    [
                      structure_item (lambda/switch.ml[97,3152+8]..[97,3152+17])
                        Pstr_include                        module_expr (lambda/switch.ml[97,3152+16]..[97,3152+17])
                          Pmod_ident "A" (lambda/switch.ml[97,3152+16]..[97,3152+17])
                      structure_item (lambda/switch.ml[98,3170+8]..[98,3170+27])
                        Pstr_type Rec
                        [
                          type_declaration "context" (lambda/switch.ml[98,3170+13]..[98,3170+20]) (lambda/switch.ml[98,3170+8]..[98,3170+27])
                            ptype_params =
                              []
                            ptype_cstrs =
                              []
                            ptype_kind =
                              Ptype_abstract
                            ptype_private = Public
                            ptype_manifest =
                              Some
                                core_type (lambda/switch.ml[98,3170+23]..[98,3170+27])
                                  Ptyp_constr "unit" (lambda/switch.ml[98,3170+23]..[98,3170+27])
                                  []
                        ]
                      structure_item (lambda/switch.ml[99,3198+8]..[99,3198+36])
                        Pstr_value Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[99,3198+12]..[99,3198+20])
                              Ppat_var "make_key" (lambda/switch.ml[99,3198+12]..[99,3198+20])
                            expression (lambda/switch.ml[99,3198+21]..[99,3198+36]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/switch.ml[99,3198+21]..[99,3198+23])
                                Ppat_construct "()" (lambda/switch.ml[99,3198+21]..[99,3198+23])
                                None
                              expression (lambda/switch.ml[99,3198+26]..[99,3198+36])
                                Pexp_ident "A.make_key" (lambda/switch.ml[99,3198+26]..[99,3198+36])
                        ]
                    ]
            structure_item (lambda/switch.ml[102,3247+2]..[102,3247+28])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[102,3247+6]..[102,3247+14])
                    Ppat_var "mk_store" (lambda/switch.ml[102,3247+6]..[102,3247+14])
                  expression (lambda/switch.ml[102,3247+17]..[102,3247+28])
                    Pexp_ident "Me.mk_store" (lambda/switch.ml[102,3247+17]..[102,3247+28])
              ]
          ]
  structure_item (lambda/switch.ml[107,3283+0]..[129,3894+3])
    Pstr_modtype "S" (lambda/switch.ml[107,3283+12]..[107,3283+13])
      module_type (lambda/switch.ml[108,3299+0]..[129,3894+3])
        Pmty_signature
        [
          signature_item (lambda/switch.ml[109,3303+2]..[109,3303+16])
            Psig_type Rec
            [
              type_declaration "primitive" (lambda/switch.ml[109,3303+7]..[109,3303+16]) (lambda/switch.ml[109,3303+2]..[109,3303+16])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (lambda/switch.ml[110,3320+2]..[110,3320+23])
            Psig_value
            value_description "eqint" (lambda/switch.ml[110,3320+6]..[110,3320+11]) (lambda/switch.ml[110,3320+2]..[110,3320+23])
              core_type (lambda/switch.ml[110,3320+14]..[110,3320+23])
                Ptyp_constr "primitive" (lambda/switch.ml[110,3320+14]..[110,3320+23])
                []
              []
          signature_item (lambda/switch.ml[111,3344+2]..[111,3344+23])
            Psig_value
            value_description "neint" (lambda/switch.ml[111,3344+6]..[111,3344+11]) (lambda/switch.ml[111,3344+2]..[111,3344+23])
              core_type (lambda/switch.ml[111,3344+14]..[111,3344+23])
                Ptyp_constr "primitive" (lambda/switch.ml[111,3344+14]..[111,3344+23])
                []
              []
          signature_item (lambda/switch.ml[112,3368+2]..[112,3368+23])
            Psig_value
            value_description "leint" (lambda/switch.ml[112,3368+6]..[112,3368+11]) (lambda/switch.ml[112,3368+2]..[112,3368+23])
              core_type (lambda/switch.ml[112,3368+14]..[112,3368+23])
                Ptyp_constr "primitive" (lambda/switch.ml[112,3368+14]..[112,3368+23])
                []
              []
          signature_item (lambda/switch.ml[113,3392+2]..[113,3392+23])
            Psig_value
            value_description "ltint" (lambda/switch.ml[113,3392+6]..[113,3392+11]) (lambda/switch.ml[113,3392+2]..[113,3392+23])
              core_type (lambda/switch.ml[113,3392+14]..[113,3392+23])
                Ptyp_constr "primitive" (lambda/switch.ml[113,3392+14]..[113,3392+23])
                []
              []
          signature_item (lambda/switch.ml[114,3416+2]..[114,3416+23])
            Psig_value
            value_description "geint" (lambda/switch.ml[114,3416+6]..[114,3416+11]) (lambda/switch.ml[114,3416+2]..[114,3416+23])
              core_type (lambda/switch.ml[114,3416+14]..[114,3416+23])
                Ptyp_constr "primitive" (lambda/switch.ml[114,3416+14]..[114,3416+23])
                []
              []
          signature_item (lambda/switch.ml[115,3440+2]..[115,3440+23])
            Psig_value
            value_description "gtint" (lambda/switch.ml[115,3440+6]..[115,3440+11]) (lambda/switch.ml[115,3440+2]..[115,3440+23])
              core_type (lambda/switch.ml[115,3440+14]..[115,3440+23])
                Ptyp_constr "primitive" (lambda/switch.ml[115,3440+14]..[115,3440+23])
                []
              []
          signature_item (lambda/switch.ml[116,3464+2]..[116,3464+10])
            Psig_type Rec
            [
              type_declaration "act" (lambda/switch.ml[116,3464+7]..[116,3464+10]) (lambda/switch.ml[116,3464+2]..[116,3464+10])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (lambda/switch.ml[117,3475+2]..[117,3475+10])
            Psig_type Rec
            [
              type_declaration "loc" (lambda/switch.ml[117,3475+7]..[117,3475+10]) (lambda/switch.ml[117,3475+2]..[117,3475+10])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (lambda/switch.ml[119,3487+2]..[119,3487+39])
            Psig_value
            value_description "bind" (lambda/switch.ml[119,3487+6]..[119,3487+10]) (lambda/switch.ml[119,3487+2]..[119,3487+39])
              core_type (lambda/switch.ml[119,3487+13]..[119,3487+39])
                Ptyp_arrow
                Nolabel
                core_type (lambda/switch.ml[119,3487+13]..[119,3487+16])
                  Ptyp_constr "act" (lambda/switch.ml[119,3487+13]..[119,3487+16])
                  []
                core_type (lambda/switch.ml[119,3487+20]..[119,3487+39])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/switch.ml[119,3487+21]..[119,3487+31])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/switch.ml[119,3487+21]..[119,3487+24])
                      Ptyp_constr "act" (lambda/switch.ml[119,3487+21]..[119,3487+24])
                      []
                    core_type (lambda/switch.ml[119,3487+28]..[119,3487+31])
                      Ptyp_constr "act" (lambda/switch.ml[119,3487+28]..[119,3487+31])
                      []
                  core_type (lambda/switch.ml[119,3487+36]..[119,3487+39])
                    Ptyp_constr "act" (lambda/switch.ml[119,3487+36]..[119,3487+39])
                    []
              []
          signature_item (lambda/switch.ml[120,3527+2]..[120,3527+29])
            Psig_value
            value_description "make_const" (lambda/switch.ml[120,3527+6]..[120,3527+16]) (lambda/switch.ml[120,3527+2]..[120,3527+29])
              core_type (lambda/switch.ml[120,3527+19]..[120,3527+29])
                Ptyp_arrow
                Nolabel
                core_type (lambda/switch.ml[120,3527+19]..[120,3527+22])
                  Ptyp_constr "int" (lambda/switch.ml[120,3527+19]..[120,3527+22])
                  []
                core_type (lambda/switch.ml[120,3527+26]..[120,3527+29])
                  Ptyp_constr "act" (lambda/switch.ml[120,3527+26]..[120,3527+29])
                  []
              []
          signature_item (lambda/switch.ml[121,3557+2]..[121,3557+37])
            Psig_value
            value_description "make_offset" (lambda/switch.ml[121,3557+6]..[121,3557+17]) (lambda/switch.ml[121,3557+2]..[121,3557+37])
              core_type (lambda/switch.ml[121,3557+20]..[121,3557+37])
                Ptyp_arrow
                Nolabel
                core_type (lambda/switch.ml[121,3557+20]..[121,3557+23])
                  Ptyp_constr "act" (lambda/switch.ml[121,3557+20]..[121,3557+23])
                  []
                core_type (lambda/switch.ml[121,3557+27]..[121,3557+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/switch.ml[121,3557+27]..[121,3557+30])
                    Ptyp_constr "int" (lambda/switch.ml[121,3557+27]..[121,3557+30])
                    []
                  core_type (lambda/switch.ml[121,3557+34]..[121,3557+37])
                    Ptyp_constr "act" (lambda/switch.ml[121,3557+34]..[121,3557+37])
                    []
              []
          signature_item (lambda/switch.ml[122,3595+2]..[122,3595+46])
            Psig_value
            value_description "make_prim" (lambda/switch.ml[122,3595+6]..[122,3595+15]) (lambda/switch.ml[122,3595+2]..[122,3595+46])
              core_type (lambda/switch.ml[122,3595+18]..[122,3595+46])
                Ptyp_arrow
                Nolabel
                core_type (lambda/switch.ml[122,3595+18]..[122,3595+27])
                  Ptyp_constr "primitive" (lambda/switch.ml[122,3595+18]..[122,3595+27])
                  []
                core_type (lambda/switch.ml[122,3595+31]..[122,3595+46])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/switch.ml[122,3595+31]..[122,3595+39])
                    Ptyp_constr "list" (lambda/switch.ml[122,3595+35]..[122,3595+39])
                    [
                      core_type (lambda/switch.ml[122,3595+31]..[122,3595+34])
                        Ptyp_constr "act" (lambda/switch.ml[122,3595+31]..[122,3595+34])
                        []
                    ]
                  core_type (lambda/switch.ml[122,3595+43]..[122,3595+46])
                    Ptyp_constr "act" (lambda/switch.ml[122,3595+43]..[122,3595+46])
                    []
              []
          signature_item (lambda/switch.ml[123,3642+2]..[123,3642+36])
            Psig_value
            value_description "make_isout" (lambda/switch.ml[123,3642+6]..[123,3642+16]) (lambda/switch.ml[123,3642+2]..[123,3642+36])
              core_type (lambda/switch.ml[123,3642+19]..[123,3642+36])
                Ptyp_arrow
                Nolabel
                core_type (lambda/switch.ml[123,3642+19]..[123,3642+22])
                  Ptyp_constr "act" (lambda/switch.ml[123,3642+19]..[123,3642+22])
                  []
                core_type (lambda/switch.ml[123,3642+26]..[123,3642+36])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/switch.ml[123,3642+26]..[123,3642+29])
                    Ptyp_constr "act" (lambda/switch.ml[123,3642+26]..[123,3642+29])
                    []
                  core_type (lambda/switch.ml[123,3642+33]..[123,3642+36])
                    Ptyp_constr "act" (lambda/switch.ml[123,3642+33]..[123,3642+36])
                    []
              []
          signature_item (lambda/switch.ml[124,3679+2]..[124,3679+35])
            Psig_value
            value_description "make_isin" (lambda/switch.ml[124,3679+6]..[124,3679+15]) (lambda/switch.ml[124,3679+2]..[124,3679+35])
              core_type (lambda/switch.ml[124,3679+18]..[124,3679+35])
                Ptyp_arrow
                Nolabel
                core_type (lambda/switch.ml[124,3679+18]..[124,3679+21])
                  Ptyp_constr "act" (lambda/switch.ml[124,3679+18]..[124,3679+21])
                  []
                core_type (lambda/switch.ml[124,3679+25]..[124,3679+35])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/switch.ml[124,3679+25]..[124,3679+28])
                    Ptyp_constr "act" (lambda/switch.ml[124,3679+25]..[124,3679+28])
                    []
                  core_type (lambda/switch.ml[124,3679+32]..[124,3679+35])
                    Ptyp_constr "act" (lambda/switch.ml[124,3679+32]..[124,3679+35])
                    []
              []
          signature_item (lambda/switch.ml[125,3715+2]..[125,3715+40])
            Psig_value
            value_description "make_if" (lambda/switch.ml[125,3715+6]..[125,3715+13]) (lambda/switch.ml[125,3715+2]..[125,3715+40])
              core_type (lambda/switch.ml[125,3715+16]..[125,3715+40])
                Ptyp_arrow
                Nolabel
                core_type (lambda/switch.ml[125,3715+16]..[125,3715+19])
                  Ptyp_constr "act" (lambda/switch.ml[125,3715+16]..[125,3715+19])
                  []
                core_type (lambda/switch.ml[125,3715+23]..[125,3715+40])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/switch.ml[125,3715+23]..[125,3715+26])
                    Ptyp_constr "act" (lambda/switch.ml[125,3715+23]..[125,3715+26])
                    []
                  core_type (lambda/switch.ml[125,3715+30]..[125,3715+40])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/switch.ml[125,3715+30]..[125,3715+33])
                      Ptyp_constr "act" (lambda/switch.ml[125,3715+30]..[125,3715+33])
                      []
                    core_type (lambda/switch.ml[125,3715+37]..[125,3715+40])
                      Ptyp_constr "act" (lambda/switch.ml[125,3715+37]..[125,3715+40])
                      []
              []
          signature_item (lambda/switch.ml[126,3756+2]..[126,3756+63])
            Psig_value
            value_description "make_switch" (lambda/switch.ml[126,3756+6]..[126,3756+17]) (lambda/switch.ml[126,3756+2]..[126,3756+63])
              core_type (lambda/switch.ml[126,3756+20]..[126,3756+63])
                Ptyp_arrow
                Nolabel
                core_type (lambda/switch.ml[126,3756+20]..[126,3756+23])
                  Ptyp_constr "loc" (lambda/switch.ml[126,3756+20]..[126,3756+23])
                  []
                core_type (lambda/switch.ml[126,3756+27]..[126,3756+63])
                  Ptyp_arrow
                  Nolabel
                  core_type (lambda/switch.ml[126,3756+27]..[126,3756+30])
                    Ptyp_constr "act" (lambda/switch.ml[126,3756+27]..[126,3756+30])
                    []
                  core_type (lambda/switch.ml[126,3756+34]..[126,3756+63])
                    Ptyp_arrow
                    Nolabel
                    core_type (lambda/switch.ml[126,3756+34]..[126,3756+43])
                      Ptyp_constr "array" (lambda/switch.ml[126,3756+38]..[126,3756+43])
                      [
                        core_type (lambda/switch.ml[126,3756+34]..[126,3756+37])
                          Ptyp_constr "int" (lambda/switch.ml[126,3756+34]..[126,3756+37])
                          []
                      ]
                    core_type (lambda/switch.ml[126,3756+47]..[126,3756+63])
                      Ptyp_arrow
                      Nolabel
                      core_type (lambda/switch.ml[126,3756+47]..[126,3756+56])
                        Ptyp_constr "array" (lambda/switch.ml[126,3756+51]..[126,3756+56])
                        [
                          core_type (lambda/switch.ml[126,3756+47]..[126,3756+50])
                            Ptyp_constr "act" (lambda/switch.ml[126,3756+47]..[126,3756+50])
                            []
                        ]
                      core_type (lambda/switch.ml[126,3756+60]..[126,3756+63])
                        Ptyp_constr "act" (lambda/switch.ml[126,3756+60]..[126,3756+63])
                        []
              []
          signature_item (lambda/switch.ml[127,3820+2]..[127,3820+44])
            Psig_value
            value_description "make_catch" (lambda/switch.ml[127,3820+6]..[127,3820+16]) (lambda/switch.ml[127,3820+2]..[127,3820+44])
              core_type (lambda/switch.ml[127,3820+19]..[127,3820+44])
                Ptyp_arrow
                Nolabel
                core_type (lambda/switch.ml[127,3820+19]..[127,3820+22])
                  Ptyp_constr "act" (lambda/switch.ml[127,3820+19]..[127,3820+22])
                  []
                core_type (lambda/switch.ml[127,3820+26]..[127,3820+44])
                  Ptyp_tuple
                  [
                    core_type (lambda/switch.ml[127,3820+26]..[127,3820+29])
                      Ptyp_constr "int" (lambda/switch.ml[127,3820+26]..[127,3820+29])
                      []
                    core_type (lambda/switch.ml[127,3820+33]..[127,3820+43])
                      Ptyp_arrow
                      Nolabel
                      core_type (lambda/switch.ml[127,3820+33]..[127,3820+36])
                        Ptyp_constr "act" (lambda/switch.ml[127,3820+33]..[127,3820+36])
                        []
                      core_type (lambda/switch.ml[127,3820+40]..[127,3820+43])
                        Ptyp_constr "act" (lambda/switch.ml[127,3820+40]..[127,3820+43])
                        []
                  ]
              []
          signature_item (lambda/switch.ml[128,3865+2]..[128,3865+28])
            Psig_value
            value_description "make_exit" (lambda/switch.ml[128,3865+6]..[128,3865+15]) (lambda/switch.ml[128,3865+2]..[128,3865+28])
              core_type (lambda/switch.ml[128,3865+18]..[128,3865+28])
                Ptyp_arrow
                Nolabel
                core_type (lambda/switch.ml[128,3865+18]..[128,3865+21])
                  Ptyp_constr "int" (lambda/switch.ml[128,3865+18]..[128,3865+21])
                  []
                core_type (lambda/switch.ml[128,3865+25]..[128,3865+28])
                  Ptyp_constr "act" (lambda/switch.ml[128,3865+25]..[128,3865+28])
                  []
              []
        ]
  structure_item (lambda/switch.ml[151,4601+0]..[876,24660+3])
    Pstr_module
    "Make" (lambda/switch.ml[151,4601+7]..[151,4601+11])
      module_expr (lambda/switch.ml[151,4601+12]..[876,24660+3])
        Pmod_functor "Arg" (lambda/switch.ml[151,4601+13]..[151,4601+16])
        module_type (lambda/switch.ml[151,4601+19]..[151,4601+20])
          Pmty_ident "S" (lambda/switch.ml[151,4601+19]..[151,4601+20])
        module_expr (lambda/switch.ml[152,4625+0]..[876,24660+3])
          Pmod_structure
          [
            structure_item (lambda/switch.ml[154,4633+2]..[156,4690+24])
              Pstr_type Rec
              [
                type_declaration "inter" (lambda/switch.ml[154,4633+10]..[154,4633+15]) (lambda/switch.ml[154,4633+2]..[156,4690+24])
                  ptype_params =
                    [
                      core_type (lambda/switch.ml[154,4633+7]..[154,4633+9])
                        Ptyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (lambda/switch.ml[155,4651+5]..[155,4651+38])
                          Immutable
                          "cases" (lambda/switch.ml[155,4651+5]..[155,4651+10])                          core_type (lambda/switch.ml[155,4651+13]..[155,4651+36])
                            Ptyp_constr "array" (lambda/switch.ml[155,4651+31]..[155,4651+36])
                            [
                              core_type (lambda/switch.ml[155,4651+14]..[155,4651+29])
                                Ptyp_tuple
                                [
                                  core_type (lambda/switch.ml[155,4651+14]..[155,4651+17])
                                    Ptyp_constr "int" (lambda/switch.ml[155,4651+14]..[155,4651+17])
                                    []
                                  core_type (lambda/switch.ml[155,4651+20]..[155,4651+23])
                                    Ptyp_constr "int" (lambda/switch.ml[155,4651+20]..[155,4651+23])
                                    []
                                  core_type (lambda/switch.ml[155,4651+26]..[155,4651+29])
                                    Ptyp_constr "int" (lambda/switch.ml[155,4651+26]..[155,4651+29])
                                    []
                                ]
                            ]
                        (lambda/switch.ml[156,4690+5]..[156,4690+23])
                          Immutable
                          "actions" (lambda/switch.ml[156,4690+5]..[156,4690+12])                          core_type (lambda/switch.ml[156,4690+15]..[156,4690+23])
                            Ptyp_constr "array" (lambda/switch.ml[156,4690+18]..[156,4690+23])
                            [
                              core_type (lambda/switch.ml[156,4690+15]..[156,4690+17])
                                Ptyp_var a
                            ]
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lambda/switch.ml[158,4716+2]..[158,4716+41])
              Pstr_type Rec
              [
                type_declaration "t_ctx" (lambda/switch.ml[158,4716+10]..[158,4716+15]) (lambda/switch.ml[158,4716+2]..[158,4716+41])
                  ptype_params =
                    [
                      core_type (lambda/switch.ml[158,4716+7]..[158,4716+9])
                        Ptyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (lambda/switch.ml[158,4716+20]..[158,4716+31])
                          Immutable
                          "off" (lambda/switch.ml[158,4716+20]..[158,4716+23])                          core_type (lambda/switch.ml[158,4716+26]..[158,4716+29])
                            Ptyp_constr "int" (lambda/switch.ml[158,4716+26]..[158,4716+29])
                            []
                        (lambda/switch.ml[158,4716+32]..[158,4716+40])
                          Immutable
                          "arg" (lambda/switch.ml[158,4716+32]..[158,4716+35])                          core_type (lambda/switch.ml[158,4716+38]..[158,4716+40])
                            Ptyp_var a
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lambda/switch.ml[160,4759+2]..[161,4777+23])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[160,4759+6]..[160,4759+9])
                    Ppat_var "cut" (lambda/switch.ml[160,4759+6]..[160,4759+9])
                  expression (lambda/switch.ml[160,4759+12]..[160,4759+17])
                    Pexp_apply
                    expression (lambda/switch.ml[160,4759+12]..[160,4759+15])
                      Pexp_ident "ref" (lambda/switch.ml[160,4759+12]..[160,4759+15])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/switch.ml[160,4759+16]..[160,4759+17])
                          Pexp_constant PConst_int (8,None)
                    ]
                <def>
                  pattern (lambda/switch.ml[161,4777+6]..[161,4777+14])
                    Ppat_var "more_cut" (lambda/switch.ml[161,4777+6]..[161,4777+14])
                  expression (lambda/switch.ml[161,4777+17]..[161,4777+23])
                    Pexp_apply
                    expression (lambda/switch.ml[161,4777+17]..[161,4777+20])
                      Pexp_ident "ref" (lambda/switch.ml[161,4777+17]..[161,4777+20])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/switch.ml[161,4777+21]..[161,4777+23])
                          Pexp_constant PConst_int (16,None)
                    ]
              ]
            structure_item (lambda/switch.ml[182,5260+2]..[187,5372+5])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[182,5260+6]..[182,5260+13])
                    Ppat_var "get_act" (lambda/switch.ml[182,5260+6]..[182,5260+13])
                  expression (lambda/switch.ml[182,5260+14]..[184,5313+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[182,5260+14]..[182,5260+19])
                      Ppat_var "cases" (lambda/switch.ml[182,5260+14]..[182,5260+19])
                    expression (lambda/switch.ml[182,5260+20]..[184,5313+5]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[182,5260+20]..[182,5260+21])
                        Ppat_var "i" (lambda/switch.ml[182,5260+20]..[182,5260+21])
                      expression (lambda/switch.ml[183,5284+4]..[184,5313+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[183,5284+8]..[183,5284+13])
                              Ppat_tuple
                              [
                                pattern (lambda/switch.ml[183,5284+8]..[183,5284+9])
                                  Ppat_any
                                pattern (lambda/switch.ml[183,5284+10]..[183,5284+11])
                                  Ppat_any
                                pattern (lambda/switch.ml[183,5284+12]..[183,5284+13])
                                  Ppat_var "r" (lambda/switch.ml[183,5284+12]..[183,5284+13])
                              ]
                            expression (lambda/switch.ml[183,5284+16]..[183,5284+25])
                              Pexp_apply
                              expression (lambda/switch.ml[183,5284+16]..[183,5284+25]) ghost
                                Pexp_ident "Array.get" (lambda/switch.ml[183,5284+16]..[183,5284+25]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[183,5284+16]..[183,5284+21])
                                    Pexp_ident "cases" (lambda/switch.ml[183,5284+16]..[183,5284+21])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[183,5284+23]..[183,5284+24])
                                    Pexp_ident "i" (lambda/switch.ml[183,5284+23]..[183,5284+24])
                              ]
                        ]
                        expression (lambda/switch.ml[184,5313+4]..[184,5313+5])
                          Pexp_ident "r" (lambda/switch.ml[184,5313+4]..[184,5313+5])
                <def>
                  pattern (lambda/switch.ml[185,5319+6]..[185,5319+13])
                    Ppat_var "get_low" (lambda/switch.ml[185,5319+6]..[185,5319+13])
                  expression (lambda/switch.ml[185,5319+14]..[187,5372+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[185,5319+14]..[185,5319+19])
                      Ppat_var "cases" (lambda/switch.ml[185,5319+14]..[185,5319+19])
                    expression (lambda/switch.ml[185,5319+20]..[187,5372+5]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[185,5319+20]..[185,5319+21])
                        Ppat_var "i" (lambda/switch.ml[185,5319+20]..[185,5319+21])
                      expression (lambda/switch.ml[186,5343+4]..[187,5372+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[186,5343+8]..[186,5343+13])
                              Ppat_tuple
                              [
                                pattern (lambda/switch.ml[186,5343+8]..[186,5343+9])
                                  Ppat_var "r" (lambda/switch.ml[186,5343+8]..[186,5343+9])
                                pattern (lambda/switch.ml[186,5343+10]..[186,5343+11])
                                  Ppat_any
                                pattern (lambda/switch.ml[186,5343+12]..[186,5343+13])
                                  Ppat_any
                              ]
                            expression (lambda/switch.ml[186,5343+16]..[186,5343+25])
                              Pexp_apply
                              expression (lambda/switch.ml[186,5343+16]..[186,5343+25]) ghost
                                Pexp_ident "Array.get" (lambda/switch.ml[186,5343+16]..[186,5343+25]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[186,5343+16]..[186,5343+21])
                                    Pexp_ident "cases" (lambda/switch.ml[186,5343+16]..[186,5343+21])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[186,5343+23]..[186,5343+24])
                                    Pexp_ident "i" (lambda/switch.ml[186,5343+23]..[186,5343+24])
                              ]
                        ]
                        expression (lambda/switch.ml[187,5372+4]..[187,5372+5])
                          Pexp_ident "r" (lambda/switch.ml[187,5372+4]..[187,5372+5])
              ]
            structure_item (lambda/switch.ml[189,5379+2]..[192,5442+3])
              Pstr_type Rec
              [
                type_declaration "ctests" (lambda/switch.ml[189,5379+7]..[189,5379+13]) (lambda/switch.ml[189,5379+2]..[192,5442+3])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (lambda/switch.ml[190,5397+4]..[190,5397+21])
                          Mutable
                          "n" (lambda/switch.ml[190,5397+12]..[190,5397+13])                          core_type (lambda/switch.ml[190,5397+16]..[190,5397+19])
                            Ptyp_constr "int" (lambda/switch.ml[190,5397+16]..[190,5397+19])
                            []
                        (lambda/switch.ml[191,5419+4]..[191,5419+22])
                          Mutable
                          "ni" (lambda/switch.ml[191,5419+12]..[191,5419+14])                          core_type (lambda/switch.ml[191,5419+17]..[191,5419+20])
                            Ptyp_constr "int" (lambda/switch.ml[191,5419+17]..[191,5419+20])
                            []
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lambda/switch.ml[194,5447+2]..[194,5447+41])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[194,5447+6]..[194,5447+14])
                    Ppat_var "too_much" (lambda/switch.ml[194,5447+6]..[194,5447+14])
                  expression (lambda/switch.ml[194,5447+17]..[194,5447+41])
                    Pexp_record
                    [
                      "n" (lambda/switch.ml[194,5447+18]..[194,5447+19])
                        expression (lambda/switch.ml[194,5447+20]..[194,5447+27])
                          Pexp_ident "max_int" (lambda/switch.ml[194,5447+20]..[194,5447+27])
                      "ni" (lambda/switch.ml[194,5447+30]..[194,5447+32])
                        expression (lambda/switch.ml[194,5447+33]..[194,5447+40])
                          Pexp_ident "max_int" (lambda/switch.ml[194,5447+33]..[194,5447+40])
                    ]
                    None
              ]
            structure_item (lambda/switch.ml[206,5682+2]..[217,5869+49])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[206,5682+6]..[206,5682+16])
                    Ppat_var "less_tests" (lambda/switch.ml[206,5682+6]..[206,5682+16])
                  expression (lambda/switch.ml[206,5682+17]..[215,5856+11]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[206,5682+17]..[206,5682+19])
                      Ppat_var "c1" (lambda/switch.ml[206,5682+17]..[206,5682+19])
                    expression (lambda/switch.ml[206,5682+20]..[215,5856+11]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[206,5682+20]..[206,5682+22])
                        Ppat_var "c2" (lambda/switch.ml[206,5682+20]..[206,5682+22])
                      expression (lambda/switch.ml[207,5707+4]..[215,5856+11])
                        Pexp_ifthenelse
                        expression (lambda/switch.ml[207,5707+7]..[207,5707+18])
                          Pexp_apply
                          expression (lambda/switch.ml[207,5707+12]..[207,5707+13])
                            Pexp_ident "<" (lambda/switch.ml[207,5707+12]..[207,5707+13])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/switch.ml[207,5707+7]..[207,5707+11])
                                Pexp_field
                                expression (lambda/switch.ml[207,5707+7]..[207,5707+9])
                                  Pexp_ident "c1" (lambda/switch.ml[207,5707+7]..[207,5707+9])
                                "n" (lambda/switch.ml[207,5707+10]..[207,5707+11])
                            <arg>
                            Nolabel
                              expression (lambda/switch.ml[207,5707+14]..[207,5707+18])
                                Pexp_field
                                expression (lambda/switch.ml[207,5707+14]..[207,5707+16])
                                  Pexp_ident "c2" (lambda/switch.ml[207,5707+14]..[207,5707+16])
                                "n" (lambda/switch.ml[207,5707+17]..[207,5707+18])
                          ]
                        expression (lambda/switch.ml[208,5731+6]..[208,5731+10])
                          Pexp_construct "true" (lambda/switch.ml[208,5731+6]..[208,5731+10])
                          None
                        Some
                          expression (lambda/switch.ml[209,5742+9]..[215,5856+11])
                            Pexp_ifthenelse
                            expression (lambda/switch.ml[209,5742+12]..[209,5742+23])
                              Pexp_apply
                              expression (lambda/switch.ml[209,5742+17]..[209,5742+18])
                                Pexp_ident "=" (lambda/switch.ml[209,5742+17]..[209,5742+18])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[209,5742+12]..[209,5742+16])
                                    Pexp_field
                                    expression (lambda/switch.ml[209,5742+12]..[209,5742+14])
                                      Pexp_ident "c1" (lambda/switch.ml[209,5742+12]..[209,5742+14])
                                    "n" (lambda/switch.ml[209,5742+15]..[209,5742+16])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[209,5742+19]..[209,5742+23])
                                    Pexp_field
                                    expression (lambda/switch.ml[209,5742+19]..[209,5742+21])
                                      Pexp_ident "c2" (lambda/switch.ml[209,5742+19]..[209,5742+21])
                                    "n" (lambda/switch.ml[209,5742+22]..[209,5742+23])
                              ]
                            expression (lambda/switch.ml[209,5742+29]..[214,5843+7])
                              Pexp_ifthenelse
                              expression (lambda/switch.ml[210,5777+9]..[210,5777+22])
                                Pexp_apply
                                expression (lambda/switch.ml[210,5777+15]..[210,5777+16])
                                  Pexp_ident "<" (lambda/switch.ml[210,5777+15]..[210,5777+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[210,5777+9]..[210,5777+14])
                                      Pexp_field
                                      expression (lambda/switch.ml[210,5777+9]..[210,5777+11])
                                        Pexp_ident "c1" (lambda/switch.ml[210,5777+9]..[210,5777+11])
                                      "ni" (lambda/switch.ml[210,5777+12]..[210,5777+14])
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[210,5777+17]..[210,5777+22])
                                      Pexp_field
                                      expression (lambda/switch.ml[210,5777+17]..[210,5777+19])
                                        Pexp_ident "c2" (lambda/switch.ml[210,5777+17]..[210,5777+19])
                                      "ni" (lambda/switch.ml[210,5777+20]..[210,5777+22])
                                ]
                              expression (lambda/switch.ml[211,5805+8]..[211,5805+12])
                                Pexp_construct "true" (lambda/switch.ml[211,5805+8]..[211,5805+12])
                                None
                              Some
                                expression (lambda/switch.ml[213,5829+8]..[213,5829+13])
                                  Pexp_construct "false" (lambda/switch.ml[213,5829+8]..[213,5829+13])
                                  None
                            Some
                              expression (lambda/switch.ml[215,5856+6]..[215,5856+11])
                                Pexp_construct "false" (lambda/switch.ml[215,5856+6]..[215,5856+11])
                                None
                <def>
                  pattern (lambda/switch.ml[217,5869+6]..[217,5869+14])
                    Ppat_var "eq_tests" (lambda/switch.ml[217,5869+6]..[217,5869+14])
                  expression (lambda/switch.ml[217,5869+15]..[217,5869+49]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[217,5869+15]..[217,5869+17])
                      Ppat_var "c1" (lambda/switch.ml[217,5869+15]..[217,5869+17])
                    expression (lambda/switch.ml[217,5869+18]..[217,5869+49]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[217,5869+18]..[217,5869+20])
                        Ppat_var "c2" (lambda/switch.ml[217,5869+18]..[217,5869+20])
                      expression (lambda/switch.ml[217,5869+23]..[217,5869+49])
                        Pexp_apply
                        expression (lambda/switch.ml[217,5869+35]..[217,5869+37])
                          Pexp_ident "&&" (lambda/switch.ml[217,5869+35]..[217,5869+37])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/switch.ml[217,5869+23]..[217,5869+34])
                              Pexp_apply
                              expression (lambda/switch.ml[217,5869+28]..[217,5869+29])
                                Pexp_ident "=" (lambda/switch.ml[217,5869+28]..[217,5869+29])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[217,5869+23]..[217,5869+27])
                                    Pexp_field
                                    expression (lambda/switch.ml[217,5869+23]..[217,5869+25])
                                      Pexp_ident "c1" (lambda/switch.ml[217,5869+23]..[217,5869+25])
                                    "n" (lambda/switch.ml[217,5869+26]..[217,5869+27])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[217,5869+30]..[217,5869+34])
                                    Pexp_field
                                    expression (lambda/switch.ml[217,5869+30]..[217,5869+32])
                                      Pexp_ident "c2" (lambda/switch.ml[217,5869+30]..[217,5869+32])
                                    "n" (lambda/switch.ml[217,5869+33]..[217,5869+34])
                              ]
                          <arg>
                          Nolabel
                            expression (lambda/switch.ml[217,5869+38]..[217,5869+49])
                              Pexp_apply
                              expression (lambda/switch.ml[217,5869+43]..[217,5869+44])
                                Pexp_ident "=" (lambda/switch.ml[217,5869+43]..[217,5869+44])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[217,5869+38]..[217,5869+43])
                                    Pexp_field
                                    expression (lambda/switch.ml[217,5869+38]..[217,5869+40])
                                      Pexp_ident "c1" (lambda/switch.ml[217,5869+38]..[217,5869+40])
                                    "ni" (lambda/switch.ml[217,5869+41]..[217,5869+43])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[217,5869+44]..[217,5869+49])
                                    Pexp_field
                                    expression (lambda/switch.ml[217,5869+44]..[217,5869+46])
                                      Pexp_ident "c2" (lambda/switch.ml[217,5869+44]..[217,5869+46])
                                    "ni" (lambda/switch.ml[217,5869+47]..[217,5869+49])
                              ]
                        ]
              ]
            structure_item (lambda/switch.ml[219,5920+2]..[223,6014+22])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[219,5920+6]..[219,5920+16])
                    Ppat_var "less2tests" (lambda/switch.ml[219,5920+6]..[219,5920+16])
                  expression (lambda/switch.ml[219,5920+17]..[223,6014+22]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[219,5920+17]..[219,5920+24])
                      Ppat_tuple
                      [
                        pattern (lambda/switch.ml[219,5920+18]..[219,5920+20])
                          Ppat_var "c1" (lambda/switch.ml[219,5920+18]..[219,5920+20])
                        pattern (lambda/switch.ml[219,5920+21]..[219,5920+23])
                          Ppat_var "d1" (lambda/switch.ml[219,5920+21]..[219,5920+23])
                      ]
                    expression (lambda/switch.ml[219,5920+25]..[223,6014+22]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[219,5920+25]..[219,5920+32])
                        Ppat_tuple
                        [
                          pattern (lambda/switch.ml[219,5920+26]..[219,5920+28])
                            Ppat_var "c2" (lambda/switch.ml[219,5920+26]..[219,5920+28])
                          pattern (lambda/switch.ml[219,5920+29]..[219,5920+31])
                            Ppat_var "d2" (lambda/switch.ml[219,5920+29]..[219,5920+31])
                        ]
                      expression (lambda/switch.ml[220,5955+4]..[223,6014+22])
                        Pexp_ifthenelse
                        expression (lambda/switch.ml[220,5955+7]..[220,5955+21])
                          Pexp_apply
                          expression (lambda/switch.ml[220,5955+7]..[220,5955+15])
                            Pexp_ident "eq_tests" (lambda/switch.ml[220,5955+7]..[220,5955+15])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/switch.ml[220,5955+16]..[220,5955+18])
                                Pexp_ident "c1" (lambda/switch.ml[220,5955+16]..[220,5955+18])
                            <arg>
                            Nolabel
                              expression (lambda/switch.ml[220,5955+19]..[220,5955+21])
                                Pexp_ident "c2" (lambda/switch.ml[220,5955+19]..[220,5955+21])
                          ]
                        expression (lambda/switch.ml[221,5982+6]..[221,5982+22])
                          Pexp_apply
                          expression (lambda/switch.ml[221,5982+6]..[221,5982+16])
                            Pexp_ident "less_tests" (lambda/switch.ml[221,5982+6]..[221,5982+16])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/switch.ml[221,5982+17]..[221,5982+19])
                                Pexp_ident "d1" (lambda/switch.ml[221,5982+17]..[221,5982+19])
                            <arg>
                            Nolabel
                              expression (lambda/switch.ml[221,5982+20]..[221,5982+22])
                                Pexp_ident "d2" (lambda/switch.ml[221,5982+20]..[221,5982+22])
                          ]
                        Some
                          expression (lambda/switch.ml[223,6014+6]..[223,6014+22])
                            Pexp_apply
                            expression (lambda/switch.ml[223,6014+6]..[223,6014+16])
                              Pexp_ident "less_tests" (lambda/switch.ml[223,6014+6]..[223,6014+16])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[223,6014+17]..[223,6014+19])
                                  Pexp_ident "c1" (lambda/switch.ml[223,6014+17]..[223,6014+19])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[223,6014+20]..[223,6014+22])
                                  Pexp_ident "c2" (lambda/switch.ml[223,6014+20]..[223,6014+22])
                            ]
              ]
            structure_item (lambda/switch.ml[225,6038+2]..[227,6087+28])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[225,6038+6]..[225,6038+14])
                    Ppat_var "add_test" (lambda/switch.ml[225,6038+6]..[225,6038+14])
                  expression (lambda/switch.ml[225,6038+15]..[227,6087+28]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[225,6038+15]..[225,6038+17])
                      Ppat_var "t1" (lambda/switch.ml[225,6038+15]..[225,6038+17])
                    expression (lambda/switch.ml[225,6038+18]..[227,6087+28]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[225,6038+18]..[225,6038+20])
                        Ppat_var "t2" (lambda/switch.ml[225,6038+18]..[225,6038+20])
                      expression (lambda/switch.ml[226,6061+4]..[227,6087+28])
                        Pexp_sequence
                        expression (lambda/switch.ml[226,6061+4]..[226,6061+23])
                          Pexp_setfield
                          expression (lambda/switch.ml[226,6061+4]..[226,6061+6])
                            Pexp_ident "t1" (lambda/switch.ml[226,6061+4]..[226,6061+6])
                          "n" (lambda/switch.ml[226,6061+7]..[226,6061+8])
                          expression (lambda/switch.ml[226,6061+12]..[226,6061+23])
                            Pexp_apply
                            expression (lambda/switch.ml[226,6061+17]..[226,6061+18])
                              Pexp_ident "+" (lambda/switch.ml[226,6061+17]..[226,6061+18])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[226,6061+12]..[226,6061+16])
                                  Pexp_field
                                  expression (lambda/switch.ml[226,6061+12]..[226,6061+14])
                                    Pexp_ident "t1" (lambda/switch.ml[226,6061+12]..[226,6061+14])
                                  "n" (lambda/switch.ml[226,6061+15]..[226,6061+16])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[226,6061+19]..[226,6061+23])
                                  Pexp_field
                                  expression (lambda/switch.ml[226,6061+19]..[226,6061+21])
                                    Pexp_ident "t2" (lambda/switch.ml[226,6061+19]..[226,6061+21])
                                  "n" (lambda/switch.ml[226,6061+22]..[226,6061+23])
                            ]
                        expression (lambda/switch.ml[227,6087+4]..[227,6087+26])
                          Pexp_setfield
                          expression (lambda/switch.ml[227,6087+4]..[227,6087+6])
                            Pexp_ident "t1" (lambda/switch.ml[227,6087+4]..[227,6087+6])
                          "ni" (lambda/switch.ml[227,6087+7]..[227,6087+9])
                          expression (lambda/switch.ml[227,6087+13]..[227,6087+26])
                            Pexp_apply
                            expression (lambda/switch.ml[227,6087+19]..[227,6087+20])
                              Pexp_ident "+" (lambda/switch.ml[227,6087+19]..[227,6087+20])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[227,6087+13]..[227,6087+18])
                                  Pexp_field
                                  expression (lambda/switch.ml[227,6087+13]..[227,6087+15])
                                    Pexp_ident "t1" (lambda/switch.ml[227,6087+13]..[227,6087+15])
                                  "ni" (lambda/switch.ml[227,6087+16]..[227,6087+18])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[227,6087+21]..[227,6087+26])
                                  Pexp_field
                                  expression (lambda/switch.ml[227,6087+21]..[227,6087+23])
                                    Pexp_ident "t2" (lambda/switch.ml[227,6087+21]..[227,6087+23])
                                  "ni" (lambda/switch.ml[227,6087+24]..[227,6087+26])
                            ]
              ]
            structure_item (lambda/switch.ml[229,6117+2]..[229,6117+52])
              Pstr_type Rec
              [
                type_declaration "t_ret" (lambda/switch.ml[229,6117+7]..[229,6117+12]) (lambda/switch.ml[229,6117+2]..[229,6117+52])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (lambda/switch.ml[229,6117+15]..[229,6117+33])
                          "Inter" (lambda/switch.ml[229,6117+15]..[229,6117+20])
                          [
                            core_type (lambda/switch.ml[229,6117+24]..[229,6117+27])
                              Ptyp_constr "int" (lambda/switch.ml[229,6117+24]..[229,6117+27])
                              []
                            core_type (lambda/switch.ml[229,6117+30]..[229,6117+33])
                              Ptyp_constr "int" (lambda/switch.ml[229,6117+30]..[229,6117+33])
                              []
                          ]
                          None
                        (lambda/switch.ml[229,6117+35]..[229,6117+47])
                          "Sep" (lambda/switch.ml[229,6117+37]..[229,6117+40])
                          [
                            core_type (lambda/switch.ml[229,6117+44]..[229,6117+47])
                              Ptyp_constr "int" (lambda/switch.ml[229,6117+44]..[229,6117+47])
                              []
                          ]
                          None
                        (lambda/switch.ml[229,6117+48]..[229,6117+52])
                          "No" (lambda/switch.ml[229,6117+50]..[229,6117+52])
                          []
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lambda/switch.ml[238,6338+2]..[242,6421+44])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[238,6338+6]..[238,6338+11])
                    Ppat_var "coupe" (lambda/switch.ml[238,6338+6]..[238,6338+11])
                  expression (lambda/switch.ml[238,6338+12]..[242,6421+44]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[238,6338+12]..[238,6338+17])
                      Ppat_var "cases" (lambda/switch.ml[238,6338+12]..[238,6338+17])
                    expression (lambda/switch.ml[238,6338+18]..[242,6421+44]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[238,6338+18]..[238,6338+19])
                        Ppat_var "i" (lambda/switch.ml[238,6338+18]..[238,6338+19])
                      expression (lambda/switch.ml[239,6360+4]..[242,6421+44])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[239,6360+8]..[239,6360+13])
                              Ppat_tuple
                              [
                                pattern (lambda/switch.ml[239,6360+8]..[239,6360+9])
                                  Ppat_var "l" (lambda/switch.ml[239,6360+8]..[239,6360+9])
                                pattern (lambda/switch.ml[239,6360+10]..[239,6360+11])
                                  Ppat_any
                                pattern (lambda/switch.ml[239,6360+12]..[239,6360+13])
                                  Ppat_any
                              ]
                            expression (lambda/switch.ml[239,6360+16]..[239,6360+25])
                              Pexp_apply
                              expression (lambda/switch.ml[239,6360+16]..[239,6360+25]) ghost
                                Pexp_ident "Array.get" (lambda/switch.ml[239,6360+16]..[239,6360+25]) ghost
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[239,6360+16]..[239,6360+21])
                                    Pexp_ident "cases" (lambda/switch.ml[239,6360+16]..[239,6360+21])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[239,6360+23]..[239,6360+24])
                                    Pexp_ident "i" (lambda/switch.ml[239,6360+23]..[239,6360+24])
                              ]
                        ]
                        expression (lambda/switch.ml[240,6389+4]..[242,6421+44])
                          Pexp_tuple
                          [
                            expression (lambda/switch.ml[240,6389+4]..[240,6389+5])
                              Pexp_ident "l" (lambda/switch.ml[240,6389+4]..[240,6389+5])
                            expression (lambda/switch.ml[241,6396+4]..[241,6396+23])
                              Pexp_apply
                              expression (lambda/switch.ml[241,6396+4]..[241,6396+13])
                                Pexp_ident "Array.sub" (lambda/switch.ml[241,6396+4]..[241,6396+13])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[241,6396+14]..[241,6396+19])
                                    Pexp_ident "cases" (lambda/switch.ml[241,6396+14]..[241,6396+19])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[241,6396+20]..[241,6396+21])
                                    Pexp_constant PConst_int (0,None)
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[241,6396+22]..[241,6396+23])
                                    Pexp_ident "i" (lambda/switch.ml[241,6396+22]..[241,6396+23])
                              ]
                            expression (lambda/switch.ml[242,6421+4]..[242,6421+44])
                              Pexp_apply
                              expression (lambda/switch.ml[242,6421+4]..[242,6421+13])
                                Pexp_ident "Array.sub" (lambda/switch.ml[242,6421+4]..[242,6421+13])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[242,6421+14]..[242,6421+19])
                                    Pexp_ident "cases" (lambda/switch.ml[242,6421+14]..[242,6421+19])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[242,6421+20]..[242,6421+21])
                                    Pexp_ident "i" (lambda/switch.ml[242,6421+20]..[242,6421+21])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[242,6421+22]..[242,6421+44])
                                    Pexp_apply
                                    expression (lambda/switch.ml[242,6421+41]..[242,6421+42])
                                      Pexp_ident "-" (lambda/switch.ml[242,6421+41]..[242,6421+42])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[242,6421+23]..[242,6421+41])
                                          Pexp_apply
                                          expression (lambda/switch.ml[242,6421+23]..[242,6421+35])
                                            Pexp_ident "Array.length" (lambda/switch.ml[242,6421+23]..[242,6421+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[242,6421+36]..[242,6421+41])
                                                Pexp_ident "cases" (lambda/switch.ml[242,6421+36]..[242,6421+41])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[242,6421+42]..[242,6421+43])
                                          Pexp_ident "i" (lambda/switch.ml[242,6421+42]..[242,6421+43])
                                    ]
                              ]
                          ]
              ]
            structure_item (lambda/switch.ml[245,6468+2]..[304,8046+28])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[245,6468+6]..[245,6468+17])
                    Ppat_var "case_append" (lambda/switch.ml[245,6468+6]..[245,6468+17])
                  expression (lambda/switch.ml[245,6468+18]..[304,8046+28]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[245,6468+18]..[245,6468+20])
                      Ppat_var "c1" (lambda/switch.ml[245,6468+18]..[245,6468+20])
                    expression (lambda/switch.ml[245,6468+21]..[304,8046+28]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[245,6468+21]..[245,6468+23])
                        Ppat_var "c2" (lambda/switch.ml[245,6468+21]..[245,6468+23])
                      expression (lambda/switch.ml[246,6494+4]..[304,8046+28])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[246,6494+8]..[246,6494+12])
                              Ppat_var "len1" (lambda/switch.ml[246,6494+8]..[246,6494+12])
                            expression (lambda/switch.ml[246,6494+15]..[246,6494+30])
                              Pexp_apply
                              expression (lambda/switch.ml[246,6494+15]..[246,6494+27])
                                Pexp_ident "Array.length" (lambda/switch.ml[246,6494+15]..[246,6494+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[246,6494+28]..[246,6494+30])
                                    Pexp_ident "c1" (lambda/switch.ml[246,6494+28]..[246,6494+30])
                              ]
                          <def>
                            pattern (lambda/switch.ml[247,6525+8]..[247,6525+12])
                              Ppat_var "len2" (lambda/switch.ml[247,6525+8]..[247,6525+12])
                            expression (lambda/switch.ml[247,6525+15]..[247,6525+30])
                              Pexp_apply
                              expression (lambda/switch.ml[247,6525+15]..[247,6525+27])
                                Pexp_ident "Array.length" (lambda/switch.ml[247,6525+15]..[247,6525+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[247,6525+28]..[247,6525+30])
                                    Pexp_ident "c2" (lambda/switch.ml[247,6525+28]..[247,6525+30])
                              ]
                        ]
                        expression (lambda/switch.ml[248,6559+4]..[304,8046+28])
                          Pexp_match
                          expression (lambda/switch.ml[248,6559+10]..[248,6559+19])
                            Pexp_tuple
                            [
                              expression (lambda/switch.ml[248,6559+10]..[248,6559+14])
                                Pexp_ident "len1" (lambda/switch.ml[248,6559+10]..[248,6559+14])
                              expression (lambda/switch.ml[248,6559+15]..[248,6559+19])
                                Pexp_ident "len2" (lambda/switch.ml[248,6559+15]..[248,6559+19])
                            ]
                          [
                            <case>
                              pattern (lambda/switch.ml[249,6584+6]..[249,6584+9])
                                Ppat_tuple
                                [
                                  pattern (lambda/switch.ml[249,6584+6]..[249,6584+7])
                                    Ppat_constant PConst_int (0,None)
                                  pattern (lambda/switch.ml[249,6584+8]..[249,6584+9])
                                    Ppat_any
                                ]
                              expression (lambda/switch.ml[249,6584+13]..[249,6584+15])
                                Pexp_ident "c2" (lambda/switch.ml[249,6584+13]..[249,6584+15])
                            <case>
                              pattern (lambda/switch.ml[250,6600+6]..[250,6600+9])
                                Ppat_tuple
                                [
                                  pattern (lambda/switch.ml[250,6600+6]..[250,6600+7])
                                    Ppat_any
                                  pattern (lambda/switch.ml[250,6600+8]..[250,6600+9])
                                    Ppat_constant PConst_int (0,None)
                                ]
                              expression (lambda/switch.ml[250,6600+13]..[250,6600+15])
                                Pexp_ident "c1" (lambda/switch.ml[250,6600+13]..[250,6600+15])
                            <case>
                              pattern (lambda/switch.ml[251,6616+6]..[251,6616+9])
                                Ppat_tuple
                                [
                                  pattern (lambda/switch.ml[251,6616+6]..[251,6616+7])
                                    Ppat_any
                                  pattern (lambda/switch.ml[251,6616+8]..[251,6616+9])
                                    Ppat_any
                                ]
                              expression (lambda/switch.ml[252,6629+8]..[304,8046+28])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/switch.ml[252,6629+12]..[252,6629+22])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/switch.ml[252,6629+12]..[252,6629+14])
                                          Ppat_var "l1" (lambda/switch.ml[252,6629+12]..[252,6629+14])
                                        pattern (lambda/switch.ml[252,6629+15]..[252,6629+17])
                                          Ppat_var "h1" (lambda/switch.ml[252,6629+15]..[252,6629+17])
                                        pattern (lambda/switch.ml[252,6629+18]..[252,6629+22])
                                          Ppat_var "act1" (lambda/switch.ml[252,6629+18]..[252,6629+22])
                                      ]
                                    expression (lambda/switch.ml[252,6629+25]..[252,6629+47])
                                      Pexp_apply
                                      expression (lambda/switch.ml[252,6629+25]..[252,6629+47]) ghost
                                        Pexp_ident "Array.get" (lambda/switch.ml[252,6629+25]..[252,6629+47]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[252,6629+25]..[252,6629+27])
                                            Pexp_ident "c1" (lambda/switch.ml[252,6629+25]..[252,6629+27])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[252,6629+29]..[252,6629+46])
                                            Pexp_apply
                                            expression (lambda/switch.ml[252,6629+44]..[252,6629+45])
                                              Pexp_ident "-" (lambda/switch.ml[252,6629+44]..[252,6629+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[252,6629+29]..[252,6629+44])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[252,6629+29]..[252,6629+41])
                                                    Pexp_ident "Array.length" (lambda/switch.ml[252,6629+29]..[252,6629+41])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[252,6629+42]..[252,6629+44])
                                                        Pexp_ident "c1" (lambda/switch.ml[252,6629+42]..[252,6629+44])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[252,6629+45]..[252,6629+46])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                  <def>
                                    pattern (lambda/switch.ml[253,6677+12]..[253,6677+22])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/switch.ml[253,6677+12]..[253,6677+14])
                                          Ppat_var "l2" (lambda/switch.ml[253,6677+12]..[253,6677+14])
                                        pattern (lambda/switch.ml[253,6677+15]..[253,6677+17])
                                          Ppat_var "h2" (lambda/switch.ml[253,6677+15]..[253,6677+17])
                                        pattern (lambda/switch.ml[253,6677+18]..[253,6677+22])
                                          Ppat_var "act2" (lambda/switch.ml[253,6677+18]..[253,6677+22])
                                      ]
                                    expression (lambda/switch.ml[253,6677+25]..[253,6677+31])
                                      Pexp_apply
                                      expression (lambda/switch.ml[253,6677+25]..[253,6677+31]) ghost
                                        Pexp_ident "Array.get" (lambda/switch.ml[253,6677+25]..[253,6677+31]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[253,6677+25]..[253,6677+27])
                                            Pexp_ident "c2" (lambda/switch.ml[253,6677+25]..[253,6677+27])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[253,6677+29]..[253,6677+30])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                ]
                                expression (lambda/switch.ml[254,6712+8]..[304,8046+28])
                                  Pexp_ifthenelse
                                  expression (lambda/switch.ml[254,6712+11]..[254,6712+22])
                                    Pexp_apply
                                    expression (lambda/switch.ml[254,6712+16]..[254,6712+17])
                                      Pexp_ident "=" (lambda/switch.ml[254,6712+16]..[254,6712+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[254,6712+11]..[254,6712+15])
                                          Pexp_ident "act1" (lambda/switch.ml[254,6712+11]..[254,6712+15])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[254,6712+18]..[254,6712+22])
                                          Pexp_ident "act2" (lambda/switch.ml[254,6712+18]..[254,6712+22])
                                    ]
                                  expression (lambda/switch.ml[255,6740+10]..[282,7437+11])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/switch.ml[255,6740+14]..[255,6740+15])
                                          Ppat_var "r" (lambda/switch.ml[255,6740+14]..[255,6740+15])
                                        expression (lambda/switch.ml[255,6740+18]..[255,6740+49])
                                          Pexp_apply
                                          expression (lambda/switch.ml[255,6740+18]..[255,6740+28])
                                            Pexp_ident "Array.make" (lambda/switch.ml[255,6740+18]..[255,6740+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[255,6740+29]..[255,6740+42])
                                                Pexp_apply
                                                expression (lambda/switch.ml[255,6740+39]..[255,6740+40])
                                                  Pexp_ident "-" (lambda/switch.ml[255,6740+39]..[255,6740+40])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[255,6740+30]..[255,6740+39])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[255,6740+34]..[255,6740+35])
                                                        Pexp_ident "+" (lambda/switch.ml[255,6740+34]..[255,6740+35])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[255,6740+30]..[255,6740+34])
                                                            Pexp_ident "len1" (lambda/switch.ml[255,6740+30]..[255,6740+34])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[255,6740+35]..[255,6740+39])
                                                            Pexp_ident "len2" (lambda/switch.ml[255,6740+35]..[255,6740+39])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[255,6740+40]..[255,6740+41])
                                                      Pexp_constant PConst_int (1,None)
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[255,6740+43]..[255,6740+49])
                                                Pexp_apply
                                                expression (lambda/switch.ml[255,6740+43]..[255,6740+49]) ghost
                                                  Pexp_ident "Array.get" (lambda/switch.ml[255,6740+43]..[255,6740+49]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[255,6740+43]..[255,6740+45])
                                                      Pexp_ident "c1" (lambda/switch.ml[255,6740+43]..[255,6740+45])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[255,6740+47]..[255,6740+48])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                          ]
                                    ]
                                    expression (lambda/switch.ml[256,6793+10]..[282,7437+11])
                                      Pexp_sequence
                                      expression (lambda/switch.ml[256,6793+10]..[258,6854+14])
                                        Pexp_for Up
                                        pattern (lambda/switch.ml[256,6793+14]..[256,6793+15])
                                          Ppat_var "i" (lambda/switch.ml[256,6793+14]..[256,6793+15])
                                        expression (lambda/switch.ml[256,6793+18]..[256,6793+19])
                                          Pexp_constant PConst_int (0,None)
                                        expression (lambda/switch.ml[256,6793+23]..[256,6793+29])
                                          Pexp_apply
                                          expression (lambda/switch.ml[256,6793+27]..[256,6793+28])
                                            Pexp_ident "-" (lambda/switch.ml[256,6793+27]..[256,6793+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[256,6793+23]..[256,6793+27])
                                                Pexp_ident "len1" (lambda/switch.ml[256,6793+23]..[256,6793+27])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[256,6793+28]..[256,6793+29])
                                                Pexp_constant PConst_int (2,None)
                                          ]
                                        expression (lambda/switch.ml[257,6826+12]..[257,6826+27])
                                          Pexp_apply
                                          expression (lambda/switch.ml[257,6826+12]..[257,6826+27]) ghost
                                            Pexp_ident "Array.set" (lambda/switch.ml[257,6826+12]..[257,6826+27]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[257,6826+12]..[257,6826+13])
                                                Pexp_ident "r" (lambda/switch.ml[257,6826+12]..[257,6826+13])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[257,6826+15]..[257,6826+16])
                                                Pexp_ident "i" (lambda/switch.ml[257,6826+15]..[257,6826+16])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[257,6826+21]..[257,6826+27])
                                                Pexp_apply
                                                expression (lambda/switch.ml[257,6826+21]..[257,6826+27]) ghost
                                                  Pexp_ident "Array.get" (lambda/switch.ml[257,6826+21]..[257,6826+27]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[257,6826+21]..[257,6826+23])
                                                      Pexp_ident "c1" (lambda/switch.ml[257,6826+21]..[257,6826+23])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[257,6826+25]..[257,6826+26])
                                                      Pexp_ident "i" (lambda/switch.ml[257,6826+25]..[257,6826+26])
                                                ]
                                          ]
                                      expression (lambda/switch.ml[260,6872+10]..[282,7437+11])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/switch.ml[260,6872+14]..[260,6872+15])
                                              Ppat_var "l" (lambda/switch.ml[260,6872+14]..[260,6872+15])
                                            expression (lambda/switch.ml[261,6890+12]..[268,7078+16])
                                              Pexp_ifthenelse
                                              expression (lambda/switch.ml[261,6890+15]..[261,6890+26])
                                                Pexp_apply
                                                expression (lambda/switch.ml[261,6890+22]..[261,6890+24])
                                                  Pexp_ident ">=" (lambda/switch.ml[261,6890+22]..[261,6890+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[261,6890+15]..[261,6890+21])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[261,6890+19]..[261,6890+20])
                                                        Pexp_ident "-" (lambda/switch.ml[261,6890+19]..[261,6890+20])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[261,6890+15]..[261,6890+19])
                                                            Pexp_ident "len1" (lambda/switch.ml[261,6890+15]..[261,6890+19])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[261,6890+20]..[261,6890+21])
                                                            Pexp_constant PConst_int (2,None)
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[261,6890+25]..[261,6890+26])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                              expression (lambda/switch.ml[261,6890+32]..[267,7057+15])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lambda/switch.ml[262,6928+18]..[262,6928+23])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/switch.ml[262,6928+18]..[262,6928+19])
                                                          Ppat_any
                                                        pattern (lambda/switch.ml[262,6928+20]..[262,6928+21])
                                                          Ppat_var "h" (lambda/switch.ml[262,6928+20]..[262,6928+21])
                                                        pattern (lambda/switch.ml[262,6928+22]..[262,6928+23])
                                                          Ppat_any
                                                      ]
                                                    expression (lambda/switch.ml[262,6928+26]..[262,6928+36])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[262,6928+26]..[262,6928+36]) ghost
                                                        Pexp_ident "Array.get" (lambda/switch.ml[262,6928+26]..[262,6928+36]) ghost
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[262,6928+26]..[262,6928+27])
                                                            Pexp_ident "r" (lambda/switch.ml[262,6928+26]..[262,6928+27])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[262,6928+29]..[262,6928+35])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[262,6928+33]..[262,6928+34])
                                                              Pexp_ident "-" (lambda/switch.ml[262,6928+33]..[262,6928+34])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[262,6928+29]..[262,6928+33])
                                                                  Pexp_ident "len1" (lambda/switch.ml[262,6928+29]..[262,6928+33])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[262,6928+34]..[262,6928+35])
                                                                  Pexp_constant PConst_int (2,None)
                                                            ]
                                                      ]
                                                ]
                                                expression (lambda/switch.ml[263,6968+14]..[266,7038+18])
                                                  Pexp_ifthenelse
                                                  expression (lambda/switch.ml[263,6968+17]..[263,6968+25])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[263,6968+21]..[263,6968+22])
                                                      Pexp_ident "<" (lambda/switch.ml[263,6968+21]..[263,6968+22])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[263,6968+17]..[263,6968+20])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[263,6968+18]..[263,6968+19])
                                                            Pexp_ident "+" (lambda/switch.ml[263,6968+18]..[263,6968+19])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[263,6968+17]..[263,6968+18])
                                                                Pexp_ident "h" (lambda/switch.ml[263,6968+17]..[263,6968+18])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[263,6968+19]..[263,6968+20])
                                                                Pexp_constant PConst_int (1,None)
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[263,6968+23]..[263,6968+25])
                                                          Pexp_ident "l1" (lambda/switch.ml[263,6968+23]..[263,6968+25])
                                                    ]
                                                  expression (lambda/switch.ml[264,6999+16]..[264,6999+19])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[264,6999+17]..[264,6999+18])
                                                      Pexp_ident "+" (lambda/switch.ml[264,6999+17]..[264,6999+18])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[264,6999+16]..[264,6999+17])
                                                          Pexp_ident "h" (lambda/switch.ml[264,6999+16]..[264,6999+17])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[264,6999+18]..[264,6999+19])
                                                          Pexp_constant PConst_int (1,None)
                                                    ]
                                                  Some
                                                    expression (lambda/switch.ml[266,7038+16]..[266,7038+18])
                                                      Pexp_ident "l1" (lambda/switch.ml[266,7038+16]..[266,7038+18])
                                              Some
                                                expression (lambda/switch.ml[268,7078+14]..[268,7078+16])
                                                  Pexp_ident "l1" (lambda/switch.ml[268,7078+14]..[268,7078+16])
                                          <def>
                                            pattern (lambda/switch.ml[269,7095+14]..[269,7095+15])
                                              Ppat_var "h" (lambda/switch.ml[269,7095+14]..[269,7095+15])
                                            expression (lambda/switch.ml[270,7113+12]..[277,7296+16])
                                              Pexp_ifthenelse
                                              expression (lambda/switch.ml[270,7113+15]..[270,7113+25])
                                                Pexp_apply
                                                expression (lambda/switch.ml[270,7113+17]..[270,7113+18])
                                                  Pexp_ident "<" (lambda/switch.ml[270,7113+17]..[270,7113+18])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[270,7113+15]..[270,7113+16])
                                                      Pexp_constant PConst_int (1,None)
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[270,7113+19]..[270,7113+25])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[270,7113+23]..[270,7113+24])
                                                        Pexp_ident "-" (lambda/switch.ml[270,7113+23]..[270,7113+24])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[270,7113+19]..[270,7113+23])
                                                            Pexp_ident "len2" (lambda/switch.ml[270,7113+19]..[270,7113+23])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[270,7113+24]..[270,7113+25])
                                                            Pexp_constant PConst_int (1,None)
                                                      ]
                                                ]
                                              expression (lambda/switch.ml[270,7113+31]..[276,7275+15])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lambda/switch.ml[271,7150+18]..[271,7150+23])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/switch.ml[271,7150+18]..[271,7150+19])
                                                          Ppat_var "l" (lambda/switch.ml[271,7150+18]..[271,7150+19])
                                                        pattern (lambda/switch.ml[271,7150+20]..[271,7150+21])
                                                          Ppat_any
                                                        pattern (lambda/switch.ml[271,7150+22]..[271,7150+23])
                                                          Ppat_any
                                                      ]
                                                    expression (lambda/switch.ml[271,7150+26]..[271,7150+32])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[271,7150+26]..[271,7150+32]) ghost
                                                        Pexp_ident "Array.get" (lambda/switch.ml[271,7150+26]..[271,7150+32]) ghost
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[271,7150+26]..[271,7150+28])
                                                            Pexp_ident "c2" (lambda/switch.ml[271,7150+26]..[271,7150+28])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[271,7150+30]..[271,7150+31])
                                                            Pexp_constant PConst_int (1,None)
                                                      ]
                                                ]
                                                expression (lambda/switch.ml[272,7186+14]..[275,7256+18])
                                                  Pexp_ifthenelse
                                                  expression (lambda/switch.ml[272,7186+17]..[272,7186+25])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[272,7186+22]..[272,7186+23])
                                                      Pexp_ident "<" (lambda/switch.ml[272,7186+22]..[272,7186+23])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[272,7186+17]..[272,7186+21])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[272,7186+19]..[272,7186+20])
                                                            Pexp_ident "+" (lambda/switch.ml[272,7186+19]..[272,7186+20])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[272,7186+17]..[272,7186+19])
                                                                Pexp_ident "h2" (lambda/switch.ml[272,7186+17]..[272,7186+19])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[272,7186+20]..[272,7186+21])
                                                                Pexp_constant PConst_int (1,None)
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[272,7186+24]..[272,7186+25])
                                                          Pexp_ident "l" (lambda/switch.ml[272,7186+24]..[272,7186+25])
                                                    ]
                                                  expression (lambda/switch.ml[273,7217+16]..[273,7217+19])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[273,7217+17]..[273,7217+18])
                                                      Pexp_ident "-" (lambda/switch.ml[273,7217+17]..[273,7217+18])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[273,7217+16]..[273,7217+17])
                                                          Pexp_ident "l" (lambda/switch.ml[273,7217+16]..[273,7217+17])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[273,7217+18]..[273,7217+19])
                                                          Pexp_constant PConst_int (1,None)
                                                    ]
                                                  Some
                                                    expression (lambda/switch.ml[275,7256+16]..[275,7256+18])
                                                      Pexp_ident "h2" (lambda/switch.ml[275,7256+16]..[275,7256+18])
                                              Some
                                                expression (lambda/switch.ml[277,7296+14]..[277,7296+16])
                                                  Pexp_ident "h2" (lambda/switch.ml[277,7296+14]..[277,7296+16])
                                        ]
                                        expression (lambda/switch.ml[278,7316+10]..[282,7437+11])
                                          Pexp_sequence
                                          expression (lambda/switch.ml[278,7316+10]..[278,7316+34])
                                            Pexp_apply
                                            expression (lambda/switch.ml[278,7316+10]..[278,7316+34]) ghost
                                              Pexp_ident "Array.set" (lambda/switch.ml[278,7316+10]..[278,7316+34]) ghost
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[278,7316+10]..[278,7316+11])
                                                  Pexp_ident "r" (lambda/switch.ml[278,7316+10]..[278,7316+11])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[278,7316+13]..[278,7316+19])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[278,7316+17]..[278,7316+18])
                                                    Pexp_ident "-" (lambda/switch.ml[278,7316+17]..[278,7316+18])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[278,7316+13]..[278,7316+17])
                                                        Pexp_ident "len1" (lambda/switch.ml[278,7316+13]..[278,7316+17])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[278,7316+18]..[278,7316+19])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[278,7316+24]..[278,7316+34])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/switch.ml[278,7316+25]..[278,7316+26])
                                                      Pexp_ident "l" (lambda/switch.ml[278,7316+25]..[278,7316+26])
                                                    expression (lambda/switch.ml[278,7316+27]..[278,7316+28])
                                                      Pexp_ident "h" (lambda/switch.ml[278,7316+27]..[278,7316+28])
                                                    expression (lambda/switch.ml[278,7316+29]..[278,7316+33])
                                                      Pexp_ident "act1" (lambda/switch.ml[278,7316+29]..[278,7316+33])
                                                  ]
                                            ]
                                          expression (lambda/switch.ml[279,7353+10]..[282,7437+11])
                                            Pexp_sequence
                                            expression (lambda/switch.ml[279,7353+10]..[281,7420+14])
                                              Pexp_for Up
                                              pattern (lambda/switch.ml[279,7353+14]..[279,7353+15])
                                                Ppat_var "i" (lambda/switch.ml[279,7353+14]..[279,7353+15])
                                              expression (lambda/switch.ml[279,7353+16]..[279,7353+17])
                                                Pexp_constant PConst_int (1,None)
                                              expression (lambda/switch.ml[279,7353+21]..[279,7353+27])
                                                Pexp_apply
                                                expression (lambda/switch.ml[279,7353+25]..[279,7353+26])
                                                  Pexp_ident "-" (lambda/switch.ml[279,7353+25]..[279,7353+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[279,7353+21]..[279,7353+25])
                                                      Pexp_ident "len2" (lambda/switch.ml[279,7353+21]..[279,7353+25])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[279,7353+26]..[279,7353+27])
                                                      Pexp_constant PConst_int (1,None)
                                                ]
                                              expression (lambda/switch.ml[280,7385+12]..[280,7385+34])
                                                Pexp_apply
                                                expression (lambda/switch.ml[280,7385+12]..[280,7385+34]) ghost
                                                  Pexp_ident "Array.set" (lambda/switch.ml[280,7385+12]..[280,7385+34]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[280,7385+12]..[280,7385+13])
                                                      Pexp_ident "r" (lambda/switch.ml[280,7385+12]..[280,7385+13])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[280,7385+15]..[280,7385+23])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[280,7385+21]..[280,7385+22])
                                                        Pexp_ident "+" (lambda/switch.ml[280,7385+21]..[280,7385+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[280,7385+15]..[280,7385+21])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[280,7385+19]..[280,7385+20])
                                                              Pexp_ident "-" (lambda/switch.ml[280,7385+19]..[280,7385+20])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[280,7385+15]..[280,7385+19])
                                                                  Pexp_ident "len1" (lambda/switch.ml[280,7385+15]..[280,7385+19])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[280,7385+20]..[280,7385+21])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[280,7385+22]..[280,7385+23])
                                                            Pexp_ident "i" (lambda/switch.ml[280,7385+22]..[280,7385+23])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[280,7385+28]..[280,7385+34])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[280,7385+28]..[280,7385+34]) ghost
                                                        Pexp_ident "Array.get" (lambda/switch.ml[280,7385+28]..[280,7385+34]) ghost
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[280,7385+28]..[280,7385+30])
                                                            Pexp_ident "c2" (lambda/switch.ml[280,7385+28]..[280,7385+30])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[280,7385+32]..[280,7385+33])
                                                            Pexp_ident "i" (lambda/switch.ml[280,7385+32]..[280,7385+33])
                                                      ]
                                                ]
                                            expression (lambda/switch.ml[282,7437+10]..[282,7437+11])
                                              Pexp_ident "r" (lambda/switch.ml[282,7437+10]..[282,7437+11])
                                  Some
                                    expression (lambda/switch.ml[283,7449+13]..[304,8046+28])
                                      Pexp_ifthenelse
                                      expression (lambda/switch.ml[283,7449+16]..[283,7449+23])
                                        Pexp_apply
                                        expression (lambda/switch.ml[283,7449+19]..[283,7449+20])
                                          Pexp_ident ">" (lambda/switch.ml[283,7449+19]..[283,7449+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[283,7449+16]..[283,7449+18])
                                              Pexp_ident "h1" (lambda/switch.ml[283,7449+16]..[283,7449+18])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[283,7449+21]..[283,7449+23])
                                              Pexp_ident "l1" (lambda/switch.ml[283,7449+21]..[283,7449+23])
                                        ]
                                      expression (lambda/switch.ml[284,7478+10]..[292,7730+11])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/switch.ml[284,7478+14]..[284,7478+15])
                                              Ppat_var "r" (lambda/switch.ml[284,7478+14]..[284,7478+15])
                                            expression (lambda/switch.ml[284,7478+18]..[284,7478+47])
                                              Pexp_apply
                                              expression (lambda/switch.ml[284,7478+18]..[284,7478+28])
                                                Pexp_ident "Array.make" (lambda/switch.ml[284,7478+18]..[284,7478+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[284,7478+29]..[284,7478+40])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[284,7478+34]..[284,7478+35])
                                                      Pexp_ident "+" (lambda/switch.ml[284,7478+34]..[284,7478+35])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[284,7478+30]..[284,7478+34])
                                                          Pexp_ident "len1" (lambda/switch.ml[284,7478+30]..[284,7478+34])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[284,7478+35]..[284,7478+39])
                                                          Pexp_ident "len2" (lambda/switch.ml[284,7478+35]..[284,7478+39])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[284,7478+41]..[284,7478+47])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[284,7478+41]..[284,7478+47]) ghost
                                                      Pexp_ident "Array.get" (lambda/switch.ml[284,7478+41]..[284,7478+47]) ghost
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[284,7478+41]..[284,7478+43])
                                                          Pexp_ident "c1" (lambda/switch.ml[284,7478+41]..[284,7478+43])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[284,7478+45]..[284,7478+46])
                                                          Pexp_constant PConst_int (0,None)
                                                    ]
                                              ]
                                        ]
                                        expression (lambda/switch.ml[285,7529+10]..[292,7730+11])
                                          Pexp_sequence
                                          expression (lambda/switch.ml[285,7529+10]..[287,7590+14])
                                            Pexp_for Up
                                            pattern (lambda/switch.ml[285,7529+14]..[285,7529+15])
                                              Ppat_var "i" (lambda/switch.ml[285,7529+14]..[285,7529+15])
                                            expression (lambda/switch.ml[285,7529+18]..[285,7529+19])
                                              Pexp_constant PConst_int (0,None)
                                            expression (lambda/switch.ml[285,7529+23]..[285,7529+29])
                                              Pexp_apply
                                              expression (lambda/switch.ml[285,7529+27]..[285,7529+28])
                                                Pexp_ident "-" (lambda/switch.ml[285,7529+27]..[285,7529+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[285,7529+23]..[285,7529+27])
                                                    Pexp_ident "len1" (lambda/switch.ml[285,7529+23]..[285,7529+27])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[285,7529+28]..[285,7529+29])
                                                    Pexp_constant PConst_int (2,None)
                                              ]
                                            expression (lambda/switch.ml[286,7562+12]..[286,7562+27])
                                              Pexp_apply
                                              expression (lambda/switch.ml[286,7562+12]..[286,7562+27]) ghost
                                                Pexp_ident "Array.set" (lambda/switch.ml[286,7562+12]..[286,7562+27]) ghost
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[286,7562+12]..[286,7562+13])
                                                    Pexp_ident "r" (lambda/switch.ml[286,7562+12]..[286,7562+13])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[286,7562+15]..[286,7562+16])
                                                    Pexp_ident "i" (lambda/switch.ml[286,7562+15]..[286,7562+16])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[286,7562+21]..[286,7562+27])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[286,7562+21]..[286,7562+27]) ghost
                                                      Pexp_ident "Array.get" (lambda/switch.ml[286,7562+21]..[286,7562+27]) ghost
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[286,7562+21]..[286,7562+23])
                                                          Pexp_ident "c1" (lambda/switch.ml[286,7562+21]..[286,7562+23])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[286,7562+25]..[286,7562+26])
                                                          Pexp_ident "i" (lambda/switch.ml[286,7562+25]..[286,7562+26])
                                                    ]
                                              ]
                                          expression (lambda/switch.ml[288,7607+10]..[292,7730+11])
                                            Pexp_sequence
                                            expression (lambda/switch.ml[288,7607+10]..[288,7607+38])
                                              Pexp_apply
                                              expression (lambda/switch.ml[288,7607+10]..[288,7607+38]) ghost
                                                Pexp_ident "Array.set" (lambda/switch.ml[288,7607+10]..[288,7607+38]) ghost
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[288,7607+10]..[288,7607+11])
                                                    Pexp_ident "r" (lambda/switch.ml[288,7607+10]..[288,7607+11])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[288,7607+13]..[288,7607+19])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[288,7607+17]..[288,7607+18])
                                                      Pexp_ident "-" (lambda/switch.ml[288,7607+17]..[288,7607+18])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[288,7607+13]..[288,7607+17])
                                                          Pexp_ident "len1" (lambda/switch.ml[288,7607+13]..[288,7607+17])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[288,7607+18]..[288,7607+19])
                                                          Pexp_constant PConst_int (1,None)
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[288,7607+24]..[288,7607+38])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/switch.ml[288,7607+25]..[288,7607+27])
                                                        Pexp_ident "l1" (lambda/switch.ml[288,7607+25]..[288,7607+27])
                                                      expression (lambda/switch.ml[288,7607+28]..[288,7607+32])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[288,7607+30]..[288,7607+31])
                                                          Pexp_ident "-" (lambda/switch.ml[288,7607+30]..[288,7607+31])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[288,7607+28]..[288,7607+30])
                                                              Pexp_ident "l2" (lambda/switch.ml[288,7607+28]..[288,7607+30])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[288,7607+31]..[288,7607+32])
                                                              Pexp_constant PConst_int (1,None)
                                                        ]
                                                      expression (lambda/switch.ml[288,7607+33]..[288,7607+37])
                                                        Pexp_ident "act1" (lambda/switch.ml[288,7607+33]..[288,7607+37])
                                                    ]
                                              ]
                                            expression (lambda/switch.ml[289,7648+10]..[292,7730+11])
                                              Pexp_sequence
                                              expression (lambda/switch.ml[289,7648+10]..[291,7713+14])
                                                Pexp_for Up
                                                pattern (lambda/switch.ml[289,7648+14]..[289,7648+15])
                                                  Ppat_var "i" (lambda/switch.ml[289,7648+14]..[289,7648+15])
                                                expression (lambda/switch.ml[289,7648+16]..[289,7648+17])
                                                  Pexp_constant PConst_int (0,None)
                                                expression (lambda/switch.ml[289,7648+21]..[289,7648+27])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[289,7648+25]..[289,7648+26])
                                                    Pexp_ident "-" (lambda/switch.ml[289,7648+25]..[289,7648+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[289,7648+21]..[289,7648+25])
                                                        Pexp_ident "len2" (lambda/switch.ml[289,7648+21]..[289,7648+25])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[289,7648+26]..[289,7648+27])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                                expression (lambda/switch.ml[290,7680+12]..[290,7680+32])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[290,7680+12]..[290,7680+32]) ghost
                                                    Pexp_ident "Array.set" (lambda/switch.ml[290,7680+12]..[290,7680+32]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[290,7680+12]..[290,7680+13])
                                                        Pexp_ident "r" (lambda/switch.ml[290,7680+12]..[290,7680+13])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[290,7680+15]..[290,7680+21])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[290,7680+19]..[290,7680+20])
                                                          Pexp_ident "+" (lambda/switch.ml[290,7680+19]..[290,7680+20])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[290,7680+15]..[290,7680+19])
                                                              Pexp_ident "len1" (lambda/switch.ml[290,7680+15]..[290,7680+19])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[290,7680+20]..[290,7680+21])
                                                              Pexp_ident "i" (lambda/switch.ml[290,7680+20]..[290,7680+21])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[290,7680+26]..[290,7680+32])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[290,7680+26]..[290,7680+32]) ghost
                                                          Pexp_ident "Array.get" (lambda/switch.ml[290,7680+26]..[290,7680+32]) ghost
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[290,7680+26]..[290,7680+28])
                                                              Pexp_ident "c2" (lambda/switch.ml[290,7680+26]..[290,7680+28])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[290,7680+30]..[290,7680+31])
                                                              Pexp_ident "i" (lambda/switch.ml[290,7680+30]..[290,7680+31])
                                                        ]
                                                  ]
                                              expression (lambda/switch.ml[292,7730+10]..[292,7730+11])
                                                Pexp_ident "r" (lambda/switch.ml[292,7730+10]..[292,7730+11])
                                      Some
                                        expression (lambda/switch.ml[293,7742+13]..[304,8046+28])
                                          Pexp_ifthenelse
                                          expression (lambda/switch.ml[293,7742+16]..[293,7742+23])
                                            Pexp_apply
                                            expression (lambda/switch.ml[293,7742+19]..[293,7742+20])
                                              Pexp_ident ">" (lambda/switch.ml[293,7742+19]..[293,7742+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[293,7742+16]..[293,7742+18])
                                                  Pexp_ident "h2" (lambda/switch.ml[293,7742+16]..[293,7742+18])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[293,7742+21]..[293,7742+23])
                                                  Pexp_ident "l2" (lambda/switch.ml[293,7742+21]..[293,7742+23])
                                            ]
                                          expression (lambda/switch.ml[294,7771+10]..[302,8021+11])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/switch.ml[294,7771+14]..[294,7771+15])
                                                  Ppat_var "r" (lambda/switch.ml[294,7771+14]..[294,7771+15])
                                                expression (lambda/switch.ml[294,7771+18]..[294,7771+47])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[294,7771+18]..[294,7771+28])
                                                    Pexp_ident "Array.make" (lambda/switch.ml[294,7771+18]..[294,7771+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[294,7771+29]..[294,7771+40])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[294,7771+34]..[294,7771+35])
                                                          Pexp_ident "+" (lambda/switch.ml[294,7771+34]..[294,7771+35])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[294,7771+30]..[294,7771+34])
                                                              Pexp_ident "len1" (lambda/switch.ml[294,7771+30]..[294,7771+34])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[294,7771+35]..[294,7771+39])
                                                              Pexp_ident "len2" (lambda/switch.ml[294,7771+35]..[294,7771+39])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[294,7771+41]..[294,7771+47])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[294,7771+41]..[294,7771+47]) ghost
                                                          Pexp_ident "Array.get" (lambda/switch.ml[294,7771+41]..[294,7771+47]) ghost
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[294,7771+41]..[294,7771+43])
                                                              Pexp_ident "c1" (lambda/switch.ml[294,7771+41]..[294,7771+43])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[294,7771+45]..[294,7771+46])
                                                              Pexp_constant PConst_int (0,None)
                                                        ]
                                                  ]
                                            ]
                                            expression (lambda/switch.ml[295,7822+10]..[302,8021+11])
                                              Pexp_sequence
                                              expression (lambda/switch.ml[295,7822+10]..[297,7883+14])
                                                Pexp_for Up
                                                pattern (lambda/switch.ml[295,7822+14]..[295,7822+15])
                                                  Ppat_var "i" (lambda/switch.ml[295,7822+14]..[295,7822+15])
                                                expression (lambda/switch.ml[295,7822+18]..[295,7822+19])
                                                  Pexp_constant PConst_int (0,None)
                                                expression (lambda/switch.ml[295,7822+23]..[295,7822+29])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[295,7822+27]..[295,7822+28])
                                                    Pexp_ident "-" (lambda/switch.ml[295,7822+27]..[295,7822+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[295,7822+23]..[295,7822+27])
                                                        Pexp_ident "len1" (lambda/switch.ml[295,7822+23]..[295,7822+27])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[295,7822+28]..[295,7822+29])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                                expression (lambda/switch.ml[296,7855+12]..[296,7855+27])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[296,7855+12]..[296,7855+27]) ghost
                                                    Pexp_ident "Array.set" (lambda/switch.ml[296,7855+12]..[296,7855+27]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[296,7855+12]..[296,7855+13])
                                                        Pexp_ident "r" (lambda/switch.ml[296,7855+12]..[296,7855+13])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[296,7855+15]..[296,7855+16])
                                                        Pexp_ident "i" (lambda/switch.ml[296,7855+15]..[296,7855+16])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[296,7855+21]..[296,7855+27])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[296,7855+21]..[296,7855+27]) ghost
                                                          Pexp_ident "Array.get" (lambda/switch.ml[296,7855+21]..[296,7855+27]) ghost
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[296,7855+21]..[296,7855+23])
                                                              Pexp_ident "c1" (lambda/switch.ml[296,7855+21]..[296,7855+23])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[296,7855+25]..[296,7855+26])
                                                              Pexp_ident "i" (lambda/switch.ml[296,7855+25]..[296,7855+26])
                                                        ]
                                                  ]
                                              expression (lambda/switch.ml[298,7900+10]..[302,8021+11])
                                                Pexp_sequence
                                                expression (lambda/switch.ml[298,7900+10]..[298,7900+36])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[298,7900+10]..[298,7900+36]) ghost
                                                    Pexp_ident "Array.set" (lambda/switch.ml[298,7900+10]..[298,7900+36]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[298,7900+10]..[298,7900+11])
                                                        Pexp_ident "r" (lambda/switch.ml[298,7900+10]..[298,7900+11])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[298,7900+13]..[298,7900+17])
                                                        Pexp_ident "len1" (lambda/switch.ml[298,7900+13]..[298,7900+17])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[298,7900+22]..[298,7900+36])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/switch.ml[298,7900+23]..[298,7900+27])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[298,7900+25]..[298,7900+26])
                                                              Pexp_ident "+" (lambda/switch.ml[298,7900+25]..[298,7900+26])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[298,7900+23]..[298,7900+25])
                                                                  Pexp_ident "h1" (lambda/switch.ml[298,7900+23]..[298,7900+25])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[298,7900+26]..[298,7900+27])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                          expression (lambda/switch.ml[298,7900+28]..[298,7900+30])
                                                            Pexp_ident "h2" (lambda/switch.ml[298,7900+28]..[298,7900+30])
                                                          expression (lambda/switch.ml[298,7900+31]..[298,7900+35])
                                                            Pexp_ident "act2" (lambda/switch.ml[298,7900+31]..[298,7900+35])
                                                        ]
                                                  ]
                                                expression (lambda/switch.ml[299,7939+10]..[302,8021+11])
                                                  Pexp_sequence
                                                  expression (lambda/switch.ml[299,7939+10]..[301,8004+14])
                                                    Pexp_for Up
                                                    pattern (lambda/switch.ml[299,7939+14]..[299,7939+15])
                                                      Ppat_var "i" (lambda/switch.ml[299,7939+14]..[299,7939+15])
                                                    expression (lambda/switch.ml[299,7939+16]..[299,7939+17])
                                                      Pexp_constant PConst_int (1,None)
                                                    expression (lambda/switch.ml[299,7939+21]..[299,7939+27])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[299,7939+25]..[299,7939+26])
                                                        Pexp_ident "-" (lambda/switch.ml[299,7939+25]..[299,7939+26])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[299,7939+21]..[299,7939+25])
                                                            Pexp_ident "len2" (lambda/switch.ml[299,7939+21]..[299,7939+25])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[299,7939+26]..[299,7939+27])
                                                            Pexp_constant PConst_int (1,None)
                                                      ]
                                                    expression (lambda/switch.ml[300,7971+12]..[300,7971+32])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[300,7971+12]..[300,7971+32]) ghost
                                                        Pexp_ident "Array.set" (lambda/switch.ml[300,7971+12]..[300,7971+32]) ghost
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[300,7971+12]..[300,7971+13])
                                                            Pexp_ident "r" (lambda/switch.ml[300,7971+12]..[300,7971+13])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[300,7971+15]..[300,7971+21])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[300,7971+19]..[300,7971+20])
                                                              Pexp_ident "+" (lambda/switch.ml[300,7971+19]..[300,7971+20])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[300,7971+15]..[300,7971+19])
                                                                  Pexp_ident "len1" (lambda/switch.ml[300,7971+15]..[300,7971+19])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[300,7971+20]..[300,7971+21])
                                                                  Pexp_ident "i" (lambda/switch.ml[300,7971+20]..[300,7971+21])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[300,7971+26]..[300,7971+32])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[300,7971+26]..[300,7971+32]) ghost
                                                              Pexp_ident "Array.get" (lambda/switch.ml[300,7971+26]..[300,7971+32]) ghost
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[300,7971+26]..[300,7971+28])
                                                                  Pexp_ident "c2" (lambda/switch.ml[300,7971+26]..[300,7971+28])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[300,7971+30]..[300,7971+31])
                                                                  Pexp_ident "i" (lambda/switch.ml[300,7971+30]..[300,7971+31])
                                                            ]
                                                      ]
                                                  expression (lambda/switch.ml[302,8021+10]..[302,8021+11])
                                                    Pexp_ident "r" (lambda/switch.ml[302,8021+10]..[302,8021+11])
                                          Some
                                            expression (lambda/switch.ml[304,8046+10]..[304,8046+28])
                                              Pexp_apply
                                              expression (lambda/switch.ml[304,8046+10]..[304,8046+22])
                                                Pexp_ident "Array.append" (lambda/switch.ml[304,8046+10]..[304,8046+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[304,8046+23]..[304,8046+25])
                                                    Pexp_ident "c1" (lambda/switch.ml[304,8046+23]..[304,8046+25])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[304,8046+26]..[304,8046+28])
                                                    Pexp_ident "c2" (lambda/switch.ml[304,8046+26]..[304,8046+28])
                                              ]
                          ]
              ]
            structure_item (lambda/switch.ml[307,8077+2]..[313,8251+76])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[307,8077+6]..[307,8077+17])
                    Ppat_var "coupe_inter" (lambda/switch.ml[307,8077+6]..[307,8077+17])
                  expression (lambda/switch.ml[307,8077+18]..[313,8251+76]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[307,8077+18]..[307,8077+19])
                      Ppat_var "i" (lambda/switch.ml[307,8077+18]..[307,8077+19])
                    expression (lambda/switch.ml[307,8077+20]..[313,8251+76]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[307,8077+20]..[307,8077+21])
                        Ppat_var "j" (lambda/switch.ml[307,8077+20]..[307,8077+21])
                      expression (lambda/switch.ml[307,8077+22]..[313,8251+76]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[307,8077+22]..[307,8077+27])
                          Ppat_var "cases" (lambda/switch.ml[307,8077+22]..[307,8077+27])
                        expression (lambda/switch.ml[308,8107+4]..[313,8251+76])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/switch.ml[308,8107+8]..[308,8107+14])
                                Ppat_var "lcases" (lambda/switch.ml[308,8107+8]..[308,8107+14])
                              expression (lambda/switch.ml[308,8107+17]..[308,8107+35])
                                Pexp_apply
                                expression (lambda/switch.ml[308,8107+17]..[308,8107+29])
                                  Pexp_ident "Array.length" (lambda/switch.ml[308,8107+17]..[308,8107+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[308,8107+30]..[308,8107+35])
                                      Pexp_ident "cases" (lambda/switch.ml[308,8107+30]..[308,8107+35])
                                ]
                          ]
                          expression (lambda/switch.ml[309,8146+4]..[313,8251+76])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/switch.ml[309,8146+8]..[309,8146+15])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/switch.ml[309,8146+8]..[309,8146+11])
                                      Ppat_var "low" (lambda/switch.ml[309,8146+8]..[309,8146+11])
                                    pattern (lambda/switch.ml[309,8146+12]..[309,8146+13])
                                      Ppat_any
                                    pattern (lambda/switch.ml[309,8146+14]..[309,8146+15])
                                      Ppat_any
                                  ]
                                expression (lambda/switch.ml[309,8146+18]..[309,8146+27])
                                  Pexp_apply
                                  expression (lambda/switch.ml[309,8146+18]..[309,8146+27]) ghost
                                    Pexp_ident "Array.get" (lambda/switch.ml[309,8146+18]..[309,8146+27]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[309,8146+18]..[309,8146+23])
                                        Pexp_ident "cases" (lambda/switch.ml[309,8146+18]..[309,8146+23])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[309,8146+25]..[309,8146+26])
                                        Pexp_ident "i" (lambda/switch.ml[309,8146+25]..[309,8146+26])
                                  ]
                              <def>
                                pattern (lambda/switch.ml[310,8174+8]..[310,8174+16])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/switch.ml[310,8174+8]..[310,8174+9])
                                      Ppat_any
                                    pattern (lambda/switch.ml[310,8174+10]..[310,8174+14])
                                      Ppat_var "high" (lambda/switch.ml[310,8174+10]..[310,8174+14])
                                    pattern (lambda/switch.ml[310,8174+15]..[310,8174+16])
                                      Ppat_any
                                  ]
                                expression (lambda/switch.ml[310,8174+19]..[310,8174+28])
                                  Pexp_apply
                                  expression (lambda/switch.ml[310,8174+19]..[310,8174+28]) ghost
                                    Pexp_ident "Array.get" (lambda/switch.ml[310,8174+19]..[310,8174+28]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[310,8174+19]..[310,8174+24])
                                        Pexp_ident "cases" (lambda/switch.ml[310,8174+19]..[310,8174+24])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[310,8174+26]..[310,8174+27])
                                        Pexp_ident "j" (lambda/switch.ml[310,8174+26]..[310,8174+27])
                                  ]
                            ]
                            expression (lambda/switch.ml[311,8206+4]..[313,8251+76])
                              Pexp_tuple
                              [
                                expression (lambda/switch.ml[311,8206+4]..[311,8206+7])
                                  Pexp_ident "low" (lambda/switch.ml[311,8206+4]..[311,8206+7])
                                expression (lambda/switch.ml[311,8206+8]..[311,8206+12])
                                  Pexp_ident "high" (lambda/switch.ml[311,8206+8]..[311,8206+12])
                                expression (lambda/switch.ml[312,8220+4]..[312,8220+29])
                                  Pexp_apply
                                  expression (lambda/switch.ml[312,8220+4]..[312,8220+13])
                                    Pexp_ident "Array.sub" (lambda/switch.ml[312,8220+4]..[312,8220+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[312,8220+14]..[312,8220+19])
                                        Pexp_ident "cases" (lambda/switch.ml[312,8220+14]..[312,8220+19])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[312,8220+20]..[312,8220+21])
                                        Pexp_ident "i" (lambda/switch.ml[312,8220+20]..[312,8220+21])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[312,8220+22]..[312,8220+29])
                                        Pexp_apply
                                        expression (lambda/switch.ml[312,8220+26]..[312,8220+27])
                                          Pexp_ident "+" (lambda/switch.ml[312,8220+26]..[312,8220+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[312,8220+23]..[312,8220+26])
                                              Pexp_apply
                                              expression (lambda/switch.ml[312,8220+24]..[312,8220+25])
                                                Pexp_ident "-" (lambda/switch.ml[312,8220+24]..[312,8220+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[312,8220+23]..[312,8220+24])
                                                    Pexp_ident "j" (lambda/switch.ml[312,8220+23]..[312,8220+24])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[312,8220+25]..[312,8220+26])
                                                    Pexp_ident "i" (lambda/switch.ml[312,8220+25]..[312,8220+26])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[312,8220+27]..[312,8220+28])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                  ]
                                expression (lambda/switch.ml[313,8251+4]..[313,8251+76])
                                  Pexp_apply
                                  expression (lambda/switch.ml[313,8251+4]..[313,8251+15])
                                    Pexp_ident "case_append" (lambda/switch.ml[313,8251+4]..[313,8251+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[313,8251+16]..[313,8251+37])
                                        Pexp_apply
                                        expression (lambda/switch.ml[313,8251+17]..[313,8251+26])
                                          Pexp_ident "Array.sub" (lambda/switch.ml[313,8251+17]..[313,8251+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[313,8251+27]..[313,8251+32])
                                              Pexp_ident "cases" (lambda/switch.ml[313,8251+27]..[313,8251+32])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[313,8251+33]..[313,8251+34])
                                              Pexp_constant PConst_int (0,None)
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[313,8251+35]..[313,8251+36])
                                              Pexp_ident "i" (lambda/switch.ml[313,8251+35]..[313,8251+36])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[313,8251+38]..[313,8251+76])
                                        Pexp_apply
                                        expression (lambda/switch.ml[313,8251+39]..[313,8251+48])
                                          Pexp_ident "Array.sub" (lambda/switch.ml[313,8251+39]..[313,8251+48])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[313,8251+49]..[313,8251+54])
                                              Pexp_ident "cases" (lambda/switch.ml[313,8251+49]..[313,8251+54])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[313,8251+55]..[313,8251+60])
                                              Pexp_apply
                                              expression (lambda/switch.ml[313,8251+57]..[313,8251+58])
                                                Pexp_ident "+" (lambda/switch.ml[313,8251+57]..[313,8251+58])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[313,8251+56]..[313,8251+57])
                                                    Pexp_ident "j" (lambda/switch.ml[313,8251+56]..[313,8251+57])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[313,8251+58]..[313,8251+59])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[313,8251+61]..[313,8251+75])
                                              Pexp_apply
                                              expression (lambda/switch.ml[313,8251+68]..[313,8251+69])
                                                Pexp_ident "-" (lambda/switch.ml[313,8251+68]..[313,8251+69])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[313,8251+62]..[313,8251+68])
                                                    Pexp_ident "lcases" (lambda/switch.ml[313,8251+62]..[313,8251+68])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[313,8251+69]..[313,8251+74])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[313,8251+71]..[313,8251+72])
                                                      Pexp_ident "+" (lambda/switch.ml[313,8251+71]..[313,8251+72])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[313,8251+70]..[313,8251+71])
                                                          Pexp_ident "j" (lambda/switch.ml[313,8251+70]..[313,8251+71])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[313,8251+72]..[313,8251+73])
                                                          Pexp_constant PConst_int (1,None)
                                                    ]
                                              ]
                                        ]
                                  ]
                              ]
              ]
            structure_item (lambda/switch.ml[315,8329+2]..[315,8329+52])
              Pstr_type Rec
              [
                type_declaration "kind" (lambda/switch.ml[315,8329+7]..[315,8329+11]) (lambda/switch.ml[315,8329+2]..[315,8329+52])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (lambda/switch.ml[315,8329+14]..[315,8329+27])
                          "Kvalue" (lambda/switch.ml[315,8329+14]..[315,8329+20])
                          [
                            core_type (lambda/switch.ml[315,8329+24]..[315,8329+27])
                              Ptyp_constr "int" (lambda/switch.ml[315,8329+24]..[315,8329+27])
                              []
                          ]
                          None
                        (lambda/switch.ml[315,8329+28]..[315,8329+43])
                          "Kinter" (lambda/switch.ml[315,8329+30]..[315,8329+36])
                          [
                            core_type (lambda/switch.ml[315,8329+40]..[315,8329+43])
                              Ptyp_constr "int" (lambda/switch.ml[315,8329+40]..[315,8329+43])
                              []
                          ]
                          None
                        (lambda/switch.ml[315,8329+44]..[315,8329+52])
                          "Kempty" (lambda/switch.ml[315,8329+46]..[315,8329+52])
                          []
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lambda/switch.ml[330,8674+2]..[330,8674+27])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[330,8674+6]..[330,8674+7])
                    Ppat_var "t" (lambda/switch.ml[330,8674+6]..[330,8674+7])
                  expression (lambda/switch.ml[330,8674+10]..[330,8674+27])
                    Pexp_apply
                    expression (lambda/switch.ml[330,8674+10]..[330,8674+24])
                      Pexp_ident "Hashtbl.create" (lambda/switch.ml[330,8674+10]..[330,8674+24])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/switch.ml[330,8674+25]..[330,8674+27])
                          Pexp_constant PConst_int (17,None)
                    ]
              ]
            structure_item (lambda/switch.ml[332,8703+2]..[364,9473+55])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[332,8703+6]..[332,8703+14])
                    Ppat_var "make_key" (lambda/switch.ml[332,8703+6]..[332,8703+14])
                  expression (lambda/switch.ml[332,8703+16]..[364,9473+55]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[332,8703+16]..[332,8703+21])
                      Ppat_var "cases" (lambda/switch.ml[332,8703+16]..[332,8703+21])
                    expression (lambda/switch.ml[333,8727+4]..[364,9473+55])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/switch.ml[333,8727+8]..[333,8727+12])
                            Ppat_var "seen" (lambda/switch.ml[333,8727+8]..[333,8727+12])
                          expression (lambda/switch.ml[333,8727+15]..[333,8727+21])
                            Pexp_apply
                            expression (lambda/switch.ml[333,8727+15]..[333,8727+18])
                              Pexp_ident "ref" (lambda/switch.ml[333,8727+15]..[333,8727+18])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[333,8727+19]..[333,8727+21])
                                  Pexp_construct "[]" (lambda/switch.ml[333,8727+19]..[333,8727+21])
                                  None
                            ]
                        <def>
                          pattern (lambda/switch.ml[334,8749+8]..[334,8749+13])
                            Ppat_var "count" (lambda/switch.ml[334,8749+8]..[334,8749+13])
                          expression (lambda/switch.ml[334,8749+16]..[334,8749+21])
                            Pexp_apply
                            expression (lambda/switch.ml[334,8749+16]..[334,8749+19])
                              Pexp_ident "ref" (lambda/switch.ml[334,8749+16]..[334,8749+19])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[334,8749+20]..[334,8749+21])
                                  Pexp_constant PConst_int (0,None)
                            ]
                      ]
                      expression (lambda/switch.ml[335,8774+4]..[364,9473+55])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (lambda/switch.ml[335,8774+12]..[335,8774+18])
                              Ppat_var "got_it" (lambda/switch.ml[335,8774+12]..[335,8774+18])
                            expression (lambda/switch.ml[335,8774+19]..[345,9019+26]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/switch.ml[335,8774+19]..[335,8774+22])
                                Ppat_var "act" (lambda/switch.ml[335,8774+19]..[335,8774+22])
                              expression (lambda/switch.ml[335,8774+25]..[345,9019+26])
                                Pexp_function
                                [
                                  <case>
                                    pattern (lambda/switch.ml[336,8808+8]..[336,8808+10])
                                      Ppat_construct "[]" (lambda/switch.ml[336,8808+8]..[336,8808+10])
                                      None
                                    expression (lambda/switch.ml[337,8822+10]..[340,8914+11])
                                      Pexp_sequence
                                      expression (lambda/switch.ml[337,8822+10]..[337,8822+38])
                                        Pexp_apply
                                        expression (lambda/switch.ml[337,8822+15]..[337,8822+17])
                                          Pexp_ident ":=" (lambda/switch.ml[337,8822+15]..[337,8822+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[337,8822+10]..[337,8822+14])
                                              Pexp_ident "seen" (lambda/switch.ml[337,8822+10]..[337,8822+14])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[337,8822+18]..[337,8822+38])
                                              Pexp_construct "::" (lambda/switch.ml[337,8822+30]..[337,8822+32])
                                              Some
                                                expression (lambda/switch.ml[337,8822+18]..[337,8822+38]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/switch.ml[337,8822+18]..[337,8822+30])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/switch.ml[337,8822+19]..[337,8822+22])
                                                          Pexp_ident "act" (lambda/switch.ml[337,8822+19]..[337,8822+22])
                                                        expression (lambda/switch.ml[337,8822+23]..[337,8822+29])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[337,8822+23]..[337,8822+24])
                                                            Pexp_ident "!" (lambda/switch.ml[337,8822+23]..[337,8822+24])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[337,8822+24]..[337,8822+29])
                                                                Pexp_ident "count" (lambda/switch.ml[337,8822+24]..[337,8822+29])
                                                          ]
                                                      ]
                                                    expression (lambda/switch.ml[337,8822+33]..[337,8822+38])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[337,8822+33]..[337,8822+34])
                                                        Pexp_ident "!" (lambda/switch.ml[337,8822+33]..[337,8822+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[337,8822+34]..[337,8822+38])
                                                            Pexp_ident "seen" (lambda/switch.ml[337,8822+34]..[337,8822+38])
                                                      ]
                                                  ]
                                        ]
                                      expression (lambda/switch.ml[338,8863+10]..[340,8914+11])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/switch.ml[338,8863+14]..[338,8863+15])
                                              Ppat_var "r" (lambda/switch.ml[338,8863+14]..[338,8863+15])
                                            expression (lambda/switch.ml[338,8863+18]..[338,8863+24])
                                              Pexp_apply
                                              expression (lambda/switch.ml[338,8863+18]..[338,8863+19])
                                                Pexp_ident "!" (lambda/switch.ml[338,8863+18]..[338,8863+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[338,8863+19]..[338,8863+24])
                                                    Pexp_ident "count" (lambda/switch.ml[338,8863+19]..[338,8863+24])
                                              ]
                                        ]
                                        expression (lambda/switch.ml[339,8891+10]..[340,8914+11])
                                          Pexp_sequence
                                          expression (lambda/switch.ml[339,8891+10]..[339,8891+20])
                                            Pexp_apply
                                            expression (lambda/switch.ml[339,8891+10]..[339,8891+14])
                                              Pexp_ident "incr" (lambda/switch.ml[339,8891+10]..[339,8891+14])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[339,8891+15]..[339,8891+20])
                                                  Pexp_ident "count" (lambda/switch.ml[339,8891+15]..[339,8891+20])
                                            ]
                                          expression (lambda/switch.ml[340,8914+10]..[340,8914+11])
                                            Pexp_ident "r" (lambda/switch.ml[340,8914+10]..[340,8914+11])
                                  <case>
                                    pattern (lambda/switch.ml[341,8926+8]..[341,8926+27])
                                      Ppat_construct "::" (lambda/switch.ml[341,8926+21]..[341,8926+23])
                                      Some
                                        []
                                        pattern (lambda/switch.ml[341,8926+8]..[341,8926+27]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lambda/switch.ml[341,8926+8]..[341,8926+20])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/switch.ml[341,8926+9]..[341,8926+13])
                                                  Ppat_var "act0" (lambda/switch.ml[341,8926+9]..[341,8926+13])
                                                pattern (lambda/switch.ml[341,8926+14]..[341,8926+19])
                                                  Ppat_var "index" (lambda/switch.ml[341,8926+14]..[341,8926+19])
                                              ]
                                            pattern (lambda/switch.ml[341,8926+24]..[341,8926+27])
                                              Ppat_var "rem" (lambda/switch.ml[341,8926+24]..[341,8926+27])
                                          ]
                                    expression (lambda/switch.ml[342,8957+10]..[345,9019+26])
                                      Pexp_ifthenelse
                                      expression (lambda/switch.ml[342,8957+13]..[342,8957+23])
                                        Pexp_apply
                                        expression (lambda/switch.ml[342,8957+18]..[342,8957+19])
                                          Pexp_ident "=" (lambda/switch.ml[342,8957+18]..[342,8957+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[342,8957+13]..[342,8957+17])
                                              Pexp_ident "act0" (lambda/switch.ml[342,8957+13]..[342,8957+17])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[342,8957+20]..[342,8957+23])
                                              Pexp_ident "act" (lambda/switch.ml[342,8957+20]..[342,8957+23])
                                        ]
                                      expression (lambda/switch.ml[343,8986+12]..[343,8986+17])
                                        Pexp_ident "index" (lambda/switch.ml[343,8986+12]..[343,8986+17])
                                      Some
                                        expression (lambda/switch.ml[345,9019+12]..[345,9019+26])
                                          Pexp_apply
                                          expression (lambda/switch.ml[345,9019+12]..[345,9019+18])
                                            Pexp_ident "got_it" (lambda/switch.ml[345,9019+12]..[345,9019+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[345,9019+19]..[345,9019+22])
                                                Pexp_ident "act" (lambda/switch.ml[345,9019+19]..[345,9019+22])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[345,9019+23]..[345,9019+26])
                                                Pexp_ident "rem" (lambda/switch.ml[345,9019+23]..[345,9019+26])
                                          ]
                                ]
                        ]
                        expression (lambda/switch.ml[347,9050+4]..[364,9473+55])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/switch.ml[347,9050+8]..[347,9050+16])
                                Ppat_var "make_one" (lambda/switch.ml[347,9050+8]..[347,9050+16])
                              expression (lambda/switch.ml[347,9050+17]..[351,9140+33]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/switch.ml[347,9050+17]..[347,9050+18])
                                  Ppat_var "l" (lambda/switch.ml[347,9050+17]..[347,9050+18])
                                expression (lambda/switch.ml[347,9050+19]..[351,9140+33]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/switch.ml[347,9050+19]..[347,9050+20])
                                    Ppat_var "h" (lambda/switch.ml[347,9050+19]..[347,9050+20])
                                  expression (lambda/switch.ml[347,9050+21]..[351,9140+33]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lambda/switch.ml[347,9050+21]..[347,9050+24])
                                      Ppat_var "act" (lambda/switch.ml[347,9050+21]..[347,9050+24])
                                    expression (lambda/switch.ml[348,9077+6]..[351,9140+33])
                                      Pexp_ifthenelse
                                      expression (lambda/switch.ml[348,9077+9]..[348,9077+12])
                                        Pexp_apply
                                        expression (lambda/switch.ml[348,9077+10]..[348,9077+11])
                                          Pexp_ident "=" (lambda/switch.ml[348,9077+10]..[348,9077+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[348,9077+9]..[348,9077+10])
                                              Pexp_ident "l" (lambda/switch.ml[348,9077+9]..[348,9077+10])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[348,9077+11]..[348,9077+12])
                                              Pexp_ident "h" (lambda/switch.ml[348,9077+11]..[348,9077+12])
                                        ]
                                      expression (lambda/switch.ml[349,9095+8]..[349,9095+33])
                                        Pexp_construct "Kvalue" (lambda/switch.ml[349,9095+8]..[349,9095+14])
                                        Some
                                          expression (lambda/switch.ml[349,9095+15]..[349,9095+33])
                                            Pexp_apply
                                            expression (lambda/switch.ml[349,9095+16]..[349,9095+22])
                                              Pexp_ident "got_it" (lambda/switch.ml[349,9095+16]..[349,9095+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[349,9095+23]..[349,9095+26])
                                                  Pexp_ident "act" (lambda/switch.ml[349,9095+23]..[349,9095+26])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[349,9095+27]..[349,9095+32])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[349,9095+27]..[349,9095+28])
                                                    Pexp_ident "!" (lambda/switch.ml[349,9095+27]..[349,9095+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[349,9095+28]..[349,9095+32])
                                                        Pexp_ident "seen" (lambda/switch.ml[349,9095+28]..[349,9095+32])
                                                  ]
                                            ]
                                      Some
                                        expression (lambda/switch.ml[351,9140+8]..[351,9140+33])
                                          Pexp_construct "Kinter" (lambda/switch.ml[351,9140+8]..[351,9140+14])
                                          Some
                                            expression (lambda/switch.ml[351,9140+15]..[351,9140+33])
                                              Pexp_apply
                                              expression (lambda/switch.ml[351,9140+16]..[351,9140+22])
                                                Pexp_ident "got_it" (lambda/switch.ml[351,9140+16]..[351,9140+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[351,9140+23]..[351,9140+26])
                                                    Pexp_ident "act" (lambda/switch.ml[351,9140+23]..[351,9140+26])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[351,9140+27]..[351,9140+32])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[351,9140+27]..[351,9140+28])
                                                      Pexp_ident "!" (lambda/switch.ml[351,9140+27]..[351,9140+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[351,9140+28]..[351,9140+32])
                                                          Pexp_ident "seen" (lambda/switch.ml[351,9140+28]..[351,9140+32])
                                                    ]
                                              ]
                          ]
                          expression (lambda/switch.ml[353,9178+4]..[364,9473+55])
                            Pexp_let Rec
                            [
                              <def>
                                pattern (lambda/switch.ml[353,9178+12]..[353,9178+20])
                                  Ppat_var "make_rec" (lambda/switch.ml[353,9178+12]..[353,9178+20])
                                expression (lambda/switch.ml[353,9178+21]..[361,9366+52]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/switch.ml[353,9178+21]..[353,9178+22])
                                    Ppat_var "i" (lambda/switch.ml[353,9178+21]..[353,9178+22])
                                  expression (lambda/switch.ml[353,9178+23]..[361,9366+52]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lambda/switch.ml[353,9178+23]..[353,9178+25])
                                      Ppat_var "pl" (lambda/switch.ml[353,9178+23]..[353,9178+25])
                                    expression (lambda/switch.ml[354,9206+6]..[361,9366+52])
                                      Pexp_ifthenelse
                                      expression (lambda/switch.ml[354,9206+9]..[354,9206+14])
                                        Pexp_apply
                                        expression (lambda/switch.ml[354,9206+11]..[354,9206+12])
                                          Pexp_ident "<" (lambda/switch.ml[354,9206+11]..[354,9206+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[354,9206+9]..[354,9206+10])
                                              Pexp_ident "i" (lambda/switch.ml[354,9206+9]..[354,9206+10])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[354,9206+13]..[354,9206+14])
                                              Pexp_constant PConst_int (0,None)
                                        ]
                                      expression (lambda/switch.ml[355,9226+8]..[355,9226+10])
                                        Pexp_construct "[]" (lambda/switch.ml[355,9226+8]..[355,9226+10])
                                        None
                                      Some
                                        expression (lambda/switch.ml[357,9248+8]..[361,9366+52])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/switch.ml[357,9248+12]..[357,9248+19])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/switch.ml[357,9248+12]..[357,9248+13])
                                                    Ppat_var "l" (lambda/switch.ml[357,9248+12]..[357,9248+13])
                                                  pattern (lambda/switch.ml[357,9248+14]..[357,9248+15])
                                                    Ppat_var "h" (lambda/switch.ml[357,9248+14]..[357,9248+15])
                                                  pattern (lambda/switch.ml[357,9248+16]..[357,9248+19])
                                                    Ppat_var "act" (lambda/switch.ml[357,9248+16]..[357,9248+19])
                                                ]
                                              expression (lambda/switch.ml[357,9248+22]..[357,9248+31])
                                                Pexp_apply
                                                expression (lambda/switch.ml[357,9248+22]..[357,9248+31]) ghost
                                                  Pexp_ident "Array.get" (lambda/switch.ml[357,9248+22]..[357,9248+31]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[357,9248+22]..[357,9248+27])
                                                      Pexp_ident "cases" (lambda/switch.ml[357,9248+22]..[357,9248+27])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[357,9248+29]..[357,9248+30])
                                                      Pexp_ident "i" (lambda/switch.ml[357,9248+29]..[357,9248+30])
                                                ]
                                          ]
                                          expression (lambda/switch.ml[358,9283+8]..[361,9366+52])
                                            Pexp_ifthenelse
                                            expression (lambda/switch.ml[358,9283+11]..[358,9283+19])
                                              Pexp_apply
                                              expression (lambda/switch.ml[358,9283+14]..[358,9283+15])
                                                Pexp_ident "=" (lambda/switch.ml[358,9283+14]..[358,9283+15])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[358,9283+11]..[358,9283+13])
                                                    Pexp_ident "pl" (lambda/switch.ml[358,9283+11]..[358,9283+13])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[358,9283+16]..[358,9283+19])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[358,9283+17]..[358,9283+18])
                                                      Pexp_ident "+" (lambda/switch.ml[358,9283+17]..[358,9283+18])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[358,9283+16]..[358,9283+17])
                                                          Pexp_ident "h" (lambda/switch.ml[358,9283+16]..[358,9283+17])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[358,9283+18]..[358,9283+19])
                                                          Pexp_constant PConst_int (1,None)
                                                    ]
                                              ]
                                            expression (lambda/switch.ml[359,9308+10]..[359,9308+44])
                                              Pexp_construct "::" (lambda/switch.ml[359,9308+26]..[359,9308+28])
                                              Some
                                                expression (lambda/switch.ml[359,9308+10]..[359,9308+44]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/switch.ml[359,9308+10]..[359,9308+26])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[359,9308+10]..[359,9308+18])
                                                        Pexp_ident "make_one" (lambda/switch.ml[359,9308+10]..[359,9308+18])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[359,9308+19]..[359,9308+20])
                                                            Pexp_ident "l" (lambda/switch.ml[359,9308+19]..[359,9308+20])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[359,9308+21]..[359,9308+22])
                                                            Pexp_ident "h" (lambda/switch.ml[359,9308+21]..[359,9308+22])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[359,9308+23]..[359,9308+26])
                                                            Pexp_ident "act" (lambda/switch.ml[359,9308+23]..[359,9308+26])
                                                      ]
                                                    expression (lambda/switch.ml[359,9308+28]..[359,9308+44])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[359,9308+28]..[359,9308+36])
                                                        Pexp_ident "make_rec" (lambda/switch.ml[359,9308+28]..[359,9308+36])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[359,9308+37]..[359,9308+42])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[359,9308+39]..[359,9308+40])
                                                              Pexp_ident "-" (lambda/switch.ml[359,9308+39]..[359,9308+40])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[359,9308+38]..[359,9308+39])
                                                                  Pexp_ident "i" (lambda/switch.ml[359,9308+38]..[359,9308+39])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[359,9308+40]..[359,9308+41])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[359,9308+43]..[359,9308+44])
                                                            Pexp_ident "l" (lambda/switch.ml[359,9308+43]..[359,9308+44])
                                                      ]
                                                  ]
                                            Some
                                              expression (lambda/switch.ml[361,9366+10]..[361,9366+52])
                                                Pexp_construct "::" (lambda/switch.ml[361,9366+16]..[361,9366+18])
                                                Some
                                                  expression (lambda/switch.ml[361,9366+10]..[361,9366+52]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/switch.ml[361,9366+10]..[361,9366+16])
                                                        Pexp_construct "Kempty" (lambda/switch.ml[361,9366+10]..[361,9366+16])
                                                        None
                                                      expression (lambda/switch.ml[361,9366+18]..[361,9366+52])
                                                        Pexp_construct "::" (lambda/switch.ml[361,9366+34]..[361,9366+36])
                                                        Some
                                                          expression (lambda/switch.ml[361,9366+18]..[361,9366+52]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/switch.ml[361,9366+18]..[361,9366+34])
                                                                Pexp_apply
                                                                expression (lambda/switch.ml[361,9366+18]..[361,9366+26])
                                                                  Pexp_ident "make_one" (lambda/switch.ml[361,9366+18]..[361,9366+26])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/switch.ml[361,9366+27]..[361,9366+28])
                                                                      Pexp_ident "l" (lambda/switch.ml[361,9366+27]..[361,9366+28])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/switch.ml[361,9366+29]..[361,9366+30])
                                                                      Pexp_ident "h" (lambda/switch.ml[361,9366+29]..[361,9366+30])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/switch.ml[361,9366+31]..[361,9366+34])
                                                                      Pexp_ident "act" (lambda/switch.ml[361,9366+31]..[361,9366+34])
                                                                ]
                                                              expression (lambda/switch.ml[361,9366+36]..[361,9366+52])
                                                                Pexp_apply
                                                                expression (lambda/switch.ml[361,9366+36]..[361,9366+44])
                                                                  Pexp_ident "make_rec" (lambda/switch.ml[361,9366+36]..[361,9366+44])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/switch.ml[361,9366+45]..[361,9366+50])
                                                                      Pexp_apply
                                                                      expression (lambda/switch.ml[361,9366+47]..[361,9366+48])
Pexp_ident "-" (lambda/switch.ml[361,9366+47]..[361,9366+48])
                                                                      [
<arg>
Nolabel
  expression (lambda/switch.ml[361,9366+46]..[361,9366+47])
    Pexp_ident "i" (lambda/switch.ml[361,9366+46]..[361,9366+47])
<arg>
Nolabel
  expression (lambda/switch.ml[361,9366+48]..[361,9366+49])
    Pexp_constant PConst_int (1,None)
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/switch.ml[361,9366+51]..[361,9366+52])
                                                                      Pexp_ident "l" (lambda/switch.ml[361,9366+51]..[361,9366+52])
                                                                ]
                                                            ]
                                                    ]
                            ]
                            expression (lambda/switch.ml[363,9423+4]..[364,9473+55])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/switch.ml[363,9423+8]..[363,9423+15])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/switch.ml[363,9423+8]..[363,9423+9])
                                        Ppat_var "l" (lambda/switch.ml[363,9423+8]..[363,9423+9])
                                      pattern (lambda/switch.ml[363,9423+10]..[363,9423+11])
                                        Ppat_var "h" (lambda/switch.ml[363,9423+10]..[363,9423+11])
                                      pattern (lambda/switch.ml[363,9423+12]..[363,9423+15])
                                        Ppat_var "act" (lambda/switch.ml[363,9423+12]..[363,9423+15])
                                    ]
                                  expression (lambda/switch.ml[363,9423+18]..[363,9423+46])
                                    Pexp_apply
                                    expression (lambda/switch.ml[363,9423+18]..[363,9423+46]) ghost
                                      Pexp_ident "Array.get" (lambda/switch.ml[363,9423+18]..[363,9423+46]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[363,9423+18]..[363,9423+23])
                                          Pexp_ident "cases" (lambda/switch.ml[363,9423+18]..[363,9423+23])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[363,9423+25]..[363,9423+45])
                                          Pexp_apply
                                          expression (lambda/switch.ml[363,9423+43]..[363,9423+44])
                                            Pexp_ident "-" (lambda/switch.ml[363,9423+43]..[363,9423+44])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[363,9423+25]..[363,9423+43])
                                                Pexp_apply
                                                expression (lambda/switch.ml[363,9423+25]..[363,9423+37])
                                                  Pexp_ident "Array.length" (lambda/switch.ml[363,9423+25]..[363,9423+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[363,9423+38]..[363,9423+43])
                                                      Pexp_ident "cases" (lambda/switch.ml[363,9423+38]..[363,9423+43])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[363,9423+44]..[363,9423+45])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                    ]
                              ]
                              expression (lambda/switch.ml[364,9473+4]..[364,9473+55])
                                Pexp_construct "::" (lambda/switch.ml[364,9473+20]..[364,9473+22])
                                Some
                                  expression (lambda/switch.ml[364,9473+4]..[364,9473+55]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lambda/switch.ml[364,9473+4]..[364,9473+20])
                                        Pexp_apply
                                        expression (lambda/switch.ml[364,9473+4]..[364,9473+12])
                                          Pexp_ident "make_one" (lambda/switch.ml[364,9473+4]..[364,9473+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[364,9473+13]..[364,9473+14])
                                              Pexp_ident "l" (lambda/switch.ml[364,9473+13]..[364,9473+14])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[364,9473+15]..[364,9473+16])
                                              Pexp_ident "h" (lambda/switch.ml[364,9473+15]..[364,9473+16])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[364,9473+17]..[364,9473+20])
                                              Pexp_ident "act" (lambda/switch.ml[364,9473+17]..[364,9473+20])
                                        ]
                                      expression (lambda/switch.ml[364,9473+22]..[364,9473+55])
                                        Pexp_apply
                                        expression (lambda/switch.ml[364,9473+22]..[364,9473+30])
                                          Pexp_ident "make_rec" (lambda/switch.ml[364,9473+22]..[364,9473+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[364,9473+31]..[364,9473+53])
                                              Pexp_apply
                                              expression (lambda/switch.ml[364,9473+50]..[364,9473+51])
                                                Pexp_ident "-" (lambda/switch.ml[364,9473+50]..[364,9473+51])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[364,9473+32]..[364,9473+50])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[364,9473+32]..[364,9473+44])
                                                      Pexp_ident "Array.length" (lambda/switch.ml[364,9473+32]..[364,9473+44])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[364,9473+45]..[364,9473+50])
                                                          Pexp_ident "cases" (lambda/switch.ml[364,9473+45]..[364,9473+50])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[364,9473+51]..[364,9473+52])
                                                    Pexp_constant PConst_int (2,None)
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[364,9473+54]..[364,9473+55])
                                              Pexp_ident "l" (lambda/switch.ml[364,9473+54]..[364,9473+55])
                                        ]
                                    ]
              ]
            structure_item (lambda/switch.ml[367,9531+2]..[375,9736+18])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[367,9531+6]..[367,9531+14])
                    Ppat_var "same_act" (lambda/switch.ml[367,9531+6]..[367,9531+14])
                  expression (lambda/switch.ml[367,9531+15]..[375,9736+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[367,9531+15]..[367,9531+16])
                      Ppat_var "t" (lambda/switch.ml[367,9531+15]..[367,9531+16])
                    expression (lambda/switch.ml[368,9550+4]..[375,9736+18])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/switch.ml[368,9550+8]..[368,9550+11])
                            Ppat_var "len" (lambda/switch.ml[368,9550+8]..[368,9550+11])
                          expression (lambda/switch.ml[368,9550+14]..[368,9550+28])
                            Pexp_apply
                            expression (lambda/switch.ml[368,9550+14]..[368,9550+26])
                              Pexp_ident "Array.length" (lambda/switch.ml[368,9550+14]..[368,9550+26])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[368,9550+27]..[368,9550+28])
                                  Pexp_ident "t" (lambda/switch.ml[368,9550+27]..[368,9550+28])
                            ]
                      ]
                      expression (lambda/switch.ml[369,9582+4]..[375,9736+18])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[369,9582+8]..[369,9582+9])
                              Ppat_var "a" (lambda/switch.ml[369,9582+8]..[369,9582+9])
                            expression (lambda/switch.ml[369,9582+12]..[369,9582+29])
                              Pexp_apply
                              expression (lambda/switch.ml[369,9582+12]..[369,9582+19])
                                Pexp_ident "get_act" (lambda/switch.ml[369,9582+12]..[369,9582+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[369,9582+20]..[369,9582+21])
                                    Pexp_ident "t" (lambda/switch.ml[369,9582+20]..[369,9582+21])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[369,9582+22]..[369,9582+29])
                                    Pexp_apply
                                    expression (lambda/switch.ml[369,9582+26]..[369,9582+27])
                                      Pexp_ident "-" (lambda/switch.ml[369,9582+26]..[369,9582+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[369,9582+23]..[369,9582+26])
                                          Pexp_ident "len" (lambda/switch.ml[369,9582+23]..[369,9582+26])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[369,9582+27]..[369,9582+28])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                              ]
                        ]
                        expression (lambda/switch.ml[370,9615+4]..[375,9736+18])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (lambda/switch.ml[370,9615+12]..[370,9615+18])
                                Ppat_var "do_rec" (lambda/switch.ml[370,9615+12]..[370,9615+18])
                              expression (lambda/switch.ml[370,9615+19]..[374,9705+27]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/switch.ml[370,9615+19]..[370,9615+20])
                                  Ppat_var "i" (lambda/switch.ml[370,9615+19]..[370,9615+20])
                                expression (lambda/switch.ml[371,9638+6]..[374,9705+27])
                                  Pexp_ifthenelse
                                  expression (lambda/switch.ml[371,9638+9]..[371,9638+14])
                                    Pexp_apply
                                    expression (lambda/switch.ml[371,9638+11]..[371,9638+12])
                                      Pexp_ident "<" (lambda/switch.ml[371,9638+11]..[371,9638+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[371,9638+9]..[371,9638+10])
                                          Pexp_ident "i" (lambda/switch.ml[371,9638+9]..[371,9638+10])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[371,9638+13]..[371,9638+14])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                  expression (lambda/switch.ml[371,9638+20]..[371,9638+24])
                                    Pexp_construct "true" (lambda/switch.ml[371,9638+20]..[371,9638+24])
                                    None
                                  Some
                                    expression (lambda/switch.ml[373,9674+8]..[374,9705+27])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/switch.ml[373,9674+12]..[373,9674+13])
                                            Ppat_var "b" (lambda/switch.ml[373,9674+12]..[373,9674+13])
                                          expression (lambda/switch.ml[373,9674+16]..[373,9674+27])
                                            Pexp_apply
                                            expression (lambda/switch.ml[373,9674+16]..[373,9674+23])
                                              Pexp_ident "get_act" (lambda/switch.ml[373,9674+16]..[373,9674+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[373,9674+24]..[373,9674+25])
                                                  Pexp_ident "t" (lambda/switch.ml[373,9674+24]..[373,9674+25])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[373,9674+26]..[373,9674+27])
                                                  Pexp_ident "i" (lambda/switch.ml[373,9674+26]..[373,9674+27])
                                            ]
                                      ]
                                      expression (lambda/switch.ml[374,9705+8]..[374,9705+27])
                                        Pexp_apply
                                        expression (lambda/switch.ml[374,9705+12]..[374,9705+14])
                                          Pexp_ident "&&" (lambda/switch.ml[374,9705+12]..[374,9705+14])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[374,9705+8]..[374,9705+11])
                                              Pexp_apply
                                              expression (lambda/switch.ml[374,9705+9]..[374,9705+10])
                                                Pexp_ident "=" (lambda/switch.ml[374,9705+9]..[374,9705+10])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[374,9705+8]..[374,9705+9])
                                                    Pexp_ident "b" (lambda/switch.ml[374,9705+8]..[374,9705+9])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[374,9705+10]..[374,9705+11])
                                                    Pexp_ident "a" (lambda/switch.ml[374,9705+10]..[374,9705+11])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[374,9705+15]..[374,9705+27])
                                              Pexp_apply
                                              expression (lambda/switch.ml[374,9705+15]..[374,9705+21])
                                                Pexp_ident "do_rec" (lambda/switch.ml[374,9705+15]..[374,9705+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[374,9705+22]..[374,9705+27])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[374,9705+24]..[374,9705+25])
                                                      Pexp_ident "-" (lambda/switch.ml[374,9705+24]..[374,9705+25])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[374,9705+23]..[374,9705+24])
                                                          Pexp_ident "i" (lambda/switch.ml[374,9705+23]..[374,9705+24])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[374,9705+25]..[374,9705+26])
                                                          Pexp_constant PConst_int (1,None)
                                                    ]
                                              ]
                                        ]
                          ]
                          expression (lambda/switch.ml[375,9736+4]..[375,9736+18])
                            Pexp_apply
                            expression (lambda/switch.ml[375,9736+4]..[375,9736+10])
                              Pexp_ident "do_rec" (lambda/switch.ml[375,9736+4]..[375,9736+10])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[375,9736+11]..[375,9736+18])
                                  Pexp_apply
                                  expression (lambda/switch.ml[375,9736+15]..[375,9736+16])
                                    Pexp_ident "-" (lambda/switch.ml[375,9736+15]..[375,9736+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[375,9736+12]..[375,9736+15])
                                        Pexp_ident "len" (lambda/switch.ml[375,9736+12]..[375,9736+15])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[375,9736+16]..[375,9736+17])
                                        Pexp_constant PConst_int (2,None)
                                  ]
                            ]
              ]
            structure_item (lambda/switch.ml[392,10198+2]..[392,10198+28])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[392,10198+6]..[392,10198+17])
                    Ppat_var "inter_limit" (lambda/switch.ml[392,10198+6]..[392,10198+17])
                  expression (lambda/switch.ml[392,10198+20]..[392,10198+28])
                    Pexp_apply
                    expression (lambda/switch.ml[392,10198+22]..[392,10198+25])
                      Pexp_ident "lsl" (lambda/switch.ml[392,10198+22]..[392,10198+25])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/switch.ml[392,10198+20]..[392,10198+21])
                          Pexp_constant PConst_int (1,None)
                      <arg>
                      Nolabel
                        expression (lambda/switch.ml[392,10198+26]..[392,10198+28])
                          Pexp_constant PConst_int (16,None)
                    ]
              ]
            structure_item (lambda/switch.ml[394,10228+2]..[394,10228+26])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[394,10228+6]..[394,10228+14])
                    Ppat_var "ok_inter" (lambda/switch.ml[394,10228+6]..[394,10228+14])
                  expression (lambda/switch.ml[394,10228+17]..[394,10228+26])
                    Pexp_apply
                    expression (lambda/switch.ml[394,10228+17]..[394,10228+20])
                      Pexp_ident "ref" (lambda/switch.ml[394,10228+17]..[394,10228+20])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/switch.ml[394,10228+21]..[394,10228+26])
                          Pexp_construct "false" (lambda/switch.ml[394,10228+21]..[394,10228+26])
                          None
                    ]
              ]
            structure_item (lambda/switch.ml[396,10256+2]..[547,15018+11])
              Pstr_value Rec
              [
                <def>
                  pattern (lambda/switch.ml[396,10256+10]..[396,10256+19])
                    Ppat_var "opt_count" (lambda/switch.ml[396,10256+10]..[396,10256+19])
                  expression (lambda/switch.ml[396,10256+20]..[415,10810+9]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[396,10256+20]..[396,10256+23])
                      Ppat_var "top" (lambda/switch.ml[396,10256+20]..[396,10256+23])
                    expression (lambda/switch.ml[396,10256+24]..[415,10810+9]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[396,10256+24]..[396,10256+29])
                        Ppat_var "cases" (lambda/switch.ml[396,10256+24]..[396,10256+29])
                      expression (lambda/switch.ml[397,10288+4]..[415,10810+9])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[397,10288+8]..[397,10288+11])
                              Ppat_var "key" (lambda/switch.ml[397,10288+8]..[397,10288+11])
                            expression (lambda/switch.ml[397,10288+14]..[397,10288+28])
                              Pexp_apply
                              expression (lambda/switch.ml[397,10288+14]..[397,10288+22])
                                Pexp_ident "make_key" (lambda/switch.ml[397,10288+14]..[397,10288+22])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[397,10288+23]..[397,10288+28])
                                    Pexp_ident "cases" (lambda/switch.ml[397,10288+23]..[397,10288+28])
                              ]
                        ]
                        expression (lambda/switch.ml[398,10320+4]..[415,10810+9])
                          Pexp_try
                          expression (lambda/switch.ml[399,10328+6]..[399,10328+24])
                            Pexp_apply
                            expression (lambda/switch.ml[399,10328+6]..[399,10328+18])
                              Pexp_ident "Hashtbl.find" (lambda/switch.ml[399,10328+6]..[399,10328+18])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[399,10328+19]..[399,10328+20])
                                  Pexp_ident "t" (lambda/switch.ml[399,10328+19]..[399,10328+20])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[399,10328+21]..[399,10328+24])
                                  Pexp_ident "key" (lambda/switch.ml[399,10328+21]..[399,10328+24])
                            ]
                          [
                            <case>
                              pattern (lambda/switch.ml[401,10362+6]..[401,10362+15])
                                Ppat_construct "Not_found" (lambda/switch.ml[401,10362+6]..[401,10362+15])
                                None
                              expression (lambda/switch.ml[402,10381+8]..[415,10810+9])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/switch.ml[402,10381+12]..[402,10381+13])
                                      Ppat_var "r" (lambda/switch.ml[402,10381+12]..[402,10381+13])
                                    expression (lambda/switch.ml[403,10397+10]..[413,10748+28])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/switch.ml[403,10397+14]..[403,10397+20])
                                            Ppat_var "lcases" (lambda/switch.ml[403,10397+14]..[403,10397+20])
                                          expression (lambda/switch.ml[403,10397+23]..[403,10397+41])
                                            Pexp_apply
                                            expression (lambda/switch.ml[403,10397+23]..[403,10397+35])
                                              Pexp_ident "Array.length" (lambda/switch.ml[403,10397+23]..[403,10397+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[403,10397+36]..[403,10397+41])
                                                  Pexp_ident "cases" (lambda/switch.ml[403,10397+36]..[403,10397+41])
                                            ]
                                      ]
                                      expression (lambda/switch.ml[404,10442+10]..[413,10748+28])
                                        Pexp_match
                                        expression (lambda/switch.ml[404,10442+16]..[404,10442+22])
                                          Pexp_ident "lcases" (lambda/switch.ml[404,10442+16]..[404,10442+22])
                                        [
                                          <case>
                                            pattern (lambda/switch.ml[405,10470+12]..[405,10470+13])
                                              Ppat_constant PConst_int (0,None)
                                            expression (lambda/switch.ml[405,10470+17]..[405,10470+29])
                                              Pexp_assert
                                              expression (lambda/switch.ml[405,10470+24]..[405,10470+29])
                                                Pexp_construct "false" (lambda/switch.ml[405,10470+24]..[405,10470+29])
                                                None
                                          <case>
                                            pattern (lambda/switch.ml[406,10500+12]..[406,10500+13])
                                              Ppat_any
                                            <when>
                                              expression (lambda/switch.ml[406,10500+19]..[406,10500+33])
                                                Pexp_apply
                                                expression (lambda/switch.ml[406,10500+19]..[406,10500+27])
                                                  Pexp_ident "same_act" (lambda/switch.ml[406,10500+19]..[406,10500+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[406,10500+28]..[406,10500+33])
                                                      Pexp_ident "cases" (lambda/switch.ml[406,10500+28]..[406,10500+33])
                                                ]
                                            expression (lambda/switch.ml[406,10500+37]..[406,10500+66])
                                              Pexp_tuple
                                              [
                                                expression (lambda/switch.ml[406,10500+37]..[406,10500+39])
                                                  Pexp_construct "No" (lambda/switch.ml[406,10500+37]..[406,10500+39])
                                                  None
                                                expression (lambda/switch.ml[406,10500+41]..[406,10500+66])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/switch.ml[406,10500+42]..[406,10500+53])
                                                      Pexp_record
                                                      [
                                                        "n" (lambda/switch.ml[406,10500+43]..[406,10500+44])
                                                          expression (lambda/switch.ml[406,10500+45]..[406,10500+46])
                                                            Pexp_constant PConst_int (0,None)
                                                        "ni" (lambda/switch.ml[406,10500+48]..[406,10500+50])
                                                          expression (lambda/switch.ml[406,10500+51]..[406,10500+52])
                                                            Pexp_constant PConst_int (0,None)
                                                      ]
                                                      None
                                                    expression (lambda/switch.ml[406,10500+54]..[406,10500+65])
                                                      Pexp_record
                                                      [
                                                        "n" (lambda/switch.ml[406,10500+55]..[406,10500+56])
                                                          expression (lambda/switch.ml[406,10500+57]..[406,10500+58])
                                                            Pexp_constant PConst_int (0,None)
                                                        "ni" (lambda/switch.ml[406,10500+60]..[406,10500+62])
                                                          expression (lambda/switch.ml[406,10500+63]..[406,10500+64])
                                                            Pexp_constant PConst_int (0,None)
                                                      ]
                                                      None
                                                  ]
                                              ]
                                          <case>
                                            pattern (lambda/switch.ml[407,10567+12]..[407,10567+13])
                                              Ppat_any
                                            expression (lambda/switch.ml[408,10584+14]..[413,10748+28])
                                              Pexp_ifthenelse
                                              expression (lambda/switch.ml[408,10584+17]..[408,10584+30])
                                                Pexp_apply
                                                expression (lambda/switch.ml[408,10584+24]..[408,10584+25])
                                                  Pexp_ident "<" (lambda/switch.ml[408,10584+24]..[408,10584+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[408,10584+17]..[408,10584+23])
                                                      Pexp_ident "lcases" (lambda/switch.ml[408,10584+17]..[408,10584+23])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[408,10584+26]..[408,10584+30])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[408,10584+26]..[408,10584+27])
                                                        Pexp_ident "!" (lambda/switch.ml[408,10584+26]..[408,10584+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[408,10584+27]..[408,10584+30])
                                                            Pexp_ident "cut" (lambda/switch.ml[408,10584+27]..[408,10584+30])
                                                      ]
                                                ]
                                              expression (lambda/switch.ml[409,10620+16]..[409,10620+30])
                                                Pexp_apply
                                                expression (lambda/switch.ml[409,10620+16]..[409,10620+20])
                                                  Pexp_ident "enum" (lambda/switch.ml[409,10620+16]..[409,10620+20])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[409,10620+21]..[409,10620+24])
                                                      Pexp_ident "top" (lambda/switch.ml[409,10620+21]..[409,10620+24])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[409,10620+25]..[409,10620+30])
                                                      Pexp_ident "cases" (lambda/switch.ml[409,10620+25]..[409,10620+30])
                                                ]
                                              Some
                                                expression (lambda/switch.ml[410,10651+19]..[413,10748+28])
                                                  Pexp_ifthenelse
                                                  expression (lambda/switch.ml[410,10651+22]..[410,10651+40])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[410,10651+29]..[410,10651+30])
                                                      Pexp_ident "<" (lambda/switch.ml[410,10651+29]..[410,10651+30])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[410,10651+22]..[410,10651+28])
                                                          Pexp_ident "lcases" (lambda/switch.ml[410,10651+22]..[410,10651+28])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[410,10651+31]..[410,10651+40])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[410,10651+31]..[410,10651+32])
                                                            Pexp_ident "!" (lambda/switch.ml[410,10651+31]..[410,10651+32])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[410,10651+32]..[410,10651+40])
                                                                Pexp_ident "more_cut" (lambda/switch.ml[410,10651+32]..[410,10651+40])
                                                          ]
                                                    ]
                                                  expression (lambda/switch.ml[411,10697+16]..[411,10697+31])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[411,10697+16]..[411,10697+25])
                                                      Pexp_ident "heuristic" (lambda/switch.ml[411,10697+16]..[411,10697+25])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[411,10697+26]..[411,10697+31])
                                                          Pexp_ident "cases" (lambda/switch.ml[411,10697+26]..[411,10697+31])
                                                    ]
                                                  Some
                                                    expression (lambda/switch.ml[413,10748+16]..[413,10748+28])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[413,10748+16]..[413,10748+22])
                                                        Pexp_ident "divide" (lambda/switch.ml[413,10748+16]..[413,10748+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[413,10748+23]..[413,10748+28])
                                                            Pexp_ident "cases" (lambda/switch.ml[413,10748+23]..[413,10748+28])
                                                      ]
                                        ]
                                ]
                                expression (lambda/switch.ml[414,10780+8]..[415,10810+9])
                                  Pexp_sequence
                                  expression (lambda/switch.ml[414,10780+8]..[414,10780+27])
                                    Pexp_apply
                                    expression (lambda/switch.ml[414,10780+8]..[414,10780+19])
                                      Pexp_ident "Hashtbl.add" (lambda/switch.ml[414,10780+8]..[414,10780+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[414,10780+20]..[414,10780+21])
                                          Pexp_ident "t" (lambda/switch.ml[414,10780+20]..[414,10780+21])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[414,10780+22]..[414,10780+25])
                                          Pexp_ident "key" (lambda/switch.ml[414,10780+22]..[414,10780+25])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[414,10780+26]..[414,10780+27])
                                          Pexp_ident "r" (lambda/switch.ml[414,10780+26]..[414,10780+27])
                                    ]
                                  expression (lambda/switch.ml[415,10810+8]..[415,10810+9])
                                    Pexp_ident "r" (lambda/switch.ml[415,10810+8]..[415,10810+9])
                          ]
                <def>
                  pattern (lambda/switch.ml[417,10821+6]..[417,10821+12])
                    Ppat_var "divide" (lambda/switch.ml[417,10821+6]..[417,10821+12])
                  expression (lambda/switch.ml[417,10821+13]..[431,11227+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[417,10821+13]..[417,10821+18])
                      Ppat_var "cases" (lambda/switch.ml[417,10821+13]..[417,10821+18])
                    expression (lambda/switch.ml[418,10842+4]..[431,11227+18])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/switch.ml[418,10842+8]..[418,10842+14])
                            Ppat_var "lcases" (lambda/switch.ml[418,10842+8]..[418,10842+14])
                          expression (lambda/switch.ml[418,10842+17]..[418,10842+35])
                            Pexp_apply
                            expression (lambda/switch.ml[418,10842+17]..[418,10842+29])
                              Pexp_ident "Array.length" (lambda/switch.ml[418,10842+17]..[418,10842+29])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[418,10842+30]..[418,10842+35])
                                  Pexp_ident "cases" (lambda/switch.ml[418,10842+30]..[418,10842+35])
                            ]
                      ]
                      expression (lambda/switch.ml[419,10881+4]..[431,11227+18])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[419,10881+8]..[419,10881+9])
                              Ppat_var "m" (lambda/switch.ml[419,10881+8]..[419,10881+9])
                            expression (lambda/switch.ml[419,10881+12]..[419,10881+20])
                              Pexp_apply
                              expression (lambda/switch.ml[419,10881+18]..[419,10881+19])
                                Pexp_ident "/" (lambda/switch.ml[419,10881+18]..[419,10881+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[419,10881+12]..[419,10881+18])
                                    Pexp_ident "lcases" (lambda/switch.ml[419,10881+12]..[419,10881+18])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[419,10881+19]..[419,10881+20])
                                    Pexp_constant PConst_int (2,None)
                              ]
                        ]
                        expression (lambda/switch.ml[420,10905+4]..[431,11227+18])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/switch.ml[420,10905+8]..[420,10905+20])
                                Ppat_tuple
                                [
                                  pattern (lambda/switch.ml[420,10905+8]..[420,10905+9])
                                    Ppat_any
                                  pattern (lambda/switch.ml[420,10905+10]..[420,10905+14])
                                    Ppat_var "left" (lambda/switch.ml[420,10905+10]..[420,10905+14])
                                  pattern (lambda/switch.ml[420,10905+15]..[420,10905+20])
                                    Ppat_var "right" (lambda/switch.ml[420,10905+15]..[420,10905+20])
                                ]
                              expression (lambda/switch.ml[420,10905+23]..[420,10905+36])
                                Pexp_apply
                                expression (lambda/switch.ml[420,10905+23]..[420,10905+28])
                                  Pexp_ident "coupe" (lambda/switch.ml[420,10905+23]..[420,10905+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[420,10905+29]..[420,10905+34])
                                      Pexp_ident "cases" (lambda/switch.ml[420,10905+29]..[420,10905+34])
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[420,10905+35]..[420,10905+36])
                                      Pexp_ident "m" (lambda/switch.ml[420,10905+35]..[420,10905+36])
                                ]
                          ]
                          expression (lambda/switch.ml[421,10945+4]..[431,11227+18])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/switch.ml[421,10945+8]..[421,10945+10])
                                  Ppat_var "ci" (lambda/switch.ml[421,10945+8]..[421,10945+10])
                                expression (lambda/switch.ml[421,10945+13]..[421,10945+25])
                                  Pexp_record
                                  [
                                    "n" (lambda/switch.ml[421,10945+14]..[421,10945+15])
                                      expression (lambda/switch.ml[421,10945+16]..[421,10945+17])
                                        Pexp_constant PConst_int (1,None)
                                    "ni" (lambda/switch.ml[421,10945+20]..[421,10945+22])
                                      expression (lambda/switch.ml[421,10945+23]..[421,10945+24])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                                  None
                              <def>
                                pattern (lambda/switch.ml[422,10971+8]..[422,10971+10])
                                  Ppat_var "cm" (lambda/switch.ml[422,10971+8]..[422,10971+10])
                                expression (lambda/switch.ml[422,10971+13]..[422,10971+25])
                                  Pexp_record
                                  [
                                    "n" (lambda/switch.ml[422,10971+14]..[422,10971+15])
                                      expression (lambda/switch.ml[422,10971+16]..[422,10971+17])
                                        Pexp_constant PConst_int (1,None)
                                    "ni" (lambda/switch.ml[422,10971+20]..[422,10971+22])
                                      expression (lambda/switch.ml[422,10971+23]..[422,10971+24])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                                  None
                              <def>
                                pattern (lambda/switch.ml[423,10997+8]..[423,10997+21])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/switch.ml[423,10997+8]..[423,10997+9])
                                      Ppat_any
                                    pattern (lambda/switch.ml[423,10997+10]..[423,10997+21])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/switch.ml[423,10997+11]..[423,10997+14])
                                          Ppat_var "cml" (lambda/switch.ml[423,10997+11]..[423,10997+14])
                                        pattern (lambda/switch.ml[423,10997+15]..[423,10997+20])
                                          Ppat_var "cleft" (lambda/switch.ml[423,10997+15]..[423,10997+20])
                                      ]
                                  ]
                                expression (lambda/switch.ml[423,10997+24]..[423,10997+44])
                                  Pexp_apply
                                  expression (lambda/switch.ml[423,10997+24]..[423,10997+33])
                                    Pexp_ident "opt_count" (lambda/switch.ml[423,10997+24]..[423,10997+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[423,10997+34]..[423,10997+39])
                                        Pexp_construct "false" (lambda/switch.ml[423,10997+34]..[423,10997+39])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[423,10997+40]..[423,10997+44])
                                        Pexp_ident "left" (lambda/switch.ml[423,10997+40]..[423,10997+44])
                                  ]
                              <def>
                                pattern (lambda/switch.ml[424,11042+8]..[424,11042+22])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/switch.ml[424,11042+8]..[424,11042+9])
                                      Ppat_any
                                    pattern (lambda/switch.ml[424,11042+10]..[424,11042+22])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/switch.ml[424,11042+11]..[424,11042+14])
                                          Ppat_var "cmr" (lambda/switch.ml[424,11042+11]..[424,11042+14])
                                        pattern (lambda/switch.ml[424,11042+15]..[424,11042+21])
                                          Ppat_var "cright" (lambda/switch.ml[424,11042+15]..[424,11042+21])
                                      ]
                                  ]
                                expression (lambda/switch.ml[424,11042+25]..[424,11042+46])
                                  Pexp_apply
                                  expression (lambda/switch.ml[424,11042+25]..[424,11042+34])
                                    Pexp_ident "opt_count" (lambda/switch.ml[424,11042+25]..[424,11042+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[424,11042+35]..[424,11042+40])
                                        Pexp_construct "false" (lambda/switch.ml[424,11042+35]..[424,11042+40])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[424,11042+41]..[424,11042+46])
                                        Pexp_ident "right" (lambda/switch.ml[424,11042+41]..[424,11042+46])
                                  ]
                            ]
                            expression (lambda/switch.ml[425,11092+4]..[431,11227+18])
                              Pexp_sequence
                              expression (lambda/switch.ml[425,11092+4]..[425,11092+21])
                                Pexp_apply
                                expression (lambda/switch.ml[425,11092+4]..[425,11092+12])
                                  Pexp_ident "add_test" (lambda/switch.ml[425,11092+4]..[425,11092+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[425,11092+13]..[425,11092+15])
                                      Pexp_ident "ci" (lambda/switch.ml[425,11092+13]..[425,11092+15])
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[425,11092+16]..[425,11092+21])
                                      Pexp_ident "cleft" (lambda/switch.ml[425,11092+16]..[425,11092+21])
                                ]
                              expression (lambda/switch.ml[426,11116+4]..[431,11227+18])
                                Pexp_sequence
                                expression (lambda/switch.ml[426,11116+4]..[426,11116+22])
                                  Pexp_apply
                                  expression (lambda/switch.ml[426,11116+4]..[426,11116+12])
                                    Pexp_ident "add_test" (lambda/switch.ml[426,11116+4]..[426,11116+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[426,11116+13]..[426,11116+15])
                                        Pexp_ident "ci" (lambda/switch.ml[426,11116+13]..[426,11116+15])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[426,11116+16]..[426,11116+22])
                                        Pexp_ident "cright" (lambda/switch.ml[426,11116+16]..[426,11116+22])
                                  ]
                                expression (lambda/switch.ml[427,11141+4]..[431,11227+18])
                                  Pexp_sequence
                                  expression (lambda/switch.ml[427,11141+4]..[430,11203+21])
                                    Pexp_ifthenelse
                                    expression (lambda/switch.ml[427,11141+7]..[427,11141+25])
                                      Pexp_apply
                                      expression (lambda/switch.ml[427,11141+7]..[427,11141+17])
                                        Pexp_ident "less_tests" (lambda/switch.ml[427,11141+7]..[427,11141+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[427,11141+18]..[427,11141+21])
                                            Pexp_ident "cml" (lambda/switch.ml[427,11141+18]..[427,11141+21])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[427,11141+22]..[427,11141+25])
                                            Pexp_ident "cmr" (lambda/switch.ml[427,11141+22]..[427,11141+25])
                                      ]
                                    expression (lambda/switch.ml[428,11172+6]..[428,11172+21])
                                      Pexp_apply
                                      expression (lambda/switch.ml[428,11172+6]..[428,11172+14])
                                        Pexp_ident "add_test" (lambda/switch.ml[428,11172+6]..[428,11172+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[428,11172+15]..[428,11172+17])
                                            Pexp_ident "cm" (lambda/switch.ml[428,11172+15]..[428,11172+17])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[428,11172+18]..[428,11172+21])
                                            Pexp_ident "cmr" (lambda/switch.ml[428,11172+18]..[428,11172+21])
                                      ]
                                    Some
                                      expression (lambda/switch.ml[430,11203+6]..[430,11203+21])
                                        Pexp_apply
                                        expression (lambda/switch.ml[430,11203+6]..[430,11203+14])
                                          Pexp_ident "add_test" (lambda/switch.ml[430,11203+6]..[430,11203+14])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[430,11203+15]..[430,11203+17])
                                              Pexp_ident "cm" (lambda/switch.ml[430,11203+15]..[430,11203+17])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[430,11203+18]..[430,11203+21])
                                              Pexp_ident "cml" (lambda/switch.ml[430,11203+18]..[430,11203+21])
                                        ]
                                  expression (lambda/switch.ml[431,11227+4]..[431,11227+18])
                                    Pexp_tuple
                                    [
                                      expression (lambda/switch.ml[431,11227+4]..[431,11227+9])
                                        Pexp_construct "Sep" (lambda/switch.ml[431,11227+4]..[431,11227+7])
                                        Some
                                          expression (lambda/switch.ml[431,11227+8]..[431,11227+9])
                                            Pexp_ident "m" (lambda/switch.ml[431,11227+8]..[431,11227+9])
                                      expression (lambda/switch.ml[431,11227+10]..[431,11227+18])
                                        Pexp_tuple
                                        [
                                          expression (lambda/switch.ml[431,11227+11]..[431,11227+13])
                                            Pexp_ident "cm" (lambda/switch.ml[431,11227+11]..[431,11227+13])
                                          expression (lambda/switch.ml[431,11227+15]..[431,11227+17])
                                            Pexp_ident "ci" (lambda/switch.ml[431,11227+15]..[431,11227+17])
                                        ]
                                    ]
                <def>
                  pattern (lambda/switch.ml[433,11247+6]..[433,11247+15])
                    Ppat_var "heuristic" (lambda/switch.ml[433,11247+6]..[433,11247+15])
                  expression (lambda/switch.ml[433,11247+16]..[462,12221+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[433,11247+16]..[433,11247+21])
                      Ppat_var "cases" (lambda/switch.ml[433,11247+16]..[433,11247+21])
                    expression (lambda/switch.ml[434,11271+4]..[462,12221+18])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/switch.ml[434,11271+8]..[434,11271+14])
                            Ppat_var "lcases" (lambda/switch.ml[434,11271+8]..[434,11271+14])
                          expression (lambda/switch.ml[434,11271+17]..[434,11271+35])
                            Pexp_apply
                            expression (lambda/switch.ml[434,11271+17]..[434,11271+29])
                              Pexp_ident "Array.length" (lambda/switch.ml[434,11271+17]..[434,11271+29])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[434,11271+30]..[434,11271+35])
                                  Pexp_ident "cases" (lambda/switch.ml[434,11271+30]..[434,11271+35])
                            ]
                      ]
                      expression (lambda/switch.ml[436,11311+4]..[462,12221+18])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[436,11311+8]..[436,11311+16])
                              Ppat_tuple
                              [
                                pattern (lambda/switch.ml[436,11311+8]..[436,11311+11])
                                  Ppat_var "sep" (lambda/switch.ml[436,11311+8]..[436,11311+11])
                                pattern (lambda/switch.ml[436,11311+12]..[436,11311+16])
                                  Ppat_var "csep" (lambda/switch.ml[436,11311+12]..[436,11311+16])
                              ]
                            expression (lambda/switch.ml[436,11311+19]..[436,11311+31])
                              Pexp_apply
                              expression (lambda/switch.ml[436,11311+19]..[436,11311+25])
                                Pexp_ident "divide" (lambda/switch.ml[436,11311+19]..[436,11311+25])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[436,11311+26]..[436,11311+31])
                                    Pexp_ident "cases" (lambda/switch.ml[436,11311+26]..[436,11311+31])
                              ]
                          <def>
                            pattern (lambda/switch.ml[438,11344+8]..[438,11344+20])
                              Ppat_tuple
                              [
                                pattern (lambda/switch.ml[438,11344+8]..[438,11344+13])
                                  Ppat_var "inter" (lambda/switch.ml[438,11344+8]..[438,11344+13])
                                pattern (lambda/switch.ml[438,11344+14]..[438,11344+20])
                                  Ppat_var "cinter" (lambda/switch.ml[438,11344+14]..[438,11344+20])
                              ]
                            expression (lambda/switch.ml[439,11367+6]..[458,12116+42])
                              Pexp_ifthenelse
                              expression (lambda/switch.ml[439,11367+9]..[439,11367+18])
                                Pexp_apply
                                expression (lambda/switch.ml[439,11367+9]..[439,11367+10])
                                  Pexp_ident "!" (lambda/switch.ml[439,11367+9]..[439,11367+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[439,11367+10]..[439,11367+18])
                                      Pexp_ident "ok_inter" (lambda/switch.ml[439,11367+10]..[439,11367+18])
                                ]
                              expression (lambda/switch.ml[439,11367+24]..[457,12101+9])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/switch.ml[440,11397+12]..[440,11397+20])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/switch.ml[440,11397+12]..[440,11397+13])
                                          Ppat_any
                                        pattern (lambda/switch.ml[440,11397+14]..[440,11397+15])
                                          Ppat_any
                                        pattern (lambda/switch.ml[440,11397+16]..[440,11397+20])
                                          Ppat_var "act0" (lambda/switch.ml[440,11397+16]..[440,11397+20])
                                      ]
                                    expression (lambda/switch.ml[440,11397+23]..[440,11397+32])
                                      Pexp_apply
                                      expression (lambda/switch.ml[440,11397+23]..[440,11397+32]) ghost
                                        Pexp_ident "Array.get" (lambda/switch.ml[440,11397+23]..[440,11397+32]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[440,11397+23]..[440,11397+28])
                                            Pexp_ident "cases" (lambda/switch.ml[440,11397+23]..[440,11397+28])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[440,11397+30]..[440,11397+31])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                  <def>
                                    pattern (lambda/switch.ml[441,11430+12]..[441,11430+20])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/switch.ml[441,11430+12]..[441,11430+13])
                                          Ppat_any
                                        pattern (lambda/switch.ml[441,11430+14]..[441,11430+15])
                                          Ppat_any
                                        pattern (lambda/switch.ml[441,11430+16]..[441,11430+20])
                                          Ppat_var "act1" (lambda/switch.ml[441,11430+16]..[441,11430+20])
                                      ]
                                    expression (lambda/switch.ml[441,11430+23]..[441,11430+39])
                                      Pexp_apply
                                      expression (lambda/switch.ml[441,11430+23]..[441,11430+39]) ghost
                                        Pexp_ident "Array.get" (lambda/switch.ml[441,11430+23]..[441,11430+39]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[441,11430+23]..[441,11430+28])
                                            Pexp_ident "cases" (lambda/switch.ml[441,11430+23]..[441,11430+28])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[441,11430+30]..[441,11430+38])
                                            Pexp_apply
                                            expression (lambda/switch.ml[441,11430+36]..[441,11430+37])
                                              Pexp_ident "-" (lambda/switch.ml[441,11430+36]..[441,11430+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[441,11430+30]..[441,11430+36])
                                                  Pexp_ident "lcases" (lambda/switch.ml[441,11430+30]..[441,11430+36])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[441,11430+37]..[441,11430+38])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                ]
                                expression (lambda/switch.ml[442,11473+8]..[456,12056+44])
                                  Pexp_ifthenelse
                                  expression (lambda/switch.ml[442,11473+11]..[442,11473+22])
                                    Pexp_apply
                                    expression (lambda/switch.ml[442,11473+16]..[442,11473+17])
                                      Pexp_ident "=" (lambda/switch.ml[442,11473+16]..[442,11473+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[442,11473+11]..[442,11473+15])
                                          Pexp_ident "act0" (lambda/switch.ml[442,11473+11]..[442,11473+15])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[442,11473+18]..[442,11473+22])
                                          Pexp_ident "act1" (lambda/switch.ml[442,11473+18]..[442,11473+22])
                                    ]
                                  expression (lambda/switch.ml[442,11473+28]..[455,12039+11])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/switch.ml[443,11507+14]..[443,11507+40])
                                          Ppat_tuple
                                          [
                                            pattern (lambda/switch.ml[443,11507+14]..[443,11507+17])
                                              Ppat_var "low" (lambda/switch.ml[443,11507+14]..[443,11507+17])
                                            pattern (lambda/switch.ml[443,11507+19]..[443,11507+23])
                                              Ppat_var "high" (lambda/switch.ml[443,11507+19]..[443,11507+23])
                                            pattern (lambda/switch.ml[443,11507+25]..[443,11507+31])
                                              Ppat_var "inside" (lambda/switch.ml[443,11507+25]..[443,11507+31])
                                            pattern (lambda/switch.ml[443,11507+33]..[443,11507+40])
                                              Ppat_var "outside" (lambda/switch.ml[443,11507+33]..[443,11507+40])
                                          ]
                                        expression (lambda/switch.ml[443,11507+43]..[443,11507+73])
                                          Pexp_apply
                                          expression (lambda/switch.ml[443,11507+43]..[443,11507+54])
                                            Pexp_ident "coupe_inter" (lambda/switch.ml[443,11507+43]..[443,11507+54])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[443,11507+55]..[443,11507+56])
                                                Pexp_constant PConst_int (1,None)
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[443,11507+57]..[443,11507+67])
                                                Pexp_apply
                                                expression (lambda/switch.ml[443,11507+64]..[443,11507+65])
                                                  Pexp_ident "-" (lambda/switch.ml[443,11507+64]..[443,11507+65])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[443,11507+58]..[443,11507+64])
                                                      Pexp_ident "lcases" (lambda/switch.ml[443,11507+58]..[443,11507+64])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[443,11507+65]..[443,11507+66])
                                                      Pexp_constant PConst_int (2,None)
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[443,11507+68]..[443,11507+73])
                                                Pexp_ident "cases" (lambda/switch.ml[443,11507+68]..[443,11507+73])
                                          ]
                                    ]
                                    expression (lambda/switch.ml[444,11584+10]..[454,11999+39])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/switch.ml[444,11584+14]..[444,11584+29])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/switch.ml[444,11584+14]..[444,11584+15])
                                                Ppat_any
                                              pattern (lambda/switch.ml[444,11584+16]..[444,11584+29])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/switch.ml[444,11584+17]..[444,11584+20])
                                                    Ppat_var "cmi" (lambda/switch.ml[444,11584+17]..[444,11584+20])
                                                  pattern (lambda/switch.ml[444,11584+21]..[444,11584+28])
                                                    Ppat_var "cinside" (lambda/switch.ml[444,11584+21]..[444,11584+28])
                                                ]
                                            ]
                                          expression (lambda/switch.ml[444,11584+32]..[444,11584+54])
                                            Pexp_apply
                                            expression (lambda/switch.ml[444,11584+32]..[444,11584+41])
                                              Pexp_ident "opt_count" (lambda/switch.ml[444,11584+32]..[444,11584+41])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[444,11584+42]..[444,11584+47])
                                                  Pexp_construct "false" (lambda/switch.ml[444,11584+42]..[444,11584+47])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[444,11584+48]..[444,11584+54])
                                                  Pexp_ident "inside" (lambda/switch.ml[444,11584+48]..[444,11584+54])
                                            ]
                                        <def>
                                          pattern (lambda/switch.ml[445,11639+14]..[445,11639+30])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/switch.ml[445,11639+14]..[445,11639+15])
                                                Ppat_any
                                              pattern (lambda/switch.ml[445,11639+16]..[445,11639+30])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/switch.ml[445,11639+17]..[445,11639+20])
                                                    Ppat_var "cmo" (lambda/switch.ml[445,11639+17]..[445,11639+20])
                                                  pattern (lambda/switch.ml[445,11639+21]..[445,11639+29])
                                                    Ppat_var "coutside" (lambda/switch.ml[445,11639+21]..[445,11639+29])
                                                ]
                                            ]
                                          expression (lambda/switch.ml[445,11639+33]..[445,11639+56])
                                            Pexp_apply
                                            expression (lambda/switch.ml[445,11639+33]..[445,11639+42])
                                              Pexp_ident "opt_count" (lambda/switch.ml[445,11639+33]..[445,11639+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[445,11639+43]..[445,11639+48])
                                                  Pexp_construct "false" (lambda/switch.ml[445,11639+43]..[445,11639+48])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[445,11639+49]..[445,11639+56])
                                                  Pexp_ident "outside" (lambda/switch.ml[445,11639+49]..[445,11639+56])
                                            ]
                                        <def>
                                          pattern (lambda/switch.ml[446,11696+14]..[446,11696+18])
                                            Ppat_var "cmij" (lambda/switch.ml[446,11696+14]..[446,11696+18])
                                          expression (lambda/switch.ml[446,11696+21]..[446,11696+59])
                                            Pexp_record
                                            [
                                              "n" (lambda/switch.ml[446,11696+22]..[446,11696+23])
                                                expression (lambda/switch.ml[446,11696+24]..[446,11696+25])
                                                  Pexp_constant PConst_int (1,None)
                                              "ni" (lambda/switch.ml[446,11696+28]..[446,11696+30])
                                                expression (lambda/switch.ml[446,11696+31]..[446,11696+58])
                                                  Pexp_ifthenelse
                                                  expression (lambda/switch.ml[446,11696+35]..[446,11696+43])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[446,11696+38]..[446,11696+39])
                                                      Pexp_ident "=" (lambda/switch.ml[446,11696+38]..[446,11696+39])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[446,11696+35]..[446,11696+38])
                                                          Pexp_ident "low" (lambda/switch.ml[446,11696+35]..[446,11696+38])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[446,11696+39]..[446,11696+43])
                                                          Pexp_ident "high" (lambda/switch.ml[446,11696+39]..[446,11696+43])
                                                    ]
                                                  expression (lambda/switch.ml[446,11696+49]..[446,11696+50])
                                                    Pexp_constant PConst_int (0,None)
                                                  Some
                                                    expression (lambda/switch.ml[446,11696+56]..[446,11696+57])
                                                      Pexp_constant PConst_int (1,None)
                                            ]
                                            None
                                        <def>
                                          pattern (lambda/switch.ml[447,11756+14]..[447,11756+17])
                                            Ppat_var "cij" (lambda/switch.ml[447,11756+14]..[447,11756+17])
                                          expression (lambda/switch.ml[447,11756+20]..[447,11756+58])
                                            Pexp_record
                                            [
                                              "n" (lambda/switch.ml[447,11756+21]..[447,11756+22])
                                                expression (lambda/switch.ml[447,11756+23]..[447,11756+24])
                                                  Pexp_constant PConst_int (1,None)
                                              "ni" (lambda/switch.ml[447,11756+27]..[447,11756+29])
                                                expression (lambda/switch.ml[447,11756+30]..[447,11756+57])
                                                  Pexp_ifthenelse
                                                  expression (lambda/switch.ml[447,11756+34]..[447,11756+42])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[447,11756+37]..[447,11756+38])
                                                      Pexp_ident "=" (lambda/switch.ml[447,11756+37]..[447,11756+38])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[447,11756+34]..[447,11756+37])
                                                          Pexp_ident "low" (lambda/switch.ml[447,11756+34]..[447,11756+37])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[447,11756+38]..[447,11756+42])
                                                          Pexp_ident "high" (lambda/switch.ml[447,11756+38]..[447,11756+42])
                                                    ]
                                                  expression (lambda/switch.ml[447,11756+48]..[447,11756+49])
                                                    Pexp_constant PConst_int (0,None)
                                                  Some
                                                    expression (lambda/switch.ml[447,11756+55]..[447,11756+56])
                                                      Pexp_constant PConst_int (1,None)
                                            ]
                                            None
                                      ]
                                      expression (lambda/switch.ml[448,11818+10]..[454,11999+39])
                                        Pexp_sequence
                                        expression (lambda/switch.ml[448,11818+10]..[448,11818+30])
                                          Pexp_apply
                                          expression (lambda/switch.ml[448,11818+10]..[448,11818+18])
                                            Pexp_ident "add_test" (lambda/switch.ml[448,11818+10]..[448,11818+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[448,11818+19]..[448,11818+22])
                                                Pexp_ident "cij" (lambda/switch.ml[448,11818+19]..[448,11818+22])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[448,11818+23]..[448,11818+30])
                                                Pexp_ident "cinside" (lambda/switch.ml[448,11818+23]..[448,11818+30])
                                          ]
                                        expression (lambda/switch.ml[449,11851+10]..[454,11999+39])
                                          Pexp_sequence
                                          expression (lambda/switch.ml[449,11851+10]..[449,11851+31])
                                            Pexp_apply
                                            expression (lambda/switch.ml[449,11851+10]..[449,11851+18])
                                              Pexp_ident "add_test" (lambda/switch.ml[449,11851+10]..[449,11851+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[449,11851+19]..[449,11851+22])
                                                  Pexp_ident "cij" (lambda/switch.ml[449,11851+19]..[449,11851+22])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[449,11851+23]..[449,11851+31])
                                                  Pexp_ident "coutside" (lambda/switch.ml[449,11851+23]..[449,11851+31])
                                            ]
                                          expression (lambda/switch.ml[450,11885+10]..[454,11999+39])
                                            Pexp_sequence
                                            expression (lambda/switch.ml[450,11885+10]..[453,11967+29])
                                              Pexp_ifthenelse
                                              expression (lambda/switch.ml[450,11885+13]..[450,11885+31])
                                                Pexp_apply
                                                expression (lambda/switch.ml[450,11885+13]..[450,11885+23])
                                                  Pexp_ident "less_tests" (lambda/switch.ml[450,11885+13]..[450,11885+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[450,11885+24]..[450,11885+27])
                                                      Pexp_ident "cmi" (lambda/switch.ml[450,11885+24]..[450,11885+27])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[450,11885+28]..[450,11885+31])
                                                      Pexp_ident "cmo" (lambda/switch.ml[450,11885+28]..[450,11885+31])
                                                ]
                                              expression (lambda/switch.ml[451,11922+12]..[451,11922+29])
                                                Pexp_apply
                                                expression (lambda/switch.ml[451,11922+12]..[451,11922+20])
                                                  Pexp_ident "add_test" (lambda/switch.ml[451,11922+12]..[451,11922+20])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[451,11922+21]..[451,11922+25])
                                                      Pexp_ident "cmij" (lambda/switch.ml[451,11922+21]..[451,11922+25])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[451,11922+26]..[451,11922+29])
                                                      Pexp_ident "cmo" (lambda/switch.ml[451,11922+26]..[451,11922+29])
                                                ]
                                              Some
                                                expression (lambda/switch.ml[453,11967+12]..[453,11967+29])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[453,11967+12]..[453,11967+20])
                                                    Pexp_ident "add_test" (lambda/switch.ml[453,11967+12]..[453,11967+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[453,11967+21]..[453,11967+25])
                                                        Pexp_ident "cmij" (lambda/switch.ml[453,11967+21]..[453,11967+25])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[453,11967+26]..[453,11967+29])
                                                        Pexp_ident "cmi" (lambda/switch.ml[453,11967+26]..[453,11967+29])
                                                  ]
                                            expression (lambda/switch.ml[454,11999+10]..[454,11999+39])
                                              Pexp_tuple
                                              [
                                                expression (lambda/switch.ml[454,11999+10]..[454,11999+28])
                                                  Pexp_construct "Inter" (lambda/switch.ml[454,11999+10]..[454,11999+15])
                                                  Some
                                                    expression (lambda/switch.ml[454,11999+16]..[454,11999+28])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/switch.ml[454,11999+17]..[454,11999+18])
                                                          Pexp_constant PConst_int (1,None)
                                                        expression (lambda/switch.ml[454,11999+19]..[454,11999+27])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[454,11999+25]..[454,11999+26])
                                                            Pexp_ident "-" (lambda/switch.ml[454,11999+25]..[454,11999+26])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[454,11999+19]..[454,11999+25])
                                                                Pexp_ident "lcases" (lambda/switch.ml[454,11999+19]..[454,11999+25])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[454,11999+26]..[454,11999+27])
                                                                Pexp_constant PConst_int (2,None)
                                                          ]
                                                      ]
                                                expression (lambda/switch.ml[454,11999+29]..[454,11999+39])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/switch.ml[454,11999+30]..[454,11999+34])
                                                      Pexp_ident "cmij" (lambda/switch.ml[454,11999+30]..[454,11999+34])
                                                    expression (lambda/switch.ml[454,11999+35]..[454,11999+38])
                                                      Pexp_ident "cij" (lambda/switch.ml[454,11999+35]..[454,11999+38])
                                                  ]
                                              ]
                                  Some
                                    expression (lambda/switch.ml[456,12056+10]..[456,12056+44])
                                      Pexp_tuple
                                      [
                                        expression (lambda/switch.ml[456,12056+10]..[456,12056+23])
                                          Pexp_construct "Inter" (lambda/switch.ml[456,12056+10]..[456,12056+15])
                                          Some
                                            expression (lambda/switch.ml[456,12056+16]..[456,12056+23])
                                              Pexp_tuple
                                              [
                                                expression (lambda/switch.ml[456,12056+17]..[456,12056+19])
                                                  Pexp_constant PConst_int (-1,None)
                                                expression (lambda/switch.ml[456,12056+20]..[456,12056+22])
                                                  Pexp_constant PConst_int (-1,None)
                                              ]
                                        expression (lambda/switch.ml[456,12056+24]..[456,12056+44])
                                          Pexp_tuple
                                          [
                                            expression (lambda/switch.ml[456,12056+25]..[456,12056+33])
                                              Pexp_ident "too_much" (lambda/switch.ml[456,12056+25]..[456,12056+33])
                                            expression (lambda/switch.ml[456,12056+35]..[456,12056+43])
                                              Pexp_ident "too_much" (lambda/switch.ml[456,12056+35]..[456,12056+43])
                                          ]
                                      ]
                              Some
                                expression (lambda/switch.ml[458,12116+8]..[458,12116+42])
                                  Pexp_tuple
                                  [
                                    expression (lambda/switch.ml[458,12116+8]..[458,12116+21])
                                      Pexp_construct "Inter" (lambda/switch.ml[458,12116+8]..[458,12116+13])
                                      Some
                                        expression (lambda/switch.ml[458,12116+14]..[458,12116+21])
                                          Pexp_tuple
                                          [
                                            expression (lambda/switch.ml[458,12116+15]..[458,12116+17])
                                              Pexp_constant PConst_int (-1,None)
                                            expression (lambda/switch.ml[458,12116+18]..[458,12116+20])
                                              Pexp_constant PConst_int (-1,None)
                                          ]
                                    expression (lambda/switch.ml[458,12116+22]..[458,12116+42])
                                      Pexp_tuple
                                      [
                                        expression (lambda/switch.ml[458,12116+23]..[458,12116+31])
                                          Pexp_ident "too_much" (lambda/switch.ml[458,12116+23]..[458,12116+31])
                                        expression (lambda/switch.ml[458,12116+33]..[458,12116+41])
                                          Pexp_ident "too_much" (lambda/switch.ml[458,12116+33]..[458,12116+41])
                                      ]
                                  ]
                        ]
                        expression (lambda/switch.ml[459,12162+4]..[462,12221+18])
                          Pexp_ifthenelse
                          expression (lambda/switch.ml[459,12162+7]..[459,12162+29])
                            Pexp_apply
                            expression (lambda/switch.ml[459,12162+7]..[459,12162+17])
                              Pexp_ident "less2tests" (lambda/switch.ml[459,12162+7]..[459,12162+17])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[459,12162+18]..[459,12162+22])
                                  Pexp_ident "csep" (lambda/switch.ml[459,12162+18]..[459,12162+22])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[459,12162+23]..[459,12162+29])
                                  Pexp_ident "cinter" (lambda/switch.ml[459,12162+23]..[459,12162+29])
                            ]
                          expression (lambda/switch.ml[460,12197+6]..[460,12197+14])
                            Pexp_tuple
                            [
                              expression (lambda/switch.ml[460,12197+6]..[460,12197+9])
                                Pexp_ident "sep" (lambda/switch.ml[460,12197+6]..[460,12197+9])
                              expression (lambda/switch.ml[460,12197+10]..[460,12197+14])
                                Pexp_ident "csep" (lambda/switch.ml[460,12197+10]..[460,12197+14])
                            ]
                          Some
                            expression (lambda/switch.ml[462,12221+6]..[462,12221+18])
                              Pexp_tuple
                              [
                                expression (lambda/switch.ml[462,12221+6]..[462,12221+11])
                                  Pexp_ident "inter" (lambda/switch.ml[462,12221+6]..[462,12221+11])
                                expression (lambda/switch.ml[462,12221+12]..[462,12221+18])
                                  Pexp_ident "cinter" (lambda/switch.ml[462,12221+12]..[462,12221+18])
                              ]
                <def>
                  pattern (lambda/switch.ml[465,12242+6]..[465,12242+10])
                    Ppat_var "enum" (lambda/switch.ml[465,12242+6]..[465,12242+10])
                  expression (lambda/switch.ml[465,12242+11]..[547,15018+11]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[465,12242+11]..[465,12242+14])
                      Ppat_var "top" (lambda/switch.ml[465,12242+11]..[465,12242+14])
                    expression (lambda/switch.ml[465,12242+15]..[547,15018+11]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[465,12242+15]..[465,12242+20])
                        Ppat_var "cases" (lambda/switch.ml[465,12242+15]..[465,12242+20])
                      expression (lambda/switch.ml[466,12265+4]..[547,15018+11])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[466,12265+8]..[466,12265+14])
                              Ppat_var "lcases" (lambda/switch.ml[466,12265+8]..[466,12265+14])
                            expression (lambda/switch.ml[466,12265+17]..[466,12265+35])
                              Pexp_apply
                              expression (lambda/switch.ml[466,12265+17]..[466,12265+29])
                                Pexp_ident "Array.length" (lambda/switch.ml[466,12265+17]..[466,12265+29])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[466,12265+30]..[466,12265+35])
                                    Pexp_ident "cases" (lambda/switch.ml[466,12265+30]..[466,12265+35])
                              ]
                        ]
                        expression (lambda/switch.ml[467,12304+4]..[547,15018+11])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/switch.ml[467,12304+8]..[467,12304+21])
                                Ppat_tuple
                                [
                                  pattern (lambda/switch.ml[467,12304+8]..[467,12304+11])
                                    Ppat_var "lim" (lambda/switch.ml[467,12304+8]..[467,12304+11])
                                  pattern (lambda/switch.ml[467,12304+13]..[467,12304+21])
                                    Ppat_var "with_sep" (lambda/switch.ml[467,12304+13]..[467,12304+21])
                                ]
                              expression (lambda/switch.ml[468,12328+6]..[492,13021+23])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/switch.ml[468,12328+10]..[468,12328+14])
                                      Ppat_var "best" (lambda/switch.ml[468,12328+10]..[468,12328+14])
                                    expression (lambda/switch.ml[468,12328+17]..[468,12328+25])
                                      Pexp_apply
                                      expression (lambda/switch.ml[468,12328+17]..[468,12328+20])
                                        Pexp_ident "ref" (lambda/switch.ml[468,12328+17]..[468,12328+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[468,12328+21]..[468,12328+25])
                                            Pexp_constant PConst_int (-1,None)
                                      ]
                                  <def>
                                    pattern (lambda/switch.ml[468,12328+30]..[468,12328+39])
                                      Ppat_var "best_cost" (lambda/switch.ml[468,12328+30]..[468,12328+39])
                                    expression (lambda/switch.ml[468,12328+42]..[468,12328+65])
                                      Pexp_apply
                                      expression (lambda/switch.ml[468,12328+42]..[468,12328+45])
                                        Pexp_ident "ref" (lambda/switch.ml[468,12328+42]..[468,12328+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[468,12328+46]..[468,12328+65])
                                            Pexp_tuple
                                            [
                                              expression (lambda/switch.ml[468,12328+47]..[468,12328+55])
                                                Pexp_ident "too_much" (lambda/switch.ml[468,12328+47]..[468,12328+55])
                                              expression (lambda/switch.ml[468,12328+56]..[468,12328+64])
                                                Pexp_ident "too_much" (lambda/switch.ml[468,12328+56]..[468,12328+64])
                                            ]
                                      ]
                                ]
                                expression (lambda/switch.ml[470,12398+6]..[492,13021+23])
                                  Pexp_sequence
                                  expression (lambda/switch.ml[470,12398+6]..[491,13008+10])
                                    Pexp_for Up
                                    pattern (lambda/switch.ml[470,12398+10]..[470,12398+11])
                                      Ppat_var "i" (lambda/switch.ml[470,12398+10]..[470,12398+11])
                                    expression (lambda/switch.ml[470,12398+14]..[470,12398+15])
                                      Pexp_constant PConst_int (1,None)
                                    expression (lambda/switch.ml[470,12398+19]..[470,12398+29])
                                      Pexp_apply
                                      expression (lambda/switch.ml[470,12398+25]..[470,12398+26])
                                        Pexp_ident "-" (lambda/switch.ml[470,12398+25]..[470,12398+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[470,12398+19]..[470,12398+25])
                                            Pexp_ident "lcases" (lambda/switch.ml[470,12398+19]..[470,12398+25])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[470,12398+26]..[470,12398+29])
                                            Pexp_constant PConst_int (1,None)
                                      ]
                                    expression (lambda/switch.ml[471,12431+8]..[490,12996+11])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/switch.ml[471,12431+12]..[471,12431+24])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/switch.ml[471,12431+12]..[471,12431+13])
                                                Ppat_any
                                              pattern (lambda/switch.ml[471,12431+14]..[471,12431+18])
                                                Ppat_var "left" (lambda/switch.ml[471,12431+14]..[471,12431+18])
                                              pattern (lambda/switch.ml[471,12431+19]..[471,12431+24])
                                                Ppat_var "right" (lambda/switch.ml[471,12431+19]..[471,12431+24])
                                            ]
                                          expression (lambda/switch.ml[471,12431+27]..[471,12431+40])
                                            Pexp_apply
                                            expression (lambda/switch.ml[471,12431+27]..[471,12431+32])
                                              Pexp_ident "coupe" (lambda/switch.ml[471,12431+27]..[471,12431+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[471,12431+33]..[471,12431+38])
                                                  Pexp_ident "cases" (lambda/switch.ml[471,12431+33]..[471,12431+38])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[471,12431+39]..[471,12431+40])
                                                  Pexp_ident "i" (lambda/switch.ml[471,12431+39]..[471,12431+40])
                                            ]
                                      ]
                                      expression (lambda/switch.ml[472,12475+8]..[490,12996+11])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/switch.ml[472,12475+12]..[472,12475+14])
                                              Ppat_var "ci" (lambda/switch.ml[472,12475+12]..[472,12475+14])
                                            expression (lambda/switch.ml[472,12475+17]..[472,12475+29])
                                              Pexp_record
                                              [
                                                "n" (lambda/switch.ml[472,12475+18]..[472,12475+19])
                                                  expression (lambda/switch.ml[472,12475+20]..[472,12475+21])
                                                    Pexp_constant PConst_int (1,None)
                                                "ni" (lambda/switch.ml[472,12475+24]..[472,12475+26])
                                                  expression (lambda/switch.ml[472,12475+27]..[472,12475+28])
                                                    Pexp_constant PConst_int (0,None)
                                              ]
                                              None
                                          <def>
                                            pattern (lambda/switch.ml[473,12505+12]..[473,12505+14])
                                              Ppat_var "cm" (lambda/switch.ml[473,12505+12]..[473,12505+14])
                                            expression (lambda/switch.ml[473,12505+17]..[473,12505+29])
                                              Pexp_record
                                              [
                                                "n" (lambda/switch.ml[473,12505+18]..[473,12505+19])
                                                  expression (lambda/switch.ml[473,12505+20]..[473,12505+21])
                                                    Pexp_constant PConst_int (1,None)
                                                "ni" (lambda/switch.ml[473,12505+24]..[473,12505+26])
                                                  expression (lambda/switch.ml[473,12505+27]..[473,12505+28])
                                                    Pexp_constant PConst_int (0,None)
                                              ]
                                              None
                                          <def>
                                            pattern (lambda/switch.ml[474,12535+12]..[474,12535+25])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/switch.ml[474,12535+12]..[474,12535+13])
                                                  Ppat_any
                                                pattern (lambda/switch.ml[474,12535+14]..[474,12535+25])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/switch.ml[474,12535+15]..[474,12535+18])
                                                      Ppat_var "cml" (lambda/switch.ml[474,12535+15]..[474,12535+18])
                                                    pattern (lambda/switch.ml[474,12535+19]..[474,12535+24])
                                                      Ppat_var "cleft" (lambda/switch.ml[474,12535+19]..[474,12535+24])
                                                  ]
                                              ]
                                            expression (lambda/switch.ml[474,12535+28]..[474,12535+48])
                                              Pexp_apply
                                              expression (lambda/switch.ml[474,12535+28]..[474,12535+37])
                                                Pexp_ident "opt_count" (lambda/switch.ml[474,12535+28]..[474,12535+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[474,12535+38]..[474,12535+43])
                                                    Pexp_construct "false" (lambda/switch.ml[474,12535+38]..[474,12535+43])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[474,12535+44]..[474,12535+48])
                                                    Pexp_ident "left" (lambda/switch.ml[474,12535+44]..[474,12535+48])
                                              ]
                                          <def>
                                            pattern (lambda/switch.ml[475,12584+12]..[475,12584+26])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/switch.ml[475,12584+12]..[475,12584+13])
                                                  Ppat_any
                                                pattern (lambda/switch.ml[475,12584+14]..[475,12584+26])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/switch.ml[475,12584+15]..[475,12584+18])
                                                      Ppat_var "cmr" (lambda/switch.ml[475,12584+15]..[475,12584+18])
                                                    pattern (lambda/switch.ml[475,12584+19]..[475,12584+25])
                                                      Ppat_var "cright" (lambda/switch.ml[475,12584+19]..[475,12584+25])
                                                  ]
                                              ]
                                            expression (lambda/switch.ml[475,12584+29]..[475,12584+50])
                                              Pexp_apply
                                              expression (lambda/switch.ml[475,12584+29]..[475,12584+38])
                                                Pexp_ident "opt_count" (lambda/switch.ml[475,12584+29]..[475,12584+38])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[475,12584+39]..[475,12584+44])
                                                    Pexp_construct "false" (lambda/switch.ml[475,12584+39]..[475,12584+44])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[475,12584+45]..[475,12584+50])
                                                    Pexp_ident "right" (lambda/switch.ml[475,12584+45]..[475,12584+50])
                                              ]
                                        ]
                                        expression (lambda/switch.ml[476,12638+8]..[490,12996+11])
                                          Pexp_sequence
                                          expression (lambda/switch.ml[476,12638+8]..[476,12638+25])
                                            Pexp_apply
                                            expression (lambda/switch.ml[476,12638+8]..[476,12638+16])
                                              Pexp_ident "add_test" (lambda/switch.ml[476,12638+8]..[476,12638+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[476,12638+17]..[476,12638+19])
                                                  Pexp_ident "ci" (lambda/switch.ml[476,12638+17]..[476,12638+19])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[476,12638+20]..[476,12638+25])
                                                  Pexp_ident "cleft" (lambda/switch.ml[476,12638+20]..[476,12638+25])
                                            ]
                                          expression (lambda/switch.ml[477,12666+8]..[490,12996+11])
                                            Pexp_sequence
                                            expression (lambda/switch.ml[477,12666+8]..[477,12666+26])
                                              Pexp_apply
                                              expression (lambda/switch.ml[477,12666+8]..[477,12666+16])
                                                Pexp_ident "add_test" (lambda/switch.ml[477,12666+8]..[477,12666+16])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[477,12666+17]..[477,12666+19])
                                                    Pexp_ident "ci" (lambda/switch.ml[477,12666+17]..[477,12666+19])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[477,12666+20]..[477,12666+26])
                                                    Pexp_ident "cright" (lambda/switch.ml[477,12666+20]..[477,12666+26])
                                              ]
                                            expression (lambda/switch.ml[478,12695+8]..[490,12996+11])
                                              Pexp_sequence
                                              expression (lambda/switch.ml[478,12695+8]..[481,12769+25])
                                                Pexp_ifthenelse
                                                expression (lambda/switch.ml[478,12695+11]..[478,12695+29])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[478,12695+11]..[478,12695+21])
                                                    Pexp_ident "less_tests" (lambda/switch.ml[478,12695+11]..[478,12695+21])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[478,12695+22]..[478,12695+25])
                                                        Pexp_ident "cml" (lambda/switch.ml[478,12695+22]..[478,12695+25])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[478,12695+26]..[478,12695+29])
                                                        Pexp_ident "cmr" (lambda/switch.ml[478,12695+26]..[478,12695+29])
                                                  ]
                                                expression (lambda/switch.ml[479,12730+10]..[479,12730+25])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[479,12730+10]..[479,12730+18])
                                                    Pexp_ident "add_test" (lambda/switch.ml[479,12730+10]..[479,12730+18])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[479,12730+19]..[479,12730+21])
                                                        Pexp_ident "cm" (lambda/switch.ml[479,12730+19]..[479,12730+21])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[479,12730+22]..[479,12730+25])
                                                        Pexp_ident "cmr" (lambda/switch.ml[479,12730+22]..[479,12730+25])
                                                  ]
                                                Some
                                                  expression (lambda/switch.ml[481,12769+10]..[481,12769+25])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[481,12769+10]..[481,12769+18])
                                                      Pexp_ident "add_test" (lambda/switch.ml[481,12769+10]..[481,12769+18])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[481,12769+19]..[481,12769+21])
                                                          Pexp_ident "cm" (lambda/switch.ml[481,12769+19]..[481,12769+21])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[481,12769+22]..[481,12769+25])
                                                          Pexp_ident "cml" (lambda/switch.ml[481,12769+22]..[481,12769+25])
                                                    ]
                                              expression (lambda/switch.ml[483,12798+8]..[490,12996+11])
                                                Pexp_ifthenelse
                                                expression (lambda/switch.ml[484,12809+10]..[484,12809+39])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[484,12809+10]..[484,12809+20])
                                                    Pexp_ident "less2tests" (lambda/switch.ml[484,12809+10]..[484,12809+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[484,12809+21]..[484,12809+28])
                                                        Pexp_tuple
                                                        [
                                                          expression (lambda/switch.ml[484,12809+22]..[484,12809+24])
                                                            Pexp_ident "cm" (lambda/switch.ml[484,12809+22]..[484,12809+24])
                                                          expression (lambda/switch.ml[484,12809+25]..[484,12809+27])
                                                            Pexp_ident "ci" (lambda/switch.ml[484,12809+25]..[484,12809+27])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[484,12809+29]..[484,12809+39])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[484,12809+29]..[484,12809+30])
                                                          Pexp_ident "!" (lambda/switch.ml[484,12809+29]..[484,12809+30])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[484,12809+30]..[484,12809+39])
                                                              Pexp_ident "best_cost" (lambda/switch.ml[484,12809+30]..[484,12809+39])
                                                        ]
                                                  ]
                                                expression (lambda/switch.ml[485,12849+13]..[490,12996+11])
                                                  Pexp_sequence
                                                  expression (lambda/switch.ml[486,12868+10]..[487,12890+50])
                                                    Pexp_ifthenelse
                                                    expression (lambda/switch.ml[486,12868+13]..[486,12868+16])
                                                      Pexp_ident "top" (lambda/switch.ml[486,12868+13]..[486,12868+16])
                                                    expression (lambda/switch.ml[487,12890+12]..[487,12890+50])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[487,12890+12]..[487,12890+26])
                                                        Pexp_ident "Printf.fprintf" (lambda/switch.ml[487,12890+12]..[487,12890+26])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[487,12890+27]..[487,12890+33])
                                                            Pexp_ident "stderr" (lambda/switch.ml[487,12890+27]..[487,12890+33])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[487,12890+34]..[487,12890+48])
                                                            Pexp_constant PConst_string("Get it: %d\n",(lambda/switch.ml[487,12890+35]..[487,12890+47]),None)
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[487,12890+49]..[487,12890+50])
                                                            Pexp_ident "i" (lambda/switch.ml[487,12890+49]..[487,12890+50])
                                                      ]
                                                    None
                                                  expression (lambda/switch.ml[488,12943+10]..[489,12965+30])
                                                    Pexp_sequence
                                                    expression (lambda/switch.ml[488,12943+10]..[488,12943+19])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[488,12943+15]..[488,12943+17])
                                                        Pexp_ident ":=" (lambda/switch.ml[488,12943+15]..[488,12943+17])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[488,12943+10]..[488,12943+14])
                                                            Pexp_ident "best" (lambda/switch.ml[488,12943+10]..[488,12943+14])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[488,12943+18]..[488,12943+19])
                                                            Pexp_ident "i" (lambda/switch.ml[488,12943+18]..[488,12943+19])
                                                      ]
                                                    expression (lambda/switch.ml[489,12965+10]..[489,12965+30])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[489,12965+20]..[489,12965+22])
                                                        Pexp_ident ":=" (lambda/switch.ml[489,12965+20]..[489,12965+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[489,12965+10]..[489,12965+19])
                                                            Pexp_ident "best_cost" (lambda/switch.ml[489,12965+10]..[489,12965+19])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[489,12965+23]..[489,12965+30])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/switch.ml[489,12965+24]..[489,12965+26])
                                                                Pexp_ident "cm" (lambda/switch.ml[489,12965+24]..[489,12965+26])
                                                              expression (lambda/switch.ml[489,12965+27]..[489,12965+29])
                                                                Pexp_ident "ci" (lambda/switch.ml[489,12965+27]..[489,12965+29])
                                                            ]
                                                      ]
                                                None
                                  expression (lambda/switch.ml[492,13021+6]..[492,13021+23])
                                    Pexp_tuple
                                    [
                                      expression (lambda/switch.ml[492,13021+6]..[492,13021+11])
                                        Pexp_apply
                                        expression (lambda/switch.ml[492,13021+6]..[492,13021+7])
                                          Pexp_ident "!" (lambda/switch.ml[492,13021+6]..[492,13021+7])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[492,13021+7]..[492,13021+11])
                                              Pexp_ident "best" (lambda/switch.ml[492,13021+7]..[492,13021+11])
                                        ]
                                      expression (lambda/switch.ml[492,13021+13]..[492,13021+23])
                                        Pexp_apply
                                        expression (lambda/switch.ml[492,13021+13]..[492,13021+14])
                                          Pexp_ident "!" (lambda/switch.ml[492,13021+13]..[492,13021+14])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[492,13021+14]..[492,13021+23])
                                              Pexp_ident "best_cost" (lambda/switch.ml[492,13021+14]..[492,13021+23])
                                        ]
                                    ]
                          ]
                          expression (lambda/switch.ml[494,13049+4]..[547,15018+11])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/switch.ml[494,13049+8]..[494,13049+31])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/switch.ml[494,13049+8]..[494,13049+12])
                                      Ppat_var "ilow" (lambda/switch.ml[494,13049+8]..[494,13049+12])
                                    pattern (lambda/switch.ml[494,13049+14]..[494,13049+19])
                                      Ppat_var "ihigh" (lambda/switch.ml[494,13049+14]..[494,13049+19])
                                    pattern (lambda/switch.ml[494,13049+21]..[494,13049+31])
                                      Ppat_var "with_inter" (lambda/switch.ml[494,13049+21]..[494,13049+31])
                                  ]
                                expression (lambda/switch.ml[495,13083+6]..[542,14829+33])
                                  Pexp_ifthenelse
                                  expression (lambda/switch.ml[495,13083+9]..[495,13083+22])
                                    Pexp_apply
                                    expression (lambda/switch.ml[495,13083+9]..[495,13083+12])
                                      Pexp_ident "not" (lambda/switch.ml[495,13083+9]..[495,13083+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[495,13083+13]..[495,13083+22])
                                          Pexp_apply
                                          expression (lambda/switch.ml[495,13083+13]..[495,13083+14])
                                            Pexp_ident "!" (lambda/switch.ml[495,13083+13]..[495,13083+14])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[495,13083+14]..[495,13083+22])
                                                Pexp_ident "ok_inter" (lambda/switch.ml[495,13083+14]..[495,13083+22])
                                          ]
                                    ]
                                  expression (lambda/switch.ml[496,13111+8]..[518,13920+33])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/switch.ml[496,13111+12]..[496,13111+16])
                                          Ppat_var "rlow" (lambda/switch.ml[496,13111+12]..[496,13111+16])
                                        expression (lambda/switch.ml[496,13111+19]..[496,13111+27])
                                          Pexp_apply
                                          expression (lambda/switch.ml[496,13111+19]..[496,13111+22])
                                            Pexp_ident "ref" (lambda/switch.ml[496,13111+19]..[496,13111+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[496,13111+23]..[496,13111+27])
                                                Pexp_constant PConst_int (-1,None)
                                          ]
                                      <def>
                                        pattern (lambda/switch.ml[496,13111+32]..[496,13111+37])
                                          Ppat_var "rhigh" (lambda/switch.ml[496,13111+32]..[496,13111+37])
                                        expression (lambda/switch.ml[496,13111+40]..[496,13111+48])
                                          Pexp_apply
                                          expression (lambda/switch.ml[496,13111+40]..[496,13111+43])
                                            Pexp_ident "ref" (lambda/switch.ml[496,13111+40]..[496,13111+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[496,13111+44]..[496,13111+48])
                                                Pexp_constant PConst_int (-1,None)
                                          ]
                                      <def>
                                        pattern (lambda/switch.ml[497,13160+12]..[497,13160+21])
                                          Ppat_var "best_cost" (lambda/switch.ml[497,13160+12]..[497,13160+21])
                                        expression (lambda/switch.ml[497,13160+23]..[497,13160+46])
                                          Pexp_apply
                                          expression (lambda/switch.ml[497,13160+23]..[497,13160+26])
                                            Pexp_ident "ref" (lambda/switch.ml[497,13160+23]..[497,13160+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[497,13160+27]..[497,13160+46])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/switch.ml[497,13160+28]..[497,13160+36])
                                                    Pexp_ident "too_much" (lambda/switch.ml[497,13160+28]..[497,13160+36])
                                                  expression (lambda/switch.ml[497,13160+37]..[497,13160+45])
                                                    Pexp_ident "too_much" (lambda/switch.ml[497,13160+37]..[497,13160+45])
                                                ]
                                          ]
                                    ]
                                    expression (lambda/switch.ml[498,13210+8]..[518,13920+33])
                                      Pexp_sequence
                                      expression (lambda/switch.ml[498,13210+8]..[517,13905+12])
                                        Pexp_for Up
                                        pattern (lambda/switch.ml[498,13210+12]..[498,13210+13])
                                          Ppat_var "i" (lambda/switch.ml[498,13210+12]..[498,13210+13])
                                        expression (lambda/switch.ml[498,13210+14]..[498,13210+15])
                                          Pexp_constant PConst_int (1,None)
                                        expression (lambda/switch.ml[498,13210+19]..[498,13210+27])
                                          Pexp_apply
                                          expression (lambda/switch.ml[498,13210+25]..[498,13210+26])
                                            Pexp_ident "-" (lambda/switch.ml[498,13210+25]..[498,13210+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[498,13210+19]..[498,13210+25])
                                                Pexp_ident "lcases" (lambda/switch.ml[498,13210+19]..[498,13210+25])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[498,13210+26]..[498,13210+27])
                                                Pexp_constant PConst_int (2,None)
                                          ]
                                        expression (lambda/switch.ml[499,13241+10]..[516,13891+13])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/switch.ml[499,13241+14]..[499,13241+40])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/switch.ml[499,13241+14]..[499,13241+17])
                                                    Ppat_var "low" (lambda/switch.ml[499,13241+14]..[499,13241+17])
                                                  pattern (lambda/switch.ml[499,13241+19]..[499,13241+23])
                                                    Ppat_var "high" (lambda/switch.ml[499,13241+19]..[499,13241+23])
                                                  pattern (lambda/switch.ml[499,13241+25]..[499,13241+31])
                                                    Ppat_var "inside" (lambda/switch.ml[499,13241+25]..[499,13241+31])
                                                  pattern (lambda/switch.ml[499,13241+33]..[499,13241+40])
                                                    Ppat_var "outside" (lambda/switch.ml[499,13241+33]..[499,13241+40])
                                                ]
                                              expression (lambda/switch.ml[499,13241+43]..[499,13241+64])
                                                Pexp_apply
                                                expression (lambda/switch.ml[499,13241+43]..[499,13241+54])
                                                  Pexp_ident "coupe_inter" (lambda/switch.ml[499,13241+43]..[499,13241+54])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[499,13241+55]..[499,13241+56])
                                                      Pexp_ident "i" (lambda/switch.ml[499,13241+55]..[499,13241+56])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[499,13241+57]..[499,13241+58])
                                                      Pexp_ident "i" (lambda/switch.ml[499,13241+57]..[499,13241+58])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[499,13241+59]..[499,13241+64])
                                                      Pexp_ident "cases" (lambda/switch.ml[499,13241+59]..[499,13241+64])
                                                ]
                                          ]
                                          expression (lambda/switch.ml[500,13309+10]..[516,13891+13])
                                            Pexp_ifthenelse
                                            expression (lambda/switch.ml[500,13309+13]..[500,13309+21])
                                              Pexp_apply
                                              expression (lambda/switch.ml[500,13309+16]..[500,13309+17])
                                                Pexp_ident "=" (lambda/switch.ml[500,13309+16]..[500,13309+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[500,13309+13]..[500,13309+16])
                                                    Pexp_ident "low" (lambda/switch.ml[500,13309+13]..[500,13309+16])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[500,13309+17]..[500,13309+21])
                                                    Pexp_ident "high" (lambda/switch.ml[500,13309+17]..[500,13309+21])
                                              ]
                                            expression (lambda/switch.ml[500,13309+27]..[516,13891+13])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lambda/switch.ml[501,13342+16]..[501,13342+31])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/switch.ml[501,13342+16]..[501,13342+17])
                                                        Ppat_any
                                                      pattern (lambda/switch.ml[501,13342+18]..[501,13342+31])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lambda/switch.ml[501,13342+19]..[501,13342+22])
                                                            Ppat_var "cmi" (lambda/switch.ml[501,13342+19]..[501,13342+22])
                                                          pattern (lambda/switch.ml[501,13342+23]..[501,13342+30])
                                                            Ppat_var "cinside" (lambda/switch.ml[501,13342+23]..[501,13342+30])
                                                        ]
                                                    ]
                                                  expression (lambda/switch.ml[501,13342+34]..[501,13342+56])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[501,13342+34]..[501,13342+43])
                                                      Pexp_ident "opt_count" (lambda/switch.ml[501,13342+34]..[501,13342+43])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[501,13342+44]..[501,13342+49])
                                                          Pexp_construct "false" (lambda/switch.ml[501,13342+44]..[501,13342+49])
                                                          None
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[501,13342+50]..[501,13342+56])
                                                          Pexp_ident "inside" (lambda/switch.ml[501,13342+50]..[501,13342+56])
                                                    ]
                                                <def>
                                                  pattern (lambda/switch.ml[502,13399+16]..[502,13399+32])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/switch.ml[502,13399+16]..[502,13399+17])
                                                        Ppat_any
                                                      pattern (lambda/switch.ml[502,13399+18]..[502,13399+32])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lambda/switch.ml[502,13399+19]..[502,13399+22])
                                                            Ppat_var "cmo" (lambda/switch.ml[502,13399+19]..[502,13399+22])
                                                          pattern (lambda/switch.ml[502,13399+23]..[502,13399+31])
                                                            Ppat_var "coutside" (lambda/switch.ml[502,13399+23]..[502,13399+31])
                                                        ]
                                                    ]
                                                  expression (lambda/switch.ml[502,13399+35]..[502,13399+58])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[502,13399+35]..[502,13399+44])
                                                      Pexp_ident "opt_count" (lambda/switch.ml[502,13399+35]..[502,13399+44])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[502,13399+45]..[502,13399+50])
                                                          Pexp_construct "false" (lambda/switch.ml[502,13399+45]..[502,13399+50])
                                                          None
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[502,13399+51]..[502,13399+58])
                                                          Pexp_ident "outside" (lambda/switch.ml[502,13399+51]..[502,13399+58])
                                                    ]
                                                <def>
                                                  pattern (lambda/switch.ml[503,13458+16]..[503,13458+20])
                                                    Ppat_var "cmij" (lambda/switch.ml[503,13458+16]..[503,13458+20])
                                                  expression (lambda/switch.ml[503,13458+23]..[503,13458+35])
                                                    Pexp_record
                                                    [
                                                      "n" (lambda/switch.ml[503,13458+24]..[503,13458+25])
                                                        expression (lambda/switch.ml[503,13458+26]..[503,13458+27])
                                                          Pexp_constant PConst_int (1,None)
                                                      "ni" (lambda/switch.ml[503,13458+30]..[503,13458+32])
                                                        expression (lambda/switch.ml[503,13458+33]..[503,13458+34])
                                                          Pexp_constant PConst_int (0,None)
                                                    ]
                                                    None
                                                <def>
                                                  pattern (lambda/switch.ml[504,13494+16]..[504,13494+19])
                                                    Ppat_var "cij" (lambda/switch.ml[504,13494+16]..[504,13494+19])
                                                  expression (lambda/switch.ml[504,13494+22]..[504,13494+34])
                                                    Pexp_record
                                                    [
                                                      "n" (lambda/switch.ml[504,13494+23]..[504,13494+24])
                                                        expression (lambda/switch.ml[504,13494+25]..[504,13494+26])
                                                          Pexp_constant PConst_int (1,None)
                                                      "ni" (lambda/switch.ml[504,13494+29]..[504,13494+31])
                                                        expression (lambda/switch.ml[504,13494+32]..[504,13494+33])
                                                          Pexp_constant PConst_int (0,None)
                                                    ]
                                                    None
                                              ]
                                              expression (lambda/switch.ml[505,13532+12]..[515,13875+15])
                                                Pexp_sequence
                                                expression (lambda/switch.ml[505,13532+12]..[505,13532+32])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[505,13532+12]..[505,13532+20])
                                                    Pexp_ident "add_test" (lambda/switch.ml[505,13532+12]..[505,13532+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[505,13532+21]..[505,13532+24])
                                                        Pexp_ident "cij" (lambda/switch.ml[505,13532+21]..[505,13532+24])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[505,13532+25]..[505,13532+32])
                                                        Pexp_ident "cinside" (lambda/switch.ml[505,13532+25]..[505,13532+32])
                                                  ]
                                                expression (lambda/switch.ml[506,13567+12]..[515,13875+15])
                                                  Pexp_sequence
                                                  expression (lambda/switch.ml[506,13567+12]..[506,13567+33])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[506,13567+12]..[506,13567+20])
                                                      Pexp_ident "add_test" (lambda/switch.ml[506,13567+12]..[506,13567+20])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[506,13567+21]..[506,13567+24])
                                                          Pexp_ident "cij" (lambda/switch.ml[506,13567+21]..[506,13567+24])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[506,13567+25]..[506,13567+33])
                                                          Pexp_ident "coutside" (lambda/switch.ml[506,13567+25]..[506,13567+33])
                                                    ]
                                                  expression (lambda/switch.ml[507,13603+12]..[515,13875+15])
                                                    Pexp_sequence
                                                    expression (lambda/switch.ml[507,13603+12]..[510,13691+31])
                                                      Pexp_ifthenelse
                                                      expression (lambda/switch.ml[507,13603+15]..[507,13603+33])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[507,13603+15]..[507,13603+25])
                                                          Pexp_ident "less_tests" (lambda/switch.ml[507,13603+15]..[507,13603+25])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[507,13603+26]..[507,13603+29])
                                                              Pexp_ident "cmi" (lambda/switch.ml[507,13603+26]..[507,13603+29])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[507,13603+30]..[507,13603+33])
                                                              Pexp_ident "cmo" (lambda/switch.ml[507,13603+30]..[507,13603+33])
                                                        ]
                                                      expression (lambda/switch.ml[508,13642+14]..[508,13642+31])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[508,13642+14]..[508,13642+22])
                                                          Pexp_ident "add_test" (lambda/switch.ml[508,13642+14]..[508,13642+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[508,13642+23]..[508,13642+27])
                                                              Pexp_ident "cmij" (lambda/switch.ml[508,13642+23]..[508,13642+27])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[508,13642+28]..[508,13642+31])
                                                              Pexp_ident "cmo" (lambda/switch.ml[508,13642+28]..[508,13642+31])
                                                        ]
                                                      Some
                                                        expression (lambda/switch.ml[510,13691+14]..[510,13691+31])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[510,13691+14]..[510,13691+22])
                                                            Pexp_ident "add_test" (lambda/switch.ml[510,13691+14]..[510,13691+22])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[510,13691+23]..[510,13691+27])
                                                                Pexp_ident "cmij" (lambda/switch.ml[510,13691+23]..[510,13691+27])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[510,13691+28]..[510,13691+31])
                                                                Pexp_ident "cmi" (lambda/switch.ml[510,13691+28]..[510,13691+31])
                                                          ]
                                                    expression (lambda/switch.ml[511,13725+12]..[515,13875+15])
                                                      Pexp_ifthenelse
                                                      expression (lambda/switch.ml[511,13725+15]..[511,13725+47])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[511,13725+15]..[511,13725+25])
                                                          Pexp_ident "less2tests" (lambda/switch.ml[511,13725+15]..[511,13725+25])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[511,13725+26]..[511,13725+36])
                                                              Pexp_tuple
                                                              [
                                                                expression (lambda/switch.ml[511,13725+27]..[511,13725+31])
                                                                  Pexp_ident "cmij" (lambda/switch.ml[511,13725+27]..[511,13725+31])
                                                                expression (lambda/switch.ml[511,13725+32]..[511,13725+35])
                                                                  Pexp_ident "cij" (lambda/switch.ml[511,13725+32]..[511,13725+35])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[511,13725+37]..[511,13725+47])
                                                              Pexp_apply
                                                              expression (lambda/switch.ml[511,13725+37]..[511,13725+38])
                                                                Pexp_ident "!" (lambda/switch.ml[511,13725+37]..[511,13725+38])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/switch.ml[511,13725+38]..[511,13725+47])
                                                                    Pexp_ident "best_cost" (lambda/switch.ml[511,13725+38]..[511,13725+47])
                                                              ]
                                                        ]
                                                      expression (lambda/switch.ml[511,13725+53]..[515,13875+15])
                                                        Pexp_sequence
                                                        expression (lambda/switch.ml[512,13784+14]..[512,13784+23])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[512,13784+19]..[512,13784+21])
                                                            Pexp_ident ":=" (lambda/switch.ml[512,13784+19]..[512,13784+21])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[512,13784+14]..[512,13784+18])
                                                                Pexp_ident "rlow" (lambda/switch.ml[512,13784+14]..[512,13784+18])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[512,13784+22]..[512,13784+23])
                                                                Pexp_ident "i" (lambda/switch.ml[512,13784+22]..[512,13784+23])
                                                          ]
                                                        expression (lambda/switch.ml[513,13810+14]..[514,13837+37])
                                                          Pexp_sequence
                                                          expression (lambda/switch.ml[513,13810+14]..[513,13810+24])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[513,13810+20]..[513,13810+22])
                                                              Pexp_ident ":=" (lambda/switch.ml[513,13810+20]..[513,13810+22])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[513,13810+14]..[513,13810+19])
                                                                  Pexp_ident "rhigh" (lambda/switch.ml[513,13810+14]..[513,13810+19])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[513,13810+23]..[513,13810+24])
                                                                  Pexp_ident "i" (lambda/switch.ml[513,13810+23]..[513,13810+24])
                                                            ]
                                                          expression (lambda/switch.ml[514,13837+14]..[514,13837+37])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[514,13837+24]..[514,13837+26])
                                                              Pexp_ident ":=" (lambda/switch.ml[514,13837+24]..[514,13837+26])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[514,13837+14]..[514,13837+23])
                                                                  Pexp_ident "best_cost" (lambda/switch.ml[514,13837+14]..[514,13837+23])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[514,13837+27]..[514,13837+37])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lambda/switch.ml[514,13837+28]..[514,13837+32])
                                                                      Pexp_ident "cmij" (lambda/switch.ml[514,13837+28]..[514,13837+32])
                                                                    expression (lambda/switch.ml[514,13837+33]..[514,13837+36])
                                                                      Pexp_ident "cij" (lambda/switch.ml[514,13837+33]..[514,13837+36])
                                                                  ]
                                                            ]
                                                      None
                                            None
                                      expression (lambda/switch.ml[518,13920+8]..[518,13920+33])
                                        Pexp_tuple
                                        [
                                          expression (lambda/switch.ml[518,13920+8]..[518,13920+13])
                                            Pexp_apply
                                            expression (lambda/switch.ml[518,13920+8]..[518,13920+9])
                                              Pexp_ident "!" (lambda/switch.ml[518,13920+8]..[518,13920+9])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[518,13920+9]..[518,13920+13])
                                                  Pexp_ident "rlow" (lambda/switch.ml[518,13920+9]..[518,13920+13])
                                            ]
                                          expression (lambda/switch.ml[518,13920+15]..[518,13920+21])
                                            Pexp_apply
                                            expression (lambda/switch.ml[518,13920+15]..[518,13920+16])
                                              Pexp_ident "!" (lambda/switch.ml[518,13920+15]..[518,13920+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[518,13920+16]..[518,13920+21])
                                                  Pexp_ident "rhigh" (lambda/switch.ml[518,13920+16]..[518,13920+21])
                                            ]
                                          expression (lambda/switch.ml[518,13920+23]..[518,13920+33])
                                            Pexp_apply
                                            expression (lambda/switch.ml[518,13920+23]..[518,13920+24])
                                              Pexp_ident "!" (lambda/switch.ml[518,13920+23]..[518,13920+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[518,13920+24]..[518,13920+33])
                                                  Pexp_ident "best_cost" (lambda/switch.ml[518,13920+24]..[518,13920+33])
                                            ]
                                        ]
                                  Some
                                    expression (lambda/switch.ml[520,13965+8]..[542,14829+33])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/switch.ml[520,13965+12]..[520,13965+16])
                                            Ppat_var "rlow" (lambda/switch.ml[520,13965+12]..[520,13965+16])
                                          expression (lambda/switch.ml[520,13965+19]..[520,13965+27])
                                            Pexp_apply
                                            expression (lambda/switch.ml[520,13965+19]..[520,13965+22])
                                              Pexp_ident "ref" (lambda/switch.ml[520,13965+19]..[520,13965+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[520,13965+23]..[520,13965+27])
                                                  Pexp_constant PConst_int (-1,None)
                                            ]
                                        <def>
                                          pattern (lambda/switch.ml[520,13965+32]..[520,13965+37])
                                            Ppat_var "rhigh" (lambda/switch.ml[520,13965+32]..[520,13965+37])
                                          expression (lambda/switch.ml[520,13965+40]..[520,13965+48])
                                            Pexp_apply
                                            expression (lambda/switch.ml[520,13965+40]..[520,13965+43])
                                              Pexp_ident "ref" (lambda/switch.ml[520,13965+40]..[520,13965+43])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[520,13965+44]..[520,13965+48])
                                                  Pexp_constant PConst_int (-1,None)
                                            ]
                                        <def>
                                          pattern (lambda/switch.ml[521,14014+12]..[521,14014+21])
                                            Ppat_var "best_cost" (lambda/switch.ml[521,14014+12]..[521,14014+21])
                                          expression (lambda/switch.ml[521,14014+23]..[521,14014+46])
                                            Pexp_apply
                                            expression (lambda/switch.ml[521,14014+23]..[521,14014+26])
                                              Pexp_ident "ref" (lambda/switch.ml[521,14014+23]..[521,14014+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[521,14014+27]..[521,14014+46])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/switch.ml[521,14014+28]..[521,14014+36])
                                                      Pexp_ident "too_much" (lambda/switch.ml[521,14014+28]..[521,14014+36])
                                                    expression (lambda/switch.ml[521,14014+37]..[521,14014+45])
                                                      Pexp_ident "too_much" (lambda/switch.ml[521,14014+37]..[521,14014+45])
                                                  ]
                                            ]
                                      ]
                                      expression (lambda/switch.ml[522,14064+8]..[542,14829+33])
                                        Pexp_sequence
                                        expression (lambda/switch.ml[522,14064+8]..[541,14814+12])
                                          Pexp_for Up
                                          pattern (lambda/switch.ml[522,14064+12]..[522,14064+13])
                                            Ppat_var "i" (lambda/switch.ml[522,14064+12]..[522,14064+13])
                                          expression (lambda/switch.ml[522,14064+14]..[522,14064+15])
                                            Pexp_constant PConst_int (1,None)
                                          expression (lambda/switch.ml[522,14064+19]..[522,14064+27])
                                            Pexp_apply
                                            expression (lambda/switch.ml[522,14064+25]..[522,14064+26])
                                              Pexp_ident "-" (lambda/switch.ml[522,14064+25]..[522,14064+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[522,14064+19]..[522,14064+25])
                                                  Pexp_ident "lcases" (lambda/switch.ml[522,14064+19]..[522,14064+25])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[522,14064+26]..[522,14064+27])
                                                  Pexp_constant PConst_int (2,None)
                                            ]
                                          expression (lambda/switch.ml[523,14095+10]..[540,14799+14])
                                            Pexp_for Up
                                            pattern (lambda/switch.ml[523,14095+14]..[523,14095+15])
                                              Ppat_var "j" (lambda/switch.ml[523,14095+14]..[523,14095+15])
                                            expression (lambda/switch.ml[523,14095+16]..[523,14095+17])
                                              Pexp_ident "i" (lambda/switch.ml[523,14095+16]..[523,14095+17])
                                            expression (lambda/switch.ml[523,14095+21]..[523,14095+29])
                                              Pexp_apply
                                              expression (lambda/switch.ml[523,14095+27]..[523,14095+28])
                                                Pexp_ident "-" (lambda/switch.ml[523,14095+27]..[523,14095+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[523,14095+21]..[523,14095+27])
                                                    Pexp_ident "lcases" (lambda/switch.ml[523,14095+21]..[523,14095+27])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[523,14095+28]..[523,14095+29])
                                                    Pexp_constant PConst_int (2,None)
                                              ]
                                            expression (lambda/switch.ml[524,14128+12]..[539,14783+15])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lambda/switch.ml[524,14128+16]..[524,14128+42])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/switch.ml[524,14128+16]..[524,14128+19])
                                                        Ppat_var "low" (lambda/switch.ml[524,14128+16]..[524,14128+19])
                                                      pattern (lambda/switch.ml[524,14128+21]..[524,14128+25])
                                                        Ppat_var "high" (lambda/switch.ml[524,14128+21]..[524,14128+25])
                                                      pattern (lambda/switch.ml[524,14128+27]..[524,14128+33])
                                                        Ppat_var "inside" (lambda/switch.ml[524,14128+27]..[524,14128+33])
                                                      pattern (lambda/switch.ml[524,14128+35]..[524,14128+42])
                                                        Ppat_var "outside" (lambda/switch.ml[524,14128+35]..[524,14128+42])
                                                    ]
                                                  expression (lambda/switch.ml[524,14128+45]..[524,14128+66])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[524,14128+45]..[524,14128+56])
                                                      Pexp_ident "coupe_inter" (lambda/switch.ml[524,14128+45]..[524,14128+56])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[524,14128+57]..[524,14128+58])
                                                          Pexp_ident "i" (lambda/switch.ml[524,14128+57]..[524,14128+58])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[524,14128+59]..[524,14128+60])
                                                          Pexp_ident "j" (lambda/switch.ml[524,14128+59]..[524,14128+60])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[524,14128+61]..[524,14128+66])
                                                          Pexp_ident "cases" (lambda/switch.ml[524,14128+61]..[524,14128+66])
                                                    ]
                                              ]
                                              expression (lambda/switch.ml[525,14198+12]..[539,14783+15])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lambda/switch.ml[525,14198+16]..[525,14198+31])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/switch.ml[525,14198+16]..[525,14198+17])
                                                          Ppat_any
                                                        pattern (lambda/switch.ml[525,14198+18]..[525,14198+31])
                                                          Ppat_tuple
                                                          [
                                                            pattern (lambda/switch.ml[525,14198+19]..[525,14198+22])
                                                              Ppat_var "cmi" (lambda/switch.ml[525,14198+19]..[525,14198+22])
                                                            pattern (lambda/switch.ml[525,14198+23]..[525,14198+30])
                                                              Ppat_var "cinside" (lambda/switch.ml[525,14198+23]..[525,14198+30])
                                                          ]
                                                      ]
                                                    expression (lambda/switch.ml[525,14198+34]..[525,14198+56])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[525,14198+34]..[525,14198+43])
                                                        Pexp_ident "opt_count" (lambda/switch.ml[525,14198+34]..[525,14198+43])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[525,14198+44]..[525,14198+49])
                                                            Pexp_construct "false" (lambda/switch.ml[525,14198+44]..[525,14198+49])
                                                            None
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[525,14198+50]..[525,14198+56])
                                                            Pexp_ident "inside" (lambda/switch.ml[525,14198+50]..[525,14198+56])
                                                      ]
                                                  <def>
                                                    pattern (lambda/switch.ml[526,14255+16]..[526,14255+32])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lambda/switch.ml[526,14255+16]..[526,14255+17])
                                                          Ppat_any
                                                        pattern (lambda/switch.ml[526,14255+18]..[526,14255+32])
                                                          Ppat_tuple
                                                          [
                                                            pattern (lambda/switch.ml[526,14255+19]..[526,14255+22])
                                                              Ppat_var "cmo" (lambda/switch.ml[526,14255+19]..[526,14255+22])
                                                            pattern (lambda/switch.ml[526,14255+23]..[526,14255+31])
                                                              Ppat_var "coutside" (lambda/switch.ml[526,14255+23]..[526,14255+31])
                                                          ]
                                                      ]
                                                    expression (lambda/switch.ml[526,14255+35]..[526,14255+58])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[526,14255+35]..[526,14255+44])
                                                        Pexp_ident "opt_count" (lambda/switch.ml[526,14255+35]..[526,14255+44])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[526,14255+45]..[526,14255+50])
                                                            Pexp_construct "false" (lambda/switch.ml[526,14255+45]..[526,14255+50])
                                                            None
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[526,14255+51]..[526,14255+58])
                                                            Pexp_ident "outside" (lambda/switch.ml[526,14255+51]..[526,14255+58])
                                                      ]
                                                  <def>
                                                    pattern (lambda/switch.ml[527,14314+16]..[527,14314+20])
                                                      Ppat_var "cmij" (lambda/switch.ml[527,14314+16]..[527,14314+20])
                                                    expression (lambda/switch.ml[527,14314+23]..[527,14314+61])
                                                      Pexp_record
                                                      [
                                                        "n" (lambda/switch.ml[527,14314+24]..[527,14314+25])
                                                          expression (lambda/switch.ml[527,14314+26]..[527,14314+27])
                                                            Pexp_constant PConst_int (1,None)
                                                        "ni" (lambda/switch.ml[527,14314+30]..[527,14314+32])
                                                          expression (lambda/switch.ml[527,14314+33]..[527,14314+60])
                                                            Pexp_ifthenelse
                                                            expression (lambda/switch.ml[527,14314+37]..[527,14314+45])
                                                              Pexp_apply
                                                              expression (lambda/switch.ml[527,14314+40]..[527,14314+41])
                                                                Pexp_ident "=" (lambda/switch.ml[527,14314+40]..[527,14314+41])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/switch.ml[527,14314+37]..[527,14314+40])
                                                                    Pexp_ident "low" (lambda/switch.ml[527,14314+37]..[527,14314+40])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/switch.ml[527,14314+41]..[527,14314+45])
                                                                    Pexp_ident "high" (lambda/switch.ml[527,14314+41]..[527,14314+45])
                                                              ]
                                                            expression (lambda/switch.ml[527,14314+51]..[527,14314+52])
                                                              Pexp_constant PConst_int (0,None)
                                                            Some
                                                              expression (lambda/switch.ml[527,14314+58]..[527,14314+59])
                                                                Pexp_constant PConst_int (1,None)
                                                      ]
                                                      None
                                                  <def>
                                                    pattern (lambda/switch.ml[528,14376+16]..[528,14376+19])
                                                      Ppat_var "cij" (lambda/switch.ml[528,14376+16]..[528,14376+19])
                                                    expression (lambda/switch.ml[528,14376+22]..[528,14376+60])
                                                      Pexp_record
                                                      [
                                                        "n" (lambda/switch.ml[528,14376+23]..[528,14376+24])
                                                          expression (lambda/switch.ml[528,14376+25]..[528,14376+26])
                                                            Pexp_constant PConst_int (1,None)
                                                        "ni" (lambda/switch.ml[528,14376+29]..[528,14376+31])
                                                          expression (lambda/switch.ml[528,14376+32]..[528,14376+59])
                                                            Pexp_ifthenelse
                                                            expression (lambda/switch.ml[528,14376+36]..[528,14376+44])
                                                              Pexp_apply
                                                              expression (lambda/switch.ml[528,14376+39]..[528,14376+40])
                                                                Pexp_ident "=" (lambda/switch.ml[528,14376+39]..[528,14376+40])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/switch.ml[528,14376+36]..[528,14376+39])
                                                                    Pexp_ident "low" (lambda/switch.ml[528,14376+36]..[528,14376+39])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/switch.ml[528,14376+40]..[528,14376+44])
                                                                    Pexp_ident "high" (lambda/switch.ml[528,14376+40]..[528,14376+44])
                                                              ]
                                                            expression (lambda/switch.ml[528,14376+50]..[528,14376+51])
                                                              Pexp_constant PConst_int (0,None)
                                                            Some
                                                              expression (lambda/switch.ml[528,14376+57]..[528,14376+58])
                                                                Pexp_constant PConst_int (1,None)
                                                      ]
                                                      None
                                                ]
                                                expression (lambda/switch.ml[529,14440+12]..[539,14783+15])
                                                  Pexp_sequence
                                                  expression (lambda/switch.ml[529,14440+12]..[529,14440+32])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[529,14440+12]..[529,14440+20])
                                                      Pexp_ident "add_test" (lambda/switch.ml[529,14440+12]..[529,14440+20])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[529,14440+21]..[529,14440+24])
                                                          Pexp_ident "cij" (lambda/switch.ml[529,14440+21]..[529,14440+24])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[529,14440+25]..[529,14440+32])
                                                          Pexp_ident "cinside" (lambda/switch.ml[529,14440+25]..[529,14440+32])
                                                    ]
                                                  expression (lambda/switch.ml[530,14475+12]..[539,14783+15])
                                                    Pexp_sequence
                                                    expression (lambda/switch.ml[530,14475+12]..[530,14475+33])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[530,14475+12]..[530,14475+20])
                                                        Pexp_ident "add_test" (lambda/switch.ml[530,14475+12]..[530,14475+20])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[530,14475+21]..[530,14475+24])
                                                            Pexp_ident "cij" (lambda/switch.ml[530,14475+21]..[530,14475+24])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[530,14475+25]..[530,14475+33])
                                                            Pexp_ident "coutside" (lambda/switch.ml[530,14475+25]..[530,14475+33])
                                                      ]
                                                    expression (lambda/switch.ml[531,14511+12]..[539,14783+15])
                                                      Pexp_sequence
                                                      expression (lambda/switch.ml[531,14511+12]..[534,14599+31])
                                                        Pexp_ifthenelse
                                                        expression (lambda/switch.ml[531,14511+15]..[531,14511+33])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[531,14511+15]..[531,14511+25])
                                                            Pexp_ident "less_tests" (lambda/switch.ml[531,14511+15]..[531,14511+25])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[531,14511+26]..[531,14511+29])
                                                                Pexp_ident "cmi" (lambda/switch.ml[531,14511+26]..[531,14511+29])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[531,14511+30]..[531,14511+33])
                                                                Pexp_ident "cmo" (lambda/switch.ml[531,14511+30]..[531,14511+33])
                                                          ]
                                                        expression (lambda/switch.ml[532,14550+14]..[532,14550+31])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[532,14550+14]..[532,14550+22])
                                                            Pexp_ident "add_test" (lambda/switch.ml[532,14550+14]..[532,14550+22])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[532,14550+23]..[532,14550+27])
                                                                Pexp_ident "cmij" (lambda/switch.ml[532,14550+23]..[532,14550+27])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[532,14550+28]..[532,14550+31])
                                                                Pexp_ident "cmo" (lambda/switch.ml[532,14550+28]..[532,14550+31])
                                                          ]
                                                        Some
                                                          expression (lambda/switch.ml[534,14599+14]..[534,14599+31])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[534,14599+14]..[534,14599+22])
                                                              Pexp_ident "add_test" (lambda/switch.ml[534,14599+14]..[534,14599+22])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[534,14599+23]..[534,14599+27])
                                                                  Pexp_ident "cmij" (lambda/switch.ml[534,14599+23]..[534,14599+27])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[534,14599+28]..[534,14599+31])
                                                                  Pexp_ident "cmi" (lambda/switch.ml[534,14599+28]..[534,14599+31])
                                                            ]
                                                      expression (lambda/switch.ml[535,14633+12]..[539,14783+15])
                                                        Pexp_ifthenelse
                                                        expression (lambda/switch.ml[535,14633+15]..[535,14633+47])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[535,14633+15]..[535,14633+25])
                                                            Pexp_ident "less2tests" (lambda/switch.ml[535,14633+15]..[535,14633+25])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[535,14633+26]..[535,14633+36])
                                                                Pexp_tuple
                                                                [
                                                                  expression (lambda/switch.ml[535,14633+27]..[535,14633+31])
                                                                    Pexp_ident "cmij" (lambda/switch.ml[535,14633+27]..[535,14633+31])
                                                                  expression (lambda/switch.ml[535,14633+32]..[535,14633+35])
                                                                    Pexp_ident "cij" (lambda/switch.ml[535,14633+32]..[535,14633+35])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[535,14633+37]..[535,14633+47])
                                                                Pexp_apply
                                                                expression (lambda/switch.ml[535,14633+37]..[535,14633+38])
                                                                  Pexp_ident "!" (lambda/switch.ml[535,14633+37]..[535,14633+38])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/switch.ml[535,14633+38]..[535,14633+47])
                                                                      Pexp_ident "best_cost" (lambda/switch.ml[535,14633+38]..[535,14633+47])
                                                                ]
                                                          ]
                                                        expression (lambda/switch.ml[535,14633+53]..[539,14783+15])
                                                          Pexp_sequence
                                                          expression (lambda/switch.ml[536,14692+14]..[536,14692+23])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[536,14692+19]..[536,14692+21])
                                                              Pexp_ident ":=" (lambda/switch.ml[536,14692+19]..[536,14692+21])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[536,14692+14]..[536,14692+18])
                                                                  Pexp_ident "rlow" (lambda/switch.ml[536,14692+14]..[536,14692+18])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[536,14692+22]..[536,14692+23])
                                                                  Pexp_ident "i" (lambda/switch.ml[536,14692+22]..[536,14692+23])
                                                            ]
                                                          expression (lambda/switch.ml[537,14718+14]..[538,14745+37])
                                                            Pexp_sequence
                                                            expression (lambda/switch.ml[537,14718+14]..[537,14718+24])
                                                              Pexp_apply
                                                              expression (lambda/switch.ml[537,14718+20]..[537,14718+22])
                                                                Pexp_ident ":=" (lambda/switch.ml[537,14718+20]..[537,14718+22])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/switch.ml[537,14718+14]..[537,14718+19])
                                                                    Pexp_ident "rhigh" (lambda/switch.ml[537,14718+14]..[537,14718+19])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/switch.ml[537,14718+23]..[537,14718+24])
                                                                    Pexp_ident "j" (lambda/switch.ml[537,14718+23]..[537,14718+24])
                                                              ]
                                                            expression (lambda/switch.ml[538,14745+14]..[538,14745+37])
                                                              Pexp_apply
                                                              expression (lambda/switch.ml[538,14745+24]..[538,14745+26])
                                                                Pexp_ident ":=" (lambda/switch.ml[538,14745+24]..[538,14745+26])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/switch.ml[538,14745+14]..[538,14745+23])
                                                                    Pexp_ident "best_cost" (lambda/switch.ml[538,14745+14]..[538,14745+23])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/switch.ml[538,14745+27]..[538,14745+37])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lambda/switch.ml[538,14745+28]..[538,14745+32])
Pexp_ident "cmij" (lambda/switch.ml[538,14745+28]..[538,14745+32])
                                                                      expression (lambda/switch.ml[538,14745+33]..[538,14745+36])
Pexp_ident "cij" (lambda/switch.ml[538,14745+33]..[538,14745+36])
                                                                    ]
                                                              ]
                                                        None
                                        expression (lambda/switch.ml[542,14829+8]..[542,14829+33])
                                          Pexp_tuple
                                          [
                                            expression (lambda/switch.ml[542,14829+8]..[542,14829+13])
                                              Pexp_apply
                                              expression (lambda/switch.ml[542,14829+8]..[542,14829+9])
                                                Pexp_ident "!" (lambda/switch.ml[542,14829+8]..[542,14829+9])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[542,14829+9]..[542,14829+13])
                                                    Pexp_ident "rlow" (lambda/switch.ml[542,14829+9]..[542,14829+13])
                                              ]
                                            expression (lambda/switch.ml[542,14829+15]..[542,14829+21])
                                              Pexp_apply
                                              expression (lambda/switch.ml[542,14829+15]..[542,14829+16])
                                                Pexp_ident "!" (lambda/switch.ml[542,14829+15]..[542,14829+16])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[542,14829+16]..[542,14829+21])
                                                    Pexp_ident "rhigh" (lambda/switch.ml[542,14829+16]..[542,14829+21])
                                              ]
                                            expression (lambda/switch.ml[542,14829+23]..[542,14829+33])
                                              Pexp_apply
                                              expression (lambda/switch.ml[542,14829+23]..[542,14829+24])
                                                Pexp_ident "!" (lambda/switch.ml[542,14829+23]..[542,14829+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[542,14829+24]..[542,14829+33])
                                                    Pexp_ident "best_cost" (lambda/switch.ml[542,14829+24]..[542,14829+33])
                                              ]
                                          ]
                            ]
                            expression (lambda/switch.ml[543,14866+4]..[547,15018+11])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/switch.ml[543,14866+8]..[543,14866+9])
                                    Ppat_var "r" (lambda/switch.ml[543,14866+8]..[543,14866+9])
                                  expression (lambda/switch.ml[543,14866+12]..[543,14866+36])
                                    Pexp_apply
                                    expression (lambda/switch.ml[543,14866+12]..[543,14866+15])
                                      Pexp_ident "ref" (lambda/switch.ml[543,14866+12]..[543,14866+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[543,14866+16]..[543,14866+36])
                                          Pexp_construct "Inter" (lambda/switch.ml[543,14866+17]..[543,14866+22])
                                          Some
                                            expression (lambda/switch.ml[543,14866+23]..[543,14866+35])
                                              Pexp_tuple
                                              [
                                                expression (lambda/switch.ml[543,14866+24]..[543,14866+28])
                                                  Pexp_ident "ilow" (lambda/switch.ml[543,14866+24]..[543,14866+28])
                                                expression (lambda/switch.ml[543,14866+29]..[543,14866+34])
                                                  Pexp_ident "ihigh" (lambda/switch.ml[543,14866+29]..[543,14866+34])
                                              ]
                                    ]
                                <def>
                                  pattern (lambda/switch.ml[543,14866+41]..[543,14866+43])
                                    Ppat_var "rc" (lambda/switch.ml[543,14866+41]..[543,14866+43])
                                  expression (lambda/switch.ml[543,14866+46]..[543,14866+60])
                                    Pexp_apply
                                    expression (lambda/switch.ml[543,14866+46]..[543,14866+49])
                                      Pexp_ident "ref" (lambda/switch.ml[543,14866+46]..[543,14866+49])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[543,14866+50]..[543,14866+60])
                                          Pexp_ident "with_inter" (lambda/switch.ml[543,14866+50]..[543,14866+60])
                                    ]
                              ]
                              expression (lambda/switch.ml[544,14930+4]..[547,15018+11])
                                Pexp_sequence
                                expression (lambda/switch.ml[544,14930+4]..[546,15008+7])
                                  Pexp_ifthenelse
                                  expression (lambda/switch.ml[544,14930+7]..[544,14930+30])
                                    Pexp_apply
                                    expression (lambda/switch.ml[544,14930+7]..[544,14930+17])
                                      Pexp_ident "less2tests" (lambda/switch.ml[544,14930+7]..[544,14930+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[544,14930+18]..[544,14930+26])
                                          Pexp_ident "with_sep" (lambda/switch.ml[544,14930+18]..[544,14930+26])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[544,14930+27]..[544,14930+30])
                                          Pexp_apply
                                          expression (lambda/switch.ml[544,14930+27]..[544,14930+28])
                                            Pexp_ident "!" (lambda/switch.ml[544,14930+27]..[544,14930+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[544,14930+28]..[544,14930+30])
                                                Pexp_ident "rc" (lambda/switch.ml[544,14930+28]..[544,14930+30])
                                          ]
                                    ]
                                  expression (lambda/switch.ml[544,14930+36]..[546,15008+7])
                                    Pexp_sequence
                                    expression (lambda/switch.ml[545,14972+6]..[545,14972+18])
                                      Pexp_apply
                                      expression (lambda/switch.ml[545,14972+8]..[545,14972+10])
                                        Pexp_ident ":=" (lambda/switch.ml[545,14972+8]..[545,14972+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[545,14972+6]..[545,14972+7])
                                            Pexp_ident "r" (lambda/switch.ml[545,14972+6]..[545,14972+7])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[545,14972+11]..[545,14972+18])
                                            Pexp_construct "Sep" (lambda/switch.ml[545,14972+11]..[545,14972+14])
                                            Some
                                              expression (lambda/switch.ml[545,14972+15]..[545,14972+18])
                                                Pexp_ident "lim" (lambda/switch.ml[545,14972+15]..[545,14972+18])
                                      ]
                                    expression (lambda/switch.ml[545,14972+21]..[545,14972+35])
                                      Pexp_apply
                                      expression (lambda/switch.ml[545,14972+24]..[545,14972+26])
                                        Pexp_ident ":=" (lambda/switch.ml[545,14972+24]..[545,14972+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[545,14972+21]..[545,14972+23])
                                            Pexp_ident "rc" (lambda/switch.ml[545,14972+21]..[545,14972+23])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[545,14972+27]..[545,14972+35])
                                            Pexp_ident "with_sep" (lambda/switch.ml[545,14972+27]..[545,14972+35])
                                      ]
                                  None
                                expression (lambda/switch.ml[547,15018+4]..[547,15018+11])
                                  Pexp_tuple
                                  [
                                    expression (lambda/switch.ml[547,15018+4]..[547,15018+6])
                                      Pexp_apply
                                      expression (lambda/switch.ml[547,15018+4]..[547,15018+5])
                                        Pexp_ident "!" (lambda/switch.ml[547,15018+4]..[547,15018+5])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[547,15018+5]..[547,15018+6])
                                            Pexp_ident "r" (lambda/switch.ml[547,15018+5]..[547,15018+6])
                                      ]
                                    expression (lambda/switch.ml[547,15018+8]..[547,15018+11])
                                      Pexp_apply
                                      expression (lambda/switch.ml[547,15018+8]..[547,15018+9])
                                        Pexp_ident "!" (lambda/switch.ml[547,15018+8]..[547,15018+9])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[547,15018+9]..[547,15018+11])
                                            Pexp_ident "rc" (lambda/switch.ml[547,15018+9]..[547,15018+11])
                                      ]
                                  ]
              ]
            structure_item (lambda/switch.ml[549,15031+2]..[552,15142+16])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[549,15031+6]..[549,15031+18])
                    Ppat_var "make_if_test" (lambda/switch.ml[549,15031+6]..[549,15031+18])
                  expression (lambda/switch.ml[549,15031+19]..[552,15142+16]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[549,15031+19]..[549,15031+23])
                      Ppat_var "test" (lambda/switch.ml[549,15031+19]..[549,15031+23])
                    expression (lambda/switch.ml[549,15031+24]..[552,15142+16]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[549,15031+24]..[549,15031+27])
                        Ppat_var "arg" (lambda/switch.ml[549,15031+24]..[549,15031+27])
                      expression (lambda/switch.ml[549,15031+28]..[552,15142+16]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[549,15031+28]..[549,15031+29])
                          Ppat_var "i" (lambda/switch.ml[549,15031+28]..[549,15031+29])
                        expression (lambda/switch.ml[549,15031+30]..[552,15142+16]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/switch.ml[549,15031+30]..[549,15031+34])
                            Ppat_var "ifso" (lambda/switch.ml[549,15031+30]..[549,15031+34])
                          expression (lambda/switch.ml[549,15031+35]..[552,15142+16]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/switch.ml[549,15031+35]..[549,15031+40])
                              Ppat_var "ifnot" (lambda/switch.ml[549,15031+35]..[549,15031+40])
                            expression (lambda/switch.ml[550,15074+4]..[552,15142+16])
                              Pexp_apply
                              expression (lambda/switch.ml[550,15074+4]..[550,15074+15])
                                Pexp_ident "Arg.make_if" (lambda/switch.ml[550,15074+4]..[550,15074+15])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[551,15090+6]..[551,15090+51])
                                    Pexp_apply
                                    expression (lambda/switch.ml[551,15090+7]..[551,15090+20])
                                      Pexp_ident "Arg.make_prim" (lambda/switch.ml[551,15090+7]..[551,15090+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[551,15090+21]..[551,15090+25])
                                          Pexp_ident "test" (lambda/switch.ml[551,15090+21]..[551,15090+25])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[551,15090+26]..[551,15090+50])
                                          Pexp_construct "::" (lambda/switch.ml[551,15090+27]..[551,15090+50]) ghost
                                          Some
                                            expression (lambda/switch.ml[551,15090+27]..[551,15090+50]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lambda/switch.ml[551,15090+27]..[551,15090+30])
                                                  Pexp_ident "arg" (lambda/switch.ml[551,15090+27]..[551,15090+30])
                                                expression (lambda/switch.ml[551,15090+33]..[551,15090+50]) ghost
                                                  Pexp_construct "::" (lambda/switch.ml[551,15090+33]..[551,15090+50]) ghost
                                                  Some
                                                    expression (lambda/switch.ml[551,15090+33]..[551,15090+50]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/switch.ml[551,15090+33]..[551,15090+49])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[551,15090+33]..[551,15090+47])
                                                            Pexp_ident "Arg.make_const" (lambda/switch.ml[551,15090+33]..[551,15090+47])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[551,15090+48]..[551,15090+49])
                                                                Pexp_ident "i" (lambda/switch.ml[551,15090+48]..[551,15090+49])
                                                          ]
                                                        expression (lambda/switch.ml[551,15090+49]..[551,15090+50]) ghost
                                                          Pexp_construct "[]" (lambda/switch.ml[551,15090+49]..[551,15090+50]) ghost
                                                          None
                                                      ]
                                              ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[552,15142+6]..[552,15142+10])
                                    Pexp_ident "ifso" (lambda/switch.ml[552,15142+6]..[552,15142+10])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[552,15142+11]..[552,15142+16])
                                    Pexp_ident "ifnot" (lambda/switch.ml[552,15142+11]..[552,15142+16])
                              ]
              ]
            structure_item (lambda/switch.ml[554,15160+2]..[570,15617+43])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[554,15160+6]..[554,15160+16])
                    Ppat_var "make_if_lt" (lambda/switch.ml[554,15160+6]..[554,15160+16])
                  expression (lambda/switch.ml[554,15160+17]..[558,15280+47]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[554,15160+17]..[554,15160+20])
                      Ppat_var "arg" (lambda/switch.ml[554,15160+17]..[554,15160+20])
                    expression (lambda/switch.ml[554,15160+21]..[558,15280+47]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[554,15160+21]..[554,15160+22])
                        Ppat_var "i" (lambda/switch.ml[554,15160+21]..[554,15160+22])
                      expression (lambda/switch.ml[554,15160+24]..[558,15280+47]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[554,15160+24]..[554,15160+28])
                          Ppat_var "ifso" (lambda/switch.ml[554,15160+24]..[554,15160+28])
                        expression (lambda/switch.ml[554,15160+29]..[558,15280+47]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/switch.ml[554,15160+29]..[554,15160+34])
                            Ppat_var "ifnot" (lambda/switch.ml[554,15160+29]..[554,15160+34])
                          expression (lambda/switch.ml[554,15160+37]..[558,15280+47])
                            Pexp_match
                            expression (lambda/switch.ml[554,15160+43]..[554,15160+44])
                              Pexp_ident "i" (lambda/switch.ml[554,15160+43]..[554,15160+44])
                            [
                              <case>
                                pattern (lambda/switch.ml[555,15210+6]..[555,15210+7])
                                  Ppat_constant PConst_int (1,None)
                                expression (lambda/switch.ml[556,15221+8]..[556,15221+47])
                                  Pexp_apply
                                  expression (lambda/switch.ml[556,15221+8]..[556,15221+20])
                                    Pexp_ident "make_if_test" (lambda/switch.ml[556,15221+8]..[556,15221+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[556,15221+21]..[556,15221+30])
                                        Pexp_ident "Arg.leint" (lambda/switch.ml[556,15221+21]..[556,15221+30])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[556,15221+31]..[556,15221+34])
                                        Pexp_ident "arg" (lambda/switch.ml[556,15221+31]..[556,15221+34])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[556,15221+35]..[556,15221+36])
                                        Pexp_constant PConst_int (0,None)
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[556,15221+37]..[556,15221+41])
                                        Pexp_ident "ifso" (lambda/switch.ml[556,15221+37]..[556,15221+41])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[556,15221+42]..[556,15221+47])
                                        Pexp_ident "ifnot" (lambda/switch.ml[556,15221+42]..[556,15221+47])
                                  ]
                              <case>
                                pattern (lambda/switch.ml[557,15269+6]..[557,15269+7])
                                  Ppat_any
                                expression (lambda/switch.ml[558,15280+8]..[558,15280+47])
                                  Pexp_apply
                                  expression (lambda/switch.ml[558,15280+8]..[558,15280+20])
                                    Pexp_ident "make_if_test" (lambda/switch.ml[558,15280+8]..[558,15280+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[558,15280+21]..[558,15280+30])
                                        Pexp_ident "Arg.ltint" (lambda/switch.ml[558,15280+21]..[558,15280+30])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[558,15280+31]..[558,15280+34])
                                        Pexp_ident "arg" (lambda/switch.ml[558,15280+31]..[558,15280+34])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[558,15280+35]..[558,15280+36])
                                        Pexp_ident "i" (lambda/switch.ml[558,15280+35]..[558,15280+36])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[558,15280+37]..[558,15280+41])
                                        Pexp_ident "ifso" (lambda/switch.ml[558,15280+37]..[558,15280+41])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[558,15280+42]..[558,15280+47])
                                        Pexp_ident "ifnot" (lambda/switch.ml[558,15280+42]..[558,15280+47])
                                  ]
                            ]
                <def>
                  pattern (lambda/switch.ml[560,15329+6]..[560,15329+16])
                    Ppat_var "make_if_ge" (lambda/switch.ml[560,15329+6]..[560,15329+16])
                  expression (lambda/switch.ml[560,15329+17]..[564,15449+47]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[560,15329+17]..[560,15329+20])
                      Ppat_var "arg" (lambda/switch.ml[560,15329+17]..[560,15329+20])
                    expression (lambda/switch.ml[560,15329+21]..[564,15449+47]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[560,15329+21]..[560,15329+22])
                        Ppat_var "i" (lambda/switch.ml[560,15329+21]..[560,15329+22])
                      expression (lambda/switch.ml[560,15329+24]..[564,15449+47]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[560,15329+24]..[560,15329+28])
                          Ppat_var "ifso" (lambda/switch.ml[560,15329+24]..[560,15329+28])
                        expression (lambda/switch.ml[560,15329+29]..[564,15449+47]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/switch.ml[560,15329+29]..[560,15329+34])
                            Ppat_var "ifnot" (lambda/switch.ml[560,15329+29]..[560,15329+34])
                          expression (lambda/switch.ml[560,15329+37]..[564,15449+47])
                            Pexp_match
                            expression (lambda/switch.ml[560,15329+43]..[560,15329+44])
                              Pexp_ident "i" (lambda/switch.ml[560,15329+43]..[560,15329+44])
                            [
                              <case>
                                pattern (lambda/switch.ml[561,15379+6]..[561,15379+7])
                                  Ppat_constant PConst_int (1,None)
                                expression (lambda/switch.ml[562,15390+8]..[562,15390+47])
                                  Pexp_apply
                                  expression (lambda/switch.ml[562,15390+8]..[562,15390+20])
                                    Pexp_ident "make_if_test" (lambda/switch.ml[562,15390+8]..[562,15390+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[562,15390+21]..[562,15390+30])
                                        Pexp_ident "Arg.gtint" (lambda/switch.ml[562,15390+21]..[562,15390+30])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[562,15390+31]..[562,15390+34])
                                        Pexp_ident "arg" (lambda/switch.ml[562,15390+31]..[562,15390+34])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[562,15390+35]..[562,15390+36])
                                        Pexp_constant PConst_int (0,None)
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[562,15390+37]..[562,15390+41])
                                        Pexp_ident "ifso" (lambda/switch.ml[562,15390+37]..[562,15390+41])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[562,15390+42]..[562,15390+47])
                                        Pexp_ident "ifnot" (lambda/switch.ml[562,15390+42]..[562,15390+47])
                                  ]
                              <case>
                                pattern (lambda/switch.ml[563,15438+6]..[563,15438+7])
                                  Ppat_any
                                expression (lambda/switch.ml[564,15449+8]..[564,15449+47])
                                  Pexp_apply
                                  expression (lambda/switch.ml[564,15449+8]..[564,15449+20])
                                    Pexp_ident "make_if_test" (lambda/switch.ml[564,15449+8]..[564,15449+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[564,15449+21]..[564,15449+30])
                                        Pexp_ident "Arg.geint" (lambda/switch.ml[564,15449+21]..[564,15449+30])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[564,15449+31]..[564,15449+34])
                                        Pexp_ident "arg" (lambda/switch.ml[564,15449+31]..[564,15449+34])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[564,15449+35]..[564,15449+36])
                                        Pexp_ident "i" (lambda/switch.ml[564,15449+35]..[564,15449+36])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[564,15449+37]..[564,15449+41])
                                        Pexp_ident "ifso" (lambda/switch.ml[564,15449+37]..[564,15449+41])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[564,15449+42]..[564,15449+47])
                                        Pexp_ident "ifnot" (lambda/switch.ml[564,15449+42]..[564,15449+47])
                                  ]
                            ]
                <def>
                  pattern (lambda/switch.ml[566,15498+6]..[566,15498+16])
                    Ppat_var "make_if_eq" (lambda/switch.ml[566,15498+6]..[566,15498+16])
                  expression (lambda/switch.ml[566,15498+18]..[567,15535+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[566,15498+18]..[566,15498+21])
                      Ppat_var "arg" (lambda/switch.ml[566,15498+18]..[566,15498+21])
                    expression (lambda/switch.ml[566,15498+22]..[567,15535+43]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[566,15498+22]..[566,15498+23])
                        Ppat_var "i" (lambda/switch.ml[566,15498+22]..[566,15498+23])
                      expression (lambda/switch.ml[566,15498+24]..[567,15535+43]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[566,15498+24]..[566,15498+28])
                          Ppat_var "ifso" (lambda/switch.ml[566,15498+24]..[566,15498+28])
                        expression (lambda/switch.ml[566,15498+29]..[567,15535+43]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/switch.ml[566,15498+29]..[566,15498+34])
                            Ppat_var "ifnot" (lambda/switch.ml[566,15498+29]..[566,15498+34])
                          expression (lambda/switch.ml[567,15535+4]..[567,15535+43])
                            Pexp_apply
                            expression (lambda/switch.ml[567,15535+4]..[567,15535+16])
                              Pexp_ident "make_if_test" (lambda/switch.ml[567,15535+4]..[567,15535+16])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[567,15535+17]..[567,15535+26])
                                  Pexp_ident "Arg.eqint" (lambda/switch.ml[567,15535+17]..[567,15535+26])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[567,15535+27]..[567,15535+30])
                                  Pexp_ident "arg" (lambda/switch.ml[567,15535+27]..[567,15535+30])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[567,15535+31]..[567,15535+32])
                                  Pexp_ident "i" (lambda/switch.ml[567,15535+31]..[567,15535+32])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[567,15535+33]..[567,15535+37])
                                  Pexp_ident "ifso" (lambda/switch.ml[567,15535+33]..[567,15535+37])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[567,15535+38]..[567,15535+43])
                                  Pexp_ident "ifnot" (lambda/switch.ml[567,15535+38]..[567,15535+43])
                            ]
                <def>
                  pattern (lambda/switch.ml[569,15580+6]..[569,15580+16])
                    Ppat_var "make_if_ne" (lambda/switch.ml[569,15580+6]..[569,15580+16])
                  expression (lambda/switch.ml[569,15580+18]..[570,15617+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[569,15580+18]..[569,15580+21])
                      Ppat_var "arg" (lambda/switch.ml[569,15580+18]..[569,15580+21])
                    expression (lambda/switch.ml[569,15580+22]..[570,15617+43]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[569,15580+22]..[569,15580+23])
                        Ppat_var "i" (lambda/switch.ml[569,15580+22]..[569,15580+23])
                      expression (lambda/switch.ml[569,15580+24]..[570,15617+43]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[569,15580+24]..[569,15580+28])
                          Ppat_var "ifso" (lambda/switch.ml[569,15580+24]..[569,15580+28])
                        expression (lambda/switch.ml[569,15580+29]..[570,15617+43]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/switch.ml[569,15580+29]..[569,15580+34])
                            Ppat_var "ifnot" (lambda/switch.ml[569,15580+29]..[569,15580+34])
                          expression (lambda/switch.ml[570,15617+4]..[570,15617+43])
                            Pexp_apply
                            expression (lambda/switch.ml[570,15617+4]..[570,15617+16])
                              Pexp_ident "make_if_test" (lambda/switch.ml[570,15617+4]..[570,15617+16])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[570,15617+17]..[570,15617+26])
                                  Pexp_ident "Arg.neint" (lambda/switch.ml[570,15617+17]..[570,15617+26])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[570,15617+27]..[570,15617+30])
                                  Pexp_ident "arg" (lambda/switch.ml[570,15617+27]..[570,15617+30])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[570,15617+31]..[570,15617+32])
                                  Pexp_ident "i" (lambda/switch.ml[570,15617+31]..[570,15617+32])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[570,15617+33]..[570,15617+37])
                                  Pexp_ident "ifso" (lambda/switch.ml[570,15617+33]..[570,15617+37])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[570,15617+38]..[570,15617+43])
                                  Pexp_ident "ifnot" (lambda/switch.ml[570,15617+38]..[570,15617+43])
                            ]
              ]
            structure_item (lambda/switch.ml[572,15662+2]..[573,15701+48])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[572,15662+6]..[572,15662+20])
                    Ppat_var "do_make_if_out" (lambda/switch.ml[572,15662+6]..[572,15662+20])
                  expression (lambda/switch.ml[572,15662+21]..[573,15701+48]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[572,15662+21]..[572,15662+22])
                      Ppat_var "h" (lambda/switch.ml[572,15662+21]..[572,15662+22])
                    expression (lambda/switch.ml[572,15662+23]..[573,15701+48]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[572,15662+23]..[572,15662+26])
                        Ppat_var "arg" (lambda/switch.ml[572,15662+23]..[572,15662+26])
                      expression (lambda/switch.ml[572,15662+27]..[573,15701+48]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[572,15662+27]..[572,15662+31])
                          Ppat_var "ifso" (lambda/switch.ml[572,15662+27]..[572,15662+31])
                        expression (lambda/switch.ml[572,15662+32]..[573,15701+48]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/switch.ml[572,15662+32]..[572,15662+36])
                            Ppat_var "ifno" (lambda/switch.ml[572,15662+32]..[572,15662+36])
                          expression (lambda/switch.ml[573,15701+4]..[573,15701+48])
                            Pexp_apply
                            expression (lambda/switch.ml[573,15701+4]..[573,15701+15])
                              Pexp_ident "Arg.make_if" (lambda/switch.ml[573,15701+4]..[573,15701+15])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[573,15701+16]..[573,15701+38])
                                  Pexp_apply
                                  expression (lambda/switch.ml[573,15701+17]..[573,15701+31])
                                    Pexp_ident "Arg.make_isout" (lambda/switch.ml[573,15701+17]..[573,15701+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[573,15701+32]..[573,15701+33])
                                        Pexp_ident "h" (lambda/switch.ml[573,15701+32]..[573,15701+33])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[573,15701+34]..[573,15701+37])
                                        Pexp_ident "arg" (lambda/switch.ml[573,15701+34]..[573,15701+37])
                                  ]
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[573,15701+39]..[573,15701+43])
                                  Pexp_ident "ifso" (lambda/switch.ml[573,15701+39]..[573,15701+43])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[573,15701+44]..[573,15701+48])
                                  Pexp_ident "ifno" (lambda/switch.ml[573,15701+44]..[573,15701+48])
                            ]
              ]
            structure_item (lambda/switch.ml[575,15751+2]..[585,16082+66])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[575,15751+6]..[575,15751+17])
                    Ppat_var "make_if_out" (lambda/switch.ml[575,15751+6]..[575,15751+17])
                  expression (lambda/switch.ml[575,15751+18]..[585,16082+66]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[575,15751+18]..[575,15751+21])
                      Ppat_var "ctx" (lambda/switch.ml[575,15751+18]..[575,15751+21])
                    expression (lambda/switch.ml[575,15751+22]..[585,16082+66]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[575,15751+22]..[575,15751+23])
                        Ppat_var "l" (lambda/switch.ml[575,15751+22]..[575,15751+23])
                      expression (lambda/switch.ml[575,15751+24]..[585,16082+66]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[575,15751+24]..[575,15751+25])
                          Ppat_var "d" (lambda/switch.ml[575,15751+24]..[575,15751+25])
                        expression (lambda/switch.ml[575,15751+26]..[585,16082+66]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/switch.ml[575,15751+26]..[575,15751+33])
                            Ppat_var "mk_ifso" (lambda/switch.ml[575,15751+26]..[575,15751+33])
                          expression (lambda/switch.ml[575,15751+34]..[585,16082+66]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/switch.ml[575,15751+34]..[575,15751+41])
                              Ppat_var "mk_ifno" (lambda/switch.ml[575,15751+34]..[575,15751+41])
                            expression (lambda/switch.ml[575,15751+44]..[585,16082+66])
                              Pexp_match
                              expression (lambda/switch.ml[575,15751+50]..[575,15751+51])
                                Pexp_ident "l" (lambda/switch.ml[575,15751+50]..[575,15751+51])
                              [
                                <case>
                                  pattern (lambda/switch.ml[576,15808+6]..[576,15808+7])
                                    Ppat_constant PConst_int (0,None)
                                  expression (lambda/switch.ml[577,15819+8]..[578,15842+64])
                                    Pexp_apply
                                    expression (lambda/switch.ml[577,15819+8]..[577,15819+22])
                                      Pexp_ident "do_make_if_out" (lambda/switch.ml[577,15819+8]..[577,15819+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[578,15842+10]..[578,15842+28])
                                          Pexp_apply
                                          expression (lambda/switch.ml[578,15842+11]..[578,15842+25])
                                            Pexp_ident "Arg.make_const" (lambda/switch.ml[578,15842+11]..[578,15842+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[578,15842+26]..[578,15842+27])
                                                Pexp_ident "d" (lambda/switch.ml[578,15842+26]..[578,15842+27])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[578,15842+29]..[578,15842+36])
                                          Pexp_field
                                          expression (lambda/switch.ml[578,15842+29]..[578,15842+32])
                                            Pexp_ident "ctx" (lambda/switch.ml[578,15842+29]..[578,15842+32])
                                          "arg" (lambda/switch.ml[578,15842+33]..[578,15842+36])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[578,15842+37]..[578,15842+50])
                                          Pexp_apply
                                          expression (lambda/switch.ml[578,15842+38]..[578,15842+45])
                                            Pexp_ident "mk_ifso" (lambda/switch.ml[578,15842+38]..[578,15842+45])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[578,15842+46]..[578,15842+49])
                                                Pexp_ident "ctx" (lambda/switch.ml[578,15842+46]..[578,15842+49])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[578,15842+51]..[578,15842+64])
                                          Pexp_apply
                                          expression (lambda/switch.ml[578,15842+52]..[578,15842+59])
                                            Pexp_ident "mk_ifno" (lambda/switch.ml[578,15842+52]..[578,15842+59])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[578,15842+60]..[578,15842+63])
                                                Pexp_ident "ctx" (lambda/switch.ml[578,15842+60]..[578,15842+63])
                                          ]
                                    ]
                                <case>
                                  pattern (lambda/switch.ml[579,15907+6]..[579,15907+7])
                                    Ppat_any
                                  expression (lambda/switch.ml[580,15918+8]..[585,16082+66])
                                    Pexp_apply
                                    expression (lambda/switch.ml[580,15918+8]..[580,15918+16])
                                      Pexp_ident "Arg.bind" (lambda/switch.ml[580,15918+8]..[580,15918+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[581,15935+10]..[581,15935+40])
                                          Pexp_apply
                                          expression (lambda/switch.ml[581,15935+11]..[581,15935+26])
                                            Pexp_ident "Arg.make_offset" (lambda/switch.ml[581,15935+11]..[581,15935+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[581,15935+27]..[581,15935+34])
                                                Pexp_field
                                                expression (lambda/switch.ml[581,15935+27]..[581,15935+30])
                                                  Pexp_ident "ctx" (lambda/switch.ml[581,15935+27]..[581,15935+30])
                                                "arg" (lambda/switch.ml[581,15935+31]..[581,15935+34])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[581,15935+35]..[581,15935+39])
                                                Pexp_apply
                                                expression (lambda/switch.ml[581,15935+36]..[581,15935+37])
                                                  Pexp_ident "~-" (lambda/switch.ml[581,15935+36]..[581,15935+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[581,15935+37]..[581,15935+38])
                                                      Pexp_ident "l" (lambda/switch.ml[581,15935+37]..[581,15935+38])
                                                ]
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[582,15976+10]..[585,16082+66])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lambda/switch.ml[582,15976+15]..[582,15976+18])
                                            Ppat_var "arg" (lambda/switch.ml[582,15976+15]..[582,15976+18])
                                          expression (lambda/switch.ml[583,15998+13]..[585,16082+65])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/switch.ml[583,15998+17]..[583,15998+20])
                                                  Ppat_var "ctx" (lambda/switch.ml[583,15998+17]..[583,15998+20])
                                                expression (lambda/switch.ml[583,15998+23]..[583,15998+52])
                                                  Pexp_record
                                                  [
                                                    "off" (lambda/switch.ml[583,15998+24]..[583,15998+27])
                                                      expression (lambda/switch.ml[583,15998+29]..[583,15998+41])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[583,15998+32]..[583,15998+33])
                                                          Pexp_ident "+" (lambda/switch.ml[583,15998+32]..[583,15998+33])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[583,15998+30]..[583,15998+32])
                                                              Pexp_apply
                                                              expression (lambda/switch.ml[583,15998+30]..[583,15998+31])
                                                                Pexp_ident "~-" (lambda/switch.ml[583,15998+30]..[583,15998+31])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/switch.ml[583,15998+31]..[583,15998+32])
                                                                    Pexp_ident "l" (lambda/switch.ml[583,15998+31]..[583,15998+32])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[583,15998+33]..[583,15998+40])
                                                              Pexp_field
                                                              expression (lambda/switch.ml[583,15998+33]..[583,15998+36])
                                                                Pexp_ident "ctx" (lambda/switch.ml[583,15998+33]..[583,15998+36])
                                                              "off" (lambda/switch.ml[583,15998+37]..[583,15998+40])
                                                        ]
                                                    "arg" (lambda/switch.ml[583,15998+44]..[583,15998+47])
                                                      expression (lambda/switch.ml[583,15998+48]..[583,15998+51])
                                                        Pexp_ident "arg" (lambda/switch.ml[583,15998+48]..[583,15998+51])
                                                  ]
                                                  None
                                            ]
                                            expression (lambda/switch.ml[584,16054+13]..[585,16082+65])
                                              Pexp_apply
                                              expression (lambda/switch.ml[584,16054+13]..[584,16054+27])
                                                Pexp_ident "do_make_if_out" (lambda/switch.ml[584,16054+13]..[584,16054+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[585,16082+15]..[585,16082+33])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[585,16082+16]..[585,16082+30])
                                                      Pexp_ident "Arg.make_const" (lambda/switch.ml[585,16082+16]..[585,16082+30])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[585,16082+31]..[585,16082+32])
                                                          Pexp_ident "d" (lambda/switch.ml[585,16082+31]..[585,16082+32])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[585,16082+34]..[585,16082+37])
                                                    Pexp_ident "arg" (lambda/switch.ml[585,16082+34]..[585,16082+37])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[585,16082+38]..[585,16082+51])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[585,16082+39]..[585,16082+46])
                                                      Pexp_ident "mk_ifso" (lambda/switch.ml[585,16082+39]..[585,16082+46])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[585,16082+47]..[585,16082+50])
                                                          Pexp_ident "ctx" (lambda/switch.ml[585,16082+47]..[585,16082+50])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[585,16082+52]..[585,16082+65])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[585,16082+53]..[585,16082+60])
                                                      Pexp_ident "mk_ifno" (lambda/switch.ml[585,16082+53]..[585,16082+60])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[585,16082+61]..[585,16082+64])
                                                          Pexp_ident "ctx" (lambda/switch.ml[585,16082+61]..[585,16082+64])
                                                    ]
                                              ]
                                    ]
                              ]
              ]
            structure_item (lambda/switch.ml[587,16150+2]..[588,16188+47])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[587,16150+6]..[587,16150+19])
                    Ppat_var "do_make_if_in" (lambda/switch.ml[587,16150+6]..[587,16150+19])
                  expression (lambda/switch.ml[587,16150+20]..[588,16188+47]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[587,16150+20]..[587,16150+21])
                      Ppat_var "h" (lambda/switch.ml[587,16150+20]..[587,16150+21])
                    expression (lambda/switch.ml[587,16150+22]..[588,16188+47]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[587,16150+22]..[587,16150+25])
                        Ppat_var "arg" (lambda/switch.ml[587,16150+22]..[587,16150+25])
                      expression (lambda/switch.ml[587,16150+26]..[588,16188+47]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[587,16150+26]..[587,16150+30])
                          Ppat_var "ifso" (lambda/switch.ml[587,16150+26]..[587,16150+30])
                        expression (lambda/switch.ml[587,16150+31]..[588,16188+47]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/switch.ml[587,16150+31]..[587,16150+35])
                            Ppat_var "ifno" (lambda/switch.ml[587,16150+31]..[587,16150+35])
                          expression (lambda/switch.ml[588,16188+4]..[588,16188+47])
                            Pexp_apply
                            expression (lambda/switch.ml[588,16188+4]..[588,16188+15])
                              Pexp_ident "Arg.make_if" (lambda/switch.ml[588,16188+4]..[588,16188+15])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[588,16188+16]..[588,16188+37])
                                  Pexp_apply
                                  expression (lambda/switch.ml[588,16188+17]..[588,16188+30])
                                    Pexp_ident "Arg.make_isin" (lambda/switch.ml[588,16188+17]..[588,16188+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[588,16188+31]..[588,16188+32])
                                        Pexp_ident "h" (lambda/switch.ml[588,16188+31]..[588,16188+32])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[588,16188+33]..[588,16188+36])
                                        Pexp_ident "arg" (lambda/switch.ml[588,16188+33]..[588,16188+36])
                                  ]
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[588,16188+38]..[588,16188+42])
                                  Pexp_ident "ifso" (lambda/switch.ml[588,16188+38]..[588,16188+42])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[588,16188+43]..[588,16188+47])
                                  Pexp_ident "ifno" (lambda/switch.ml[588,16188+43]..[588,16188+47])
                            ]
              ]
            structure_item (lambda/switch.ml[590,16237+2]..[600,16565+66])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[590,16237+6]..[590,16237+16])
                    Ppat_var "make_if_in" (lambda/switch.ml[590,16237+6]..[590,16237+16])
                  expression (lambda/switch.ml[590,16237+17]..[600,16565+66]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[590,16237+17]..[590,16237+20])
                      Ppat_var "ctx" (lambda/switch.ml[590,16237+17]..[590,16237+20])
                    expression (lambda/switch.ml[590,16237+21]..[600,16565+66]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[590,16237+21]..[590,16237+22])
                        Ppat_var "l" (lambda/switch.ml[590,16237+21]..[590,16237+22])
                      expression (lambda/switch.ml[590,16237+23]..[600,16565+66]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[590,16237+23]..[590,16237+24])
                          Ppat_var "d" (lambda/switch.ml[590,16237+23]..[590,16237+24])
                        expression (lambda/switch.ml[590,16237+25]..[600,16565+66]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/switch.ml[590,16237+25]..[590,16237+32])
                            Ppat_var "mk_ifso" (lambda/switch.ml[590,16237+25]..[590,16237+32])
                          expression (lambda/switch.ml[590,16237+33]..[600,16565+66]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/switch.ml[590,16237+33]..[590,16237+40])
                              Ppat_var "mk_ifno" (lambda/switch.ml[590,16237+33]..[590,16237+40])
                            expression (lambda/switch.ml[590,16237+43]..[600,16565+66])
                              Pexp_match
                              expression (lambda/switch.ml[590,16237+49]..[590,16237+50])
                                Pexp_ident "l" (lambda/switch.ml[590,16237+49]..[590,16237+50])
                              [
                                <case>
                                  pattern (lambda/switch.ml[591,16293+6]..[591,16293+7])
                                    Ppat_constant PConst_int (0,None)
                                  expression (lambda/switch.ml[592,16304+8]..[593,16326+64])
                                    Pexp_apply
                                    expression (lambda/switch.ml[592,16304+8]..[592,16304+21])
                                      Pexp_ident "do_make_if_in" (lambda/switch.ml[592,16304+8]..[592,16304+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[593,16326+10]..[593,16326+28])
                                          Pexp_apply
                                          expression (lambda/switch.ml[593,16326+11]..[593,16326+25])
                                            Pexp_ident "Arg.make_const" (lambda/switch.ml[593,16326+11]..[593,16326+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[593,16326+26]..[593,16326+27])
                                                Pexp_ident "d" (lambda/switch.ml[593,16326+26]..[593,16326+27])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[593,16326+29]..[593,16326+36])
                                          Pexp_field
                                          expression (lambda/switch.ml[593,16326+29]..[593,16326+32])
                                            Pexp_ident "ctx" (lambda/switch.ml[593,16326+29]..[593,16326+32])
                                          "arg" (lambda/switch.ml[593,16326+33]..[593,16326+36])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[593,16326+37]..[593,16326+50])
                                          Pexp_apply
                                          expression (lambda/switch.ml[593,16326+38]..[593,16326+45])
                                            Pexp_ident "mk_ifso" (lambda/switch.ml[593,16326+38]..[593,16326+45])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[593,16326+46]..[593,16326+49])
                                                Pexp_ident "ctx" (lambda/switch.ml[593,16326+46]..[593,16326+49])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[593,16326+51]..[593,16326+64])
                                          Pexp_apply
                                          expression (lambda/switch.ml[593,16326+52]..[593,16326+59])
                                            Pexp_ident "mk_ifno" (lambda/switch.ml[593,16326+52]..[593,16326+59])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[593,16326+60]..[593,16326+63])
                                                Pexp_ident "ctx" (lambda/switch.ml[593,16326+60]..[593,16326+63])
                                          ]
                                    ]
                                <case>
                                  pattern (lambda/switch.ml[594,16391+6]..[594,16391+7])
                                    Ppat_any
                                  expression (lambda/switch.ml[595,16402+8]..[600,16565+66])
                                    Pexp_apply
                                    expression (lambda/switch.ml[595,16402+8]..[595,16402+16])
                                      Pexp_ident "Arg.bind" (lambda/switch.ml[595,16402+8]..[595,16402+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[596,16419+10]..[596,16419+40])
                                          Pexp_apply
                                          expression (lambda/switch.ml[596,16419+11]..[596,16419+26])
                                            Pexp_ident "Arg.make_offset" (lambda/switch.ml[596,16419+11]..[596,16419+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[596,16419+27]..[596,16419+34])
                                                Pexp_field
                                                expression (lambda/switch.ml[596,16419+27]..[596,16419+30])
                                                  Pexp_ident "ctx" (lambda/switch.ml[596,16419+27]..[596,16419+30])
                                                "arg" (lambda/switch.ml[596,16419+31]..[596,16419+34])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[596,16419+35]..[596,16419+39])
                                                Pexp_apply
                                                expression (lambda/switch.ml[596,16419+36]..[596,16419+37])
                                                  Pexp_ident "~-" (lambda/switch.ml[596,16419+36]..[596,16419+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[596,16419+37]..[596,16419+38])
                                                      Pexp_ident "l" (lambda/switch.ml[596,16419+37]..[596,16419+38])
                                                ]
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[597,16460+10]..[600,16565+66])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lambda/switch.ml[597,16460+15]..[597,16460+18])
                                            Ppat_var "arg" (lambda/switch.ml[597,16460+15]..[597,16460+18])
                                          expression (lambda/switch.ml[598,16482+13]..[600,16565+65])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/switch.ml[598,16482+17]..[598,16482+20])
                                                  Ppat_var "ctx" (lambda/switch.ml[598,16482+17]..[598,16482+20])
                                                expression (lambda/switch.ml[598,16482+23]..[598,16482+52])
                                                  Pexp_record
                                                  [
                                                    "off" (lambda/switch.ml[598,16482+24]..[598,16482+27])
                                                      expression (lambda/switch.ml[598,16482+29]..[598,16482+41])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[598,16482+32]..[598,16482+33])
                                                          Pexp_ident "+" (lambda/switch.ml[598,16482+32]..[598,16482+33])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[598,16482+30]..[598,16482+32])
                                                              Pexp_apply
                                                              expression (lambda/switch.ml[598,16482+30]..[598,16482+31])
                                                                Pexp_ident "~-" (lambda/switch.ml[598,16482+30]..[598,16482+31])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/switch.ml[598,16482+31]..[598,16482+32])
                                                                    Pexp_ident "l" (lambda/switch.ml[598,16482+31]..[598,16482+32])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[598,16482+33]..[598,16482+40])
                                                              Pexp_field
                                                              expression (lambda/switch.ml[598,16482+33]..[598,16482+36])
                                                                Pexp_ident "ctx" (lambda/switch.ml[598,16482+33]..[598,16482+36])
                                                              "off" (lambda/switch.ml[598,16482+37]..[598,16482+40])
                                                        ]
                                                    "arg" (lambda/switch.ml[598,16482+44]..[598,16482+47])
                                                      expression (lambda/switch.ml[598,16482+48]..[598,16482+51])
                                                        Pexp_ident "arg" (lambda/switch.ml[598,16482+48]..[598,16482+51])
                                                  ]
                                                  None
                                            ]
                                            expression (lambda/switch.ml[599,16538+13]..[600,16565+65])
                                              Pexp_apply
                                              expression (lambda/switch.ml[599,16538+13]..[599,16538+26])
                                                Pexp_ident "do_make_if_in" (lambda/switch.ml[599,16538+13]..[599,16538+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[600,16565+15]..[600,16565+33])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[600,16565+16]..[600,16565+30])
                                                      Pexp_ident "Arg.make_const" (lambda/switch.ml[600,16565+16]..[600,16565+30])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[600,16565+31]..[600,16565+32])
                                                          Pexp_ident "d" (lambda/switch.ml[600,16565+31]..[600,16565+32])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[600,16565+34]..[600,16565+37])
                                                    Pexp_ident "arg" (lambda/switch.ml[600,16565+34]..[600,16565+37])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[600,16565+38]..[600,16565+51])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[600,16565+39]..[600,16565+46])
                                                      Pexp_ident "mk_ifso" (lambda/switch.ml[600,16565+39]..[600,16565+46])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[600,16565+47]..[600,16565+50])
                                                          Pexp_ident "ctx" (lambda/switch.ml[600,16565+47]..[600,16565+50])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[600,16565+52]..[600,16565+65])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[600,16565+53]..[600,16565+60])
                                                      Pexp_ident "mk_ifno" (lambda/switch.ml[600,16565+53]..[600,16565+60])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[600,16565+61]..[600,16565+64])
                                                          Pexp_ident "ctx" (lambda/switch.ml[600,16565+61]..[600,16565+64])
                                                    ]
                                              ]
                                    ]
                              ]
              ]
            structure_item (lambda/switch.ml[602,16633+2]..[673,19098+7])
              Pstr_value Rec
              [
                <def>
                  pattern (lambda/switch.ml[602,16633+10]..[602,16633+16])
                    Ppat_var "c_test" (lambda/switch.ml[602,16633+10]..[602,16633+16])
                  expression (lambda/switch.ml[602,16633+17]..[673,19098+7]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[602,16633+17]..[602,16633+20])
                      Ppat_var "ctx" (lambda/switch.ml[602,16633+17]..[602,16633+20])
                    expression (lambda/switch.ml[602,16633+21]..[673,19098+7]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[602,16633+21]..[602,16633+59])
                        Ppat_alias "s" (lambda/switch.ml[602,16633+57]..[602,16633+58])
                        pattern (lambda/switch.ml[602,16633+22]..[602,16633+53])
                          Ppat_record Closed
                          [
                            "cases" (lambda/switch.ml[602,16633+23]..[602,16633+28])
                              pattern (lambda/switch.ml[602,16633+29]..[602,16633+34])
                                Ppat_var "cases" (lambda/switch.ml[602,16633+29]..[602,16633+34])
                            "actions" (lambda/switch.ml[602,16633+37]..[602,16633+44])
                              pattern (lambda/switch.ml[602,16633+45]..[602,16633+52])
                                Ppat_var "actions" (lambda/switch.ml[602,16633+45]..[602,16633+52])
                          ]
                      expression (lambda/switch.ml[603,16695+4]..[673,19098+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[603,16695+8]..[603,16695+14])
                              Ppat_var "lcases" (lambda/switch.ml[603,16695+8]..[603,16695+14])
                            expression (lambda/switch.ml[603,16695+17]..[603,16695+35])
                              Pexp_apply
                              expression (lambda/switch.ml[603,16695+17]..[603,16695+29])
                                Pexp_ident "Array.length" (lambda/switch.ml[603,16695+17]..[603,16695+29])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[603,16695+30]..[603,16695+35])
                                    Pexp_ident "cases" (lambda/switch.ml[603,16695+30]..[603,16695+35])
                              ]
                        ]
                        expression (lambda/switch.ml[604,16734+4]..[673,19098+7])
                          Pexp_sequence
                          expression (lambda/switch.ml[604,16734+4]..[604,16734+22])
                            Pexp_assert
                            expression (lambda/switch.ml[604,16734+10]..[604,16734+22])
                              Pexp_apply
                              expression (lambda/switch.ml[604,16734+18]..[604,16734+19])
                                Pexp_ident ">" (lambda/switch.ml[604,16734+18]..[604,16734+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[604,16734+11]..[604,16734+17])
                                    Pexp_ident "lcases" (lambda/switch.ml[604,16734+11]..[604,16734+17])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[604,16734+20]..[604,16734+21])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          expression (lambda/switch.ml[605,16759+4]..[673,19098+7])
                            Pexp_ifthenelse
                            expression (lambda/switch.ml[605,16759+7]..[605,16759+17])
                              Pexp_apply
                              expression (lambda/switch.ml[605,16759+14]..[605,16759+15])
                                Pexp_ident "=" (lambda/switch.ml[605,16759+14]..[605,16759+15])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[605,16759+7]..[605,16759+13])
                                    Pexp_ident "lcases" (lambda/switch.ml[605,16759+7]..[605,16759+13])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[605,16759+16]..[605,16759+17])
                                    Pexp_constant PConst_int (1,None)
                              ]
                            expression (lambda/switch.ml[606,16782+6]..[606,16782+35])
                              Pexp_apply
                              expression (lambda/switch.ml[606,16782+6]..[606,16782+31])
                                Pexp_apply
                                expression (lambda/switch.ml[606,16782+6]..[606,16782+31]) ghost
                                  Pexp_ident "Array.get" (lambda/switch.ml[606,16782+6]..[606,16782+31]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[606,16782+6]..[606,16782+13])
                                      Pexp_ident "actions" (lambda/switch.ml[606,16782+6]..[606,16782+13])
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[606,16782+15]..[606,16782+30])
                                      Pexp_apply
                                      expression (lambda/switch.ml[606,16782+15]..[606,16782+22])
                                        Pexp_ident "get_act" (lambda/switch.ml[606,16782+15]..[606,16782+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[606,16782+23]..[606,16782+28])
                                            Pexp_ident "cases" (lambda/switch.ml[606,16782+23]..[606,16782+28])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[606,16782+29]..[606,16782+30])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                ]
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[606,16782+32]..[606,16782+35])
                                    Pexp_ident "ctx" (lambda/switch.ml[606,16782+32]..[606,16782+35])
                              ]
                            Some
                              expression (lambda/switch.ml[608,16819+9]..[673,19098+7])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/switch.ml[610,16835+10]..[610,16835+14])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/switch.ml[610,16835+10]..[610,16835+11])
                                          Ppat_var "w" (lambda/switch.ml[610,16835+10]..[610,16835+11])
                                        pattern (lambda/switch.ml[610,16835+12]..[610,16835+14])
                                          Ppat_var "_c" (lambda/switch.ml[610,16835+12]..[610,16835+14])
                                      ]
                                    expression (lambda/switch.ml[610,16835+17]..[610,16835+38])
                                      Pexp_apply
                                      expression (lambda/switch.ml[610,16835+17]..[610,16835+26])
                                        Pexp_ident "opt_count" (lambda/switch.ml[610,16835+17]..[610,16835+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[610,16835+27]..[610,16835+32])
                                            Pexp_construct "false" (lambda/switch.ml[610,16835+27]..[610,16835+32])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[610,16835+33]..[610,16835+38])
                                            Pexp_ident "cases" (lambda/switch.ml[610,16835+33]..[610,16835+38])
                                      ]
                                ]
                                expression (lambda/switch.ml[616,16971+6]..[671,19046+50])
                                  Pexp_match
                                  expression (lambda/switch.ml[616,16971+12]..[616,16971+13])
                                    Pexp_ident "w" (lambda/switch.ml[616,16971+12]..[616,16971+13])
                                  [
                                    <case>
                                      pattern (lambda/switch.ml[617,16990+8]..[617,16990+10])
                                        Ppat_construct "No" (lambda/switch.ml[617,16990+8]..[617,16990+10])
                                        None
                                      expression (lambda/switch.ml[617,16990+14]..[617,16990+43])
                                        Pexp_apply
                                        expression (lambda/switch.ml[617,16990+14]..[617,16990+39])
                                          Pexp_apply
                                          expression (lambda/switch.ml[617,16990+14]..[617,16990+39]) ghost
                                            Pexp_ident "Array.get" (lambda/switch.ml[617,16990+14]..[617,16990+39]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[617,16990+14]..[617,16990+21])
                                                Pexp_ident "actions" (lambda/switch.ml[617,16990+14]..[617,16990+21])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[617,16990+23]..[617,16990+38])
                                                Pexp_apply
                                                expression (lambda/switch.ml[617,16990+23]..[617,16990+30])
                                                  Pexp_ident "get_act" (lambda/switch.ml[617,16990+23]..[617,16990+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[617,16990+31]..[617,16990+36])
                                                      Pexp_ident "cases" (lambda/switch.ml[617,16990+31]..[617,16990+36])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[617,16990+37]..[617,16990+38])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                          ]
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[617,16990+40]..[617,16990+43])
                                              Pexp_ident "ctx" (lambda/switch.ml[617,16990+40]..[617,16990+43])
                                        ]
                                    <case>
                                      pattern (lambda/switch.ml[618,17034+8]..[618,17034+19])
                                        Ppat_construct "Inter" (lambda/switch.ml[618,17034+8]..[618,17034+13])
                                        Some
                                          []
                                          pattern (lambda/switch.ml[618,17034+14]..[618,17034+19])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/switch.ml[618,17034+15]..[618,17034+16])
                                                Ppat_var "i" (lambda/switch.ml[618,17034+15]..[618,17034+16])
                                              pattern (lambda/switch.ml[618,17034+17]..[618,17034+18])
                                                Ppat_var "j" (lambda/switch.ml[618,17034+17]..[618,17034+18])
                                            ]
                                      expression (lambda/switch.ml[619,17057+10]..[652,18378+13])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/switch.ml[619,17057+14]..[619,17057+38])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/switch.ml[619,17057+14]..[619,17057+17])
                                                  Ppat_var "low" (lambda/switch.ml[619,17057+14]..[619,17057+17])
                                                pattern (lambda/switch.ml[619,17057+18]..[619,17057+22])
                                                  Ppat_var "high" (lambda/switch.ml[619,17057+18]..[619,17057+22])
                                                pattern (lambda/switch.ml[619,17057+23]..[619,17057+29])
                                                  Ppat_var "inside" (lambda/switch.ml[619,17057+23]..[619,17057+29])
                                                pattern (lambda/switch.ml[619,17057+31]..[619,17057+38])
                                                  Ppat_var "outside" (lambda/switch.ml[619,17057+31]..[619,17057+38])
                                              ]
                                            expression (lambda/switch.ml[619,17057+41]..[619,17057+62])
                                              Pexp_apply
                                              expression (lambda/switch.ml[619,17057+41]..[619,17057+52])
                                                Pexp_ident "coupe_inter" (lambda/switch.ml[619,17057+41]..[619,17057+52])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[619,17057+53]..[619,17057+54])
                                                    Pexp_ident "i" (lambda/switch.ml[619,17057+53]..[619,17057+54])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[619,17057+55]..[619,17057+56])
                                                    Pexp_ident "j" (lambda/switch.ml[619,17057+55]..[619,17057+56])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[619,17057+57]..[619,17057+62])
                                                    Pexp_ident "cases" (lambda/switch.ml[619,17057+57]..[619,17057+62])
                                              ]
                                        ]
                                        expression (lambda/switch.ml[620,17123+10]..[652,18378+13])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/switch.ml[620,17123+14]..[620,17123+27])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/switch.ml[620,17123+14]..[620,17123+15])
                                                    Ppat_any
                                                  pattern (lambda/switch.ml[620,17123+16]..[620,17123+27])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/switch.ml[620,17123+17]..[620,17123+24])
                                                        Ppat_var "cinside" (lambda/switch.ml[620,17123+17]..[620,17123+24])
                                                      pattern (lambda/switch.ml[620,17123+25]..[620,17123+26])
                                                        Ppat_any
                                                    ]
                                                ]
                                              expression (lambda/switch.ml[620,17123+30]..[620,17123+52])
                                                Pexp_apply
                                                expression (lambda/switch.ml[620,17123+30]..[620,17123+39])
                                                  Pexp_ident "opt_count" (lambda/switch.ml[620,17123+30]..[620,17123+39])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[620,17123+40]..[620,17123+45])
                                                      Pexp_construct "false" (lambda/switch.ml[620,17123+40]..[620,17123+45])
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[620,17123+46]..[620,17123+52])
                                                      Pexp_ident "inside" (lambda/switch.ml[620,17123+46]..[620,17123+52])
                                                ]
                                            <def>
                                              pattern (lambda/switch.ml[621,17176+14]..[621,17176+28])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/switch.ml[621,17176+14]..[621,17176+15])
                                                    Ppat_any
                                                  pattern (lambda/switch.ml[621,17176+16]..[621,17176+28])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/switch.ml[621,17176+17]..[621,17176+25])
                                                        Ppat_var "coutside" (lambda/switch.ml[621,17176+17]..[621,17176+25])
                                                      pattern (lambda/switch.ml[621,17176+26]..[621,17176+27])
                                                        Ppat_any
                                                    ]
                                                ]
                                              expression (lambda/switch.ml[621,17176+31]..[621,17176+54])
                                                Pexp_apply
                                                expression (lambda/switch.ml[621,17176+31]..[621,17176+40])
                                                  Pexp_ident "opt_count" (lambda/switch.ml[621,17176+31]..[621,17176+40])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[621,17176+41]..[621,17176+46])
                                                      Pexp_construct "false" (lambda/switch.ml[621,17176+41]..[621,17176+46])
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[621,17176+47]..[621,17176+54])
                                                      Pexp_ident "outside" (lambda/switch.ml[621,17176+47]..[621,17176+54])
                                                ]
                                          ]
                                          expression (lambda/switch.ml[624,17371+10]..[652,18378+13])
                                            Pexp_ifthenelse
                                            expression (lambda/switch.ml[624,17371+13]..[624,17371+21])
                                              Pexp_apply
                                              expression (lambda/switch.ml[624,17371+16]..[624,17371+17])
                                                Pexp_ident "=" (lambda/switch.ml[624,17371+16]..[624,17371+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[624,17371+13]..[624,17371+16])
                                                    Pexp_ident "low" (lambda/switch.ml[624,17371+13]..[624,17371+16])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[624,17371+17]..[624,17371+21])
                                                    Pexp_ident "high" (lambda/switch.ml[624,17371+17]..[624,17371+21])
                                              ]
                                            expression (lambda/switch.ml[624,17371+27]..[637,17833+13])
                                              Pexp_ifthenelse
                                              expression (lambda/switch.ml[625,17404+15]..[625,17404+42])
                                                Pexp_apply
                                                expression (lambda/switch.ml[625,17404+15]..[625,17404+25])
                                                  Pexp_ident "less_tests" (lambda/switch.ml[625,17404+15]..[625,17404+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[625,17404+26]..[625,17404+34])
                                                      Pexp_ident "coutside" (lambda/switch.ml[625,17404+26]..[625,17404+34])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[625,17404+35]..[625,17404+42])
                                                      Pexp_ident "cinside" (lambda/switch.ml[625,17404+35]..[625,17404+42])
                                                ]
                                              expression (lambda/switch.ml[626,17452+14]..[630,17582+51])
                                                Pexp_apply
                                                expression (lambda/switch.ml[626,17452+14]..[626,17452+24])
                                                  Pexp_ident "make_if_eq" (lambda/switch.ml[626,17452+14]..[626,17452+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[627,17477+16]..[627,17477+23])
                                                      Pexp_field
                                                      expression (lambda/switch.ml[627,17477+16]..[627,17477+19])
                                                        Pexp_ident "ctx" (lambda/switch.ml[627,17477+16]..[627,17477+19])
                                                      "arg" (lambda/switch.ml[627,17477+20]..[627,17477+23])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[628,17501+16]..[628,17501+29])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[628,17501+20]..[628,17501+21])
                                                        Pexp_ident "+" (lambda/switch.ml[628,17501+20]..[628,17501+21])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[628,17501+17]..[628,17501+20])
                                                            Pexp_ident "low" (lambda/switch.ml[628,17501+17]..[628,17501+20])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[628,17501+21]..[628,17501+28])
                                                            Pexp_field
                                                            expression (lambda/switch.ml[628,17501+21]..[628,17501+24])
                                                              Pexp_ident "ctx" (lambda/switch.ml[628,17501+21]..[628,17501+24])
                                                            "off" (lambda/switch.ml[628,17501+25]..[628,17501+28])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[629,17531+16]..[629,17531+50])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[629,17531+17]..[629,17531+23])
                                                        Pexp_ident "c_test" (lambda/switch.ml[629,17531+17]..[629,17531+23])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[629,17531+24]..[629,17531+27])
                                                            Pexp_ident "ctx" (lambda/switch.ml[629,17531+24]..[629,17531+27])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[629,17531+28]..[629,17531+49])
                                                            Pexp_record
                                                            [
                                                              "cases" (lambda/switch.ml[629,17531+36]..[629,17531+41])
                                                                expression (lambda/switch.ml[629,17531+42]..[629,17531+48])
                                                                  Pexp_ident "inside" (lambda/switch.ml[629,17531+42]..[629,17531+48])
                                                            ]
                                                            Some
                                                              expression (lambda/switch.ml[629,17531+29]..[629,17531+30])
                                                                Pexp_ident "s" (lambda/switch.ml[629,17531+29]..[629,17531+30])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[630,17582+16]..[630,17582+51])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[630,17582+17]..[630,17582+23])
                                                        Pexp_ident "c_test" (lambda/switch.ml[630,17582+17]..[630,17582+23])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[630,17582+24]..[630,17582+27])
                                                            Pexp_ident "ctx" (lambda/switch.ml[630,17582+24]..[630,17582+27])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[630,17582+28]..[630,17582+50])
                                                            Pexp_record
                                                            [
                                                              "cases" (lambda/switch.ml[630,17582+36]..[630,17582+41])
                                                                expression (lambda/switch.ml[630,17582+42]..[630,17582+49])
                                                                  Pexp_ident "outside" (lambda/switch.ml[630,17582+42]..[630,17582+49])
                                                            ]
                                                            Some
                                                              expression (lambda/switch.ml[630,17582+29]..[630,17582+30])
                                                                Pexp_ident "s" (lambda/switch.ml[630,17582+29]..[630,17582+30])
                                                      ]
                                                ]
                                              Some
                                                expression (lambda/switch.ml[632,17651+14]..[636,17782+50])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[632,17651+14]..[632,17651+24])
                                                    Pexp_ident "make_if_ne" (lambda/switch.ml[632,17651+14]..[632,17651+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[633,17676+16]..[633,17676+23])
                                                        Pexp_field
                                                        expression (lambda/switch.ml[633,17676+16]..[633,17676+19])
                                                          Pexp_ident "ctx" (lambda/switch.ml[633,17676+16]..[633,17676+19])
                                                        "arg" (lambda/switch.ml[633,17676+20]..[633,17676+23])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[634,17700+16]..[634,17700+29])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[634,17700+20]..[634,17700+21])
                                                          Pexp_ident "+" (lambda/switch.ml[634,17700+20]..[634,17700+21])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[634,17700+17]..[634,17700+20])
                                                              Pexp_ident "low" (lambda/switch.ml[634,17700+17]..[634,17700+20])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[634,17700+21]..[634,17700+28])
                                                              Pexp_field
                                                              expression (lambda/switch.ml[634,17700+21]..[634,17700+24])
                                                                Pexp_ident "ctx" (lambda/switch.ml[634,17700+21]..[634,17700+24])
                                                              "off" (lambda/switch.ml[634,17700+25]..[634,17700+28])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[635,17730+16]..[635,17730+51])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[635,17730+17]..[635,17730+23])
                                                          Pexp_ident "c_test" (lambda/switch.ml[635,17730+17]..[635,17730+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[635,17730+24]..[635,17730+27])
                                                              Pexp_ident "ctx" (lambda/switch.ml[635,17730+24]..[635,17730+27])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[635,17730+28]..[635,17730+50])
                                                              Pexp_record
                                                              [
                                                                "cases" (lambda/switch.ml[635,17730+36]..[635,17730+41])
                                                                  expression (lambda/switch.ml[635,17730+42]..[635,17730+49])
                                                                    Pexp_ident "outside" (lambda/switch.ml[635,17730+42]..[635,17730+49])
                                                              ]
                                                              Some
                                                                expression (lambda/switch.ml[635,17730+29]..[635,17730+30])
                                                                  Pexp_ident "s" (lambda/switch.ml[635,17730+29]..[635,17730+30])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[636,17782+16]..[636,17782+50])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[636,17782+17]..[636,17782+23])
                                                          Pexp_ident "c_test" (lambda/switch.ml[636,17782+17]..[636,17782+23])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[636,17782+24]..[636,17782+27])
                                                              Pexp_ident "ctx" (lambda/switch.ml[636,17782+24]..[636,17782+27])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[636,17782+28]..[636,17782+49])
                                                              Pexp_record
                                                              [
                                                                "cases" (lambda/switch.ml[636,17782+36]..[636,17782+41])
                                                                  expression (lambda/switch.ml[636,17782+42]..[636,17782+48])
                                                                    Pexp_ident "inside" (lambda/switch.ml[636,17782+42]..[636,17782+48])
                                                              ]
                                                              Some
                                                                expression (lambda/switch.ml[636,17782+29]..[636,17782+30])
                                                                  Pexp_ident "s" (lambda/switch.ml[636,17782+29]..[636,17782+30])
                                                        ]
                                                  ]
                                            Some
                                              expression (lambda/switch.ml[637,17833+19]..[652,18378+13])
                                                Pexp_ifthenelse
                                                expression (lambda/switch.ml[638,17858+15]..[638,17858+42])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[638,17858+15]..[638,17858+25])
                                                    Pexp_ident "less_tests" (lambda/switch.ml[638,17858+15]..[638,17858+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[638,17858+26]..[638,17858+34])
                                                        Pexp_ident "coutside" (lambda/switch.ml[638,17858+26]..[638,17858+34])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[638,17858+35]..[638,17858+42])
                                                        Pexp_ident "cinside" (lambda/switch.ml[638,17858+35]..[638,17858+42])
                                                  ]
                                                expression (lambda/switch.ml[639,17906+14]..[644,18070+62])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[639,17906+14]..[639,17906+24])
                                                    Pexp_ident "make_if_in" (lambda/switch.ml[639,17906+14]..[639,17906+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[640,17931+16]..[640,17931+19])
                                                        Pexp_ident "ctx" (lambda/switch.ml[640,17931+16]..[640,17931+19])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[641,17951+16]..[641,17951+29])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[641,17951+20]..[641,17951+21])
                                                          Pexp_ident "+" (lambda/switch.ml[641,17951+20]..[641,17951+21])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[641,17951+17]..[641,17951+20])
                                                              Pexp_ident "low" (lambda/switch.ml[641,17951+17]..[641,17951+20])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[641,17951+21]..[641,17951+28])
                                                              Pexp_field
                                                              expression (lambda/switch.ml[641,17951+21]..[641,17951+24])
                                                                Pexp_ident "ctx" (lambda/switch.ml[641,17951+21]..[641,17951+24])
                                                              "off" (lambda/switch.ml[641,17951+25]..[641,17951+28])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[642,17981+16]..[642,17981+26])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[642,17981+21]..[642,17981+22])
                                                          Pexp_ident "-" (lambda/switch.ml[642,17981+21]..[642,17981+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[642,17981+17]..[642,17981+21])
                                                              Pexp_ident "high" (lambda/switch.ml[642,17981+17]..[642,17981+21])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[642,17981+22]..[642,17981+25])
                                                              Pexp_ident "low" (lambda/switch.ml[642,17981+22]..[642,17981+25])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[643,18008+16]..[643,18008+61])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (lambda/switch.ml[643,18008+21]..[643,18008+24])
                                                          Ppat_var "ctx" (lambda/switch.ml[643,18008+21]..[643,18008+24])
                                                        expression (lambda/switch.ml[643,18008+28]..[643,18008+60])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[643,18008+28]..[643,18008+34])
                                                            Pexp_ident "c_test" (lambda/switch.ml[643,18008+28]..[643,18008+34])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[643,18008+35]..[643,18008+38])
                                                                Pexp_ident "ctx" (lambda/switch.ml[643,18008+35]..[643,18008+38])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[643,18008+39]..[643,18008+60])
                                                                Pexp_record
                                                                [
                                                                  "cases" (lambda/switch.ml[643,18008+47]..[643,18008+52])
                                                                    expression (lambda/switch.ml[643,18008+53]..[643,18008+59])
                                                                      Pexp_ident "inside" (lambda/switch.ml[643,18008+53]..[643,18008+59])
                                                                ]
                                                                Some
                                                                  expression (lambda/switch.ml[643,18008+40]..[643,18008+41])
                                                                    Pexp_ident "s" (lambda/switch.ml[643,18008+40]..[643,18008+41])
                                                          ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[644,18070+16]..[644,18070+62])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (lambda/switch.ml[644,18070+21]..[644,18070+24])
                                                          Ppat_var "ctx" (lambda/switch.ml[644,18070+21]..[644,18070+24])
                                                        expression (lambda/switch.ml[644,18070+28]..[644,18070+61])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[644,18070+28]..[644,18070+34])
                                                            Pexp_ident "c_test" (lambda/switch.ml[644,18070+28]..[644,18070+34])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[644,18070+35]..[644,18070+38])
                                                                Pexp_ident "ctx" (lambda/switch.ml[644,18070+35]..[644,18070+38])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[644,18070+39]..[644,18070+61])
                                                                Pexp_record
                                                                [
                                                                  "cases" (lambda/switch.ml[644,18070+47]..[644,18070+52])
                                                                    expression (lambda/switch.ml[644,18070+53]..[644,18070+60])
                                                                      Pexp_ident "outside" (lambda/switch.ml[644,18070+53]..[644,18070+60])
                                                                ]
                                                                Some
                                                                  expression (lambda/switch.ml[644,18070+40]..[644,18070+41])
                                                                    Pexp_ident "s" (lambda/switch.ml[644,18070+40]..[644,18070+41])
                                                          ]
                                                  ]
                                                Some
                                                  expression (lambda/switch.ml[646,18150+14]..[651,18316+61])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[646,18150+14]..[646,18150+25])
                                                      Pexp_ident "make_if_out" (lambda/switch.ml[646,18150+14]..[646,18150+25])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[647,18176+16]..[647,18176+19])
                                                          Pexp_ident "ctx" (lambda/switch.ml[647,18176+16]..[647,18176+19])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[648,18196+16]..[648,18196+29])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[648,18196+20]..[648,18196+21])
                                                            Pexp_ident "+" (lambda/switch.ml[648,18196+20]..[648,18196+21])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[648,18196+17]..[648,18196+20])
                                                                Pexp_ident "low" (lambda/switch.ml[648,18196+17]..[648,18196+20])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[648,18196+21]..[648,18196+28])
                                                                Pexp_field
                                                                expression (lambda/switch.ml[648,18196+21]..[648,18196+24])
                                                                  Pexp_ident "ctx" (lambda/switch.ml[648,18196+21]..[648,18196+24])
                                                                "off" (lambda/switch.ml[648,18196+25]..[648,18196+28])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[649,18226+16]..[649,18226+26])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[649,18226+21]..[649,18226+22])
                                                            Pexp_ident "-" (lambda/switch.ml[649,18226+21]..[649,18226+22])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[649,18226+17]..[649,18226+21])
                                                                Pexp_ident "high" (lambda/switch.ml[649,18226+17]..[649,18226+21])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[649,18226+22]..[649,18226+25])
                                                                Pexp_ident "low" (lambda/switch.ml[649,18226+22]..[649,18226+25])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[650,18253+16]..[650,18253+62])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (lambda/switch.ml[650,18253+21]..[650,18253+24])
                                                            Ppat_var "ctx" (lambda/switch.ml[650,18253+21]..[650,18253+24])
                                                          expression (lambda/switch.ml[650,18253+28]..[650,18253+61])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[650,18253+28]..[650,18253+34])
                                                              Pexp_ident "c_test" (lambda/switch.ml[650,18253+28]..[650,18253+34])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[650,18253+35]..[650,18253+38])
                                                                  Pexp_ident "ctx" (lambda/switch.ml[650,18253+35]..[650,18253+38])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[650,18253+39]..[650,18253+61])
                                                                  Pexp_record
                                                                  [
                                                                    "cases" (lambda/switch.ml[650,18253+47]..[650,18253+52])
                                                                      expression (lambda/switch.ml[650,18253+53]..[650,18253+60])
Pexp_ident "outside" (lambda/switch.ml[650,18253+53]..[650,18253+60])
                                                                  ]
                                                                  Some
                                                                    expression (lambda/switch.ml[650,18253+40]..[650,18253+41])
                                                                      Pexp_ident "s" (lambda/switch.ml[650,18253+40]..[650,18253+41])
                                                            ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[651,18316+16]..[651,18316+61])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (lambda/switch.ml[651,18316+21]..[651,18316+24])
                                                            Ppat_var "ctx" (lambda/switch.ml[651,18316+21]..[651,18316+24])
                                                          expression (lambda/switch.ml[651,18316+28]..[651,18316+60])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[651,18316+28]..[651,18316+34])
                                                              Pexp_ident "c_test" (lambda/switch.ml[651,18316+28]..[651,18316+34])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[651,18316+35]..[651,18316+38])
                                                                  Pexp_ident "ctx" (lambda/switch.ml[651,18316+35]..[651,18316+38])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[651,18316+39]..[651,18316+60])
                                                                  Pexp_record
                                                                  [
                                                                    "cases" (lambda/switch.ml[651,18316+47]..[651,18316+52])
                                                                      expression (lambda/switch.ml[651,18316+53]..[651,18316+59])
Pexp_ident "inside" (lambda/switch.ml[651,18316+53]..[651,18316+59])
                                                                  ]
                                                                  Some
                                                                    expression (lambda/switch.ml[651,18316+40]..[651,18316+41])
                                                                      Pexp_ident "s" (lambda/switch.ml[651,18316+40]..[651,18316+41])
                                                            ]
                                                    ]
                                    <case>
                                      pattern (lambda/switch.ml[653,18392+8]..[653,18392+13])
                                        Ppat_construct "Sep" (lambda/switch.ml[653,18392+8]..[653,18392+11])
                                        Some
                                          []
                                          pattern (lambda/switch.ml[653,18392+12]..[653,18392+13])
                                            Ppat_var "i" (lambda/switch.ml[653,18392+12]..[653,18392+13])
                                      expression (lambda/switch.ml[654,18409+10]..[671,19046+50])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/switch.ml[654,18409+14]..[654,18409+28])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/switch.ml[654,18409+14]..[654,18409+17])
                                                  Ppat_var "lim" (lambda/switch.ml[654,18409+14]..[654,18409+17])
                                                pattern (lambda/switch.ml[654,18409+18]..[654,18409+22])
                                                  Ppat_var "left" (lambda/switch.ml[654,18409+18]..[654,18409+22])
                                                pattern (lambda/switch.ml[654,18409+23]..[654,18409+28])
                                                  Ppat_var "right" (lambda/switch.ml[654,18409+23]..[654,18409+28])
                                              ]
                                            expression (lambda/switch.ml[654,18409+31]..[654,18409+44])
                                              Pexp_apply
                                              expression (lambda/switch.ml[654,18409+31]..[654,18409+36])
                                                Pexp_ident "coupe" (lambda/switch.ml[654,18409+31]..[654,18409+36])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[654,18409+37]..[654,18409+42])
                                                    Pexp_ident "cases" (lambda/switch.ml[654,18409+37]..[654,18409+42])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[654,18409+43]..[654,18409+44])
                                                    Pexp_ident "i" (lambda/switch.ml[654,18409+43]..[654,18409+44])
                                              ]
                                        ]
                                        expression (lambda/switch.ml[655,18457+10]..[671,19046+50])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/switch.ml[655,18457+14]..[655,18457+25])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/switch.ml[655,18457+14]..[655,18457+15])
                                                    Ppat_any
                                                  pattern (lambda/switch.ml[655,18457+16]..[655,18457+25])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/switch.ml[655,18457+17]..[655,18457+22])
                                                        Ppat_var "cleft" (lambda/switch.ml[655,18457+17]..[655,18457+22])
                                                      pattern (lambda/switch.ml[655,18457+23]..[655,18457+24])
                                                        Ppat_any
                                                    ]
                                                ]
                                              expression (lambda/switch.ml[655,18457+28]..[655,18457+48])
                                                Pexp_apply
                                                expression (lambda/switch.ml[655,18457+28]..[655,18457+37])
                                                  Pexp_ident "opt_count" (lambda/switch.ml[655,18457+28]..[655,18457+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[655,18457+38]..[655,18457+43])
                                                      Pexp_construct "false" (lambda/switch.ml[655,18457+38]..[655,18457+43])
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[655,18457+44]..[655,18457+48])
                                                      Pexp_ident "left" (lambda/switch.ml[655,18457+44]..[655,18457+48])
                                                ]
                                            <def>
                                              pattern (lambda/switch.ml[656,18506+14]..[656,18506+26])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/switch.ml[656,18506+14]..[656,18506+15])
                                                    Ppat_any
                                                  pattern (lambda/switch.ml[656,18506+16]..[656,18506+26])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/switch.ml[656,18506+17]..[656,18506+23])
                                                        Ppat_var "cright" (lambda/switch.ml[656,18506+17]..[656,18506+23])
                                                      pattern (lambda/switch.ml[656,18506+24]..[656,18506+25])
                                                        Ppat_any
                                                    ]
                                                ]
                                              expression (lambda/switch.ml[656,18506+29]..[656,18506+50])
                                                Pexp_apply
                                                expression (lambda/switch.ml[656,18506+29]..[656,18506+38])
                                                  Pexp_ident "opt_count" (lambda/switch.ml[656,18506+29]..[656,18506+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[656,18506+39]..[656,18506+44])
                                                      Pexp_construct "false" (lambda/switch.ml[656,18506+39]..[656,18506+44])
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[656,18506+45]..[656,18506+50])
                                                      Pexp_ident "right" (lambda/switch.ml[656,18506+45]..[656,18506+50])
                                                ]
                                          ]
                                          expression (lambda/switch.ml[657,18560+10]..[671,19046+50])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/switch.ml[657,18560+14]..[657,18560+18])
                                                  Ppat_var "left" (lambda/switch.ml[657,18560+14]..[657,18560+18])
                                                expression (lambda/switch.ml[657,18560+21]..[657,18560+40])
                                                  Pexp_record
                                                  [
                                                    "cases" (lambda/switch.ml[657,18560+29]..[657,18560+34])
                                                      expression (lambda/switch.ml[657,18560+35]..[657,18560+39])
                                                        Pexp_ident "left" (lambda/switch.ml[657,18560+35]..[657,18560+39])
                                                  ]
                                                  Some
                                                    expression (lambda/switch.ml[657,18560+22]..[657,18560+23])
                                                      Pexp_ident "s" (lambda/switch.ml[657,18560+22]..[657,18560+23])
                                              <def>
                                                pattern (lambda/switch.ml[658,18601+14]..[658,18601+19])
                                                  Ppat_var "right" (lambda/switch.ml[658,18601+14]..[658,18601+19])
                                                expression (lambda/switch.ml[658,18601+22]..[658,18601+42])
                                                  Pexp_record
                                                  [
                                                    "cases" (lambda/switch.ml[658,18601+30]..[658,18601+35])
                                                      expression (lambda/switch.ml[658,18601+36]..[658,18601+41])
                                                        Pexp_ident "right" (lambda/switch.ml[658,18601+36]..[658,18601+41])
                                                  ]
                                                  Some
                                                    expression (lambda/switch.ml[658,18601+23]..[658,18601+24])
                                                      Pexp_ident "s" (lambda/switch.ml[658,18601+23]..[658,18601+24])
                                            ]
                                            expression (lambda/switch.ml[660,18648+10]..[671,19046+50])
                                              Pexp_ifthenelse
                                              expression (lambda/switch.ml[660,18648+13]..[660,18648+64])
                                                Pexp_apply
                                                expression (lambda/switch.ml[660,18648+17]..[660,18648+19])
                                                  Pexp_ident "&&" (lambda/switch.ml[660,18648+17]..[660,18648+19])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[660,18648+13]..[660,18648+16])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[660,18648+14]..[660,18648+15])
                                                        Pexp_ident "=" (lambda/switch.ml[660,18648+14]..[660,18648+15])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[660,18648+13]..[660,18648+14])
                                                            Pexp_ident "i" (lambda/switch.ml[660,18648+13]..[660,18648+14])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[660,18648+15]..[660,18648+16])
                                                            Pexp_constant PConst_int (1,None)
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[660,18648+20]..[660,18648+64])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[660,18648+36]..[660,18648+38])
                                                        Pexp_ident "&&" (lambda/switch.ml[660,18648+36]..[660,18648+38])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[660,18648+20]..[660,18648+35])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[660,18648+33]..[660,18648+34])
                                                              Pexp_ident "=" (lambda/switch.ml[660,18648+33]..[660,18648+34])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[660,18648+20]..[660,18648+33])
                                                                  Pexp_apply
                                                                  expression (lambda/switch.ml[660,18648+24]..[660,18648+25])
                                                                    Pexp_ident "+" (lambda/switch.ml[660,18648+24]..[660,18648+25])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/switch.ml[660,18648+21]..[660,18648+24])
Pexp_ident "lim" (lambda/switch.ml[660,18648+21]..[660,18648+24])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/switch.ml[660,18648+25]..[660,18648+32])
Pexp_field
expression (lambda/switch.ml[660,18648+25]..[660,18648+28])
  Pexp_ident "ctx" (lambda/switch.ml[660,18648+25]..[660,18648+28])
"off" (lambda/switch.ml[660,18648+29]..[660,18648+32])
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[660,18648+34]..[660,18648+35])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[660,18648+39]..[660,18648+64])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[660,18648+62]..[660,18648+63])
                                                              Pexp_ident "=" (lambda/switch.ml[660,18648+62]..[660,18648+63])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[660,18648+39]..[660,18648+62])
                                                                  Pexp_apply
                                                                  expression (lambda/switch.ml[660,18648+54]..[660,18648+55])
                                                                    Pexp_ident "+" (lambda/switch.ml[660,18648+54]..[660,18648+55])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/switch.ml[660,18648+39]..[660,18648+54])
Pexp_apply
expression (lambda/switch.ml[660,18648+39]..[660,18648+46])
  Pexp_ident "get_low" (lambda/switch.ml[660,18648+39]..[660,18648+46])
[
  <arg>
  Nolabel
    expression (lambda/switch.ml[660,18648+47]..[660,18648+52])
      Pexp_ident "cases" (lambda/switch.ml[660,18648+47]..[660,18648+52])
  <arg>
  Nolabel
    expression (lambda/switch.ml[660,18648+53]..[660,18648+54])
      Pexp_constant PConst_int (0,None)
]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/switch.ml[660,18648+55]..[660,18648+62])
Pexp_field
expression (lambda/switch.ml[660,18648+55]..[660,18648+58])
  Pexp_ident "ctx" (lambda/switch.ml[660,18648+55]..[660,18648+58])
"off" (lambda/switch.ml[660,18648+59]..[660,18648+62])
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[660,18648+63]..[660,18648+64])
                                                                  Pexp_constant PConst_int (0,None)
                                                            ]
                                                      ]
                                                ]
                                              expression (lambda/switch.ml[661,18718+12]..[663,18764+50])
                                                Pexp_apply
                                                expression (lambda/switch.ml[661,18718+12]..[661,18718+23])
                                                  Pexp_ident "Arg.make_if" (lambda/switch.ml[661,18718+12]..[661,18718+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[662,18742+14]..[662,18742+21])
                                                      Pexp_field
                                                      expression (lambda/switch.ml[662,18742+14]..[662,18742+17])
                                                        Pexp_ident "ctx" (lambda/switch.ml[662,18742+14]..[662,18742+17])
                                                      "arg" (lambda/switch.ml[662,18742+18]..[662,18742+21])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[663,18764+14]..[663,18764+32])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[663,18764+15]..[663,18764+21])
                                                        Pexp_ident "c_test" (lambda/switch.ml[663,18764+15]..[663,18764+21])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[663,18764+22]..[663,18764+25])
                                                            Pexp_ident "ctx" (lambda/switch.ml[663,18764+22]..[663,18764+25])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[663,18764+26]..[663,18764+31])
                                                            Pexp_ident "right" (lambda/switch.ml[663,18764+26]..[663,18764+31])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[663,18764+33]..[663,18764+50])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[663,18764+34]..[663,18764+40])
                                                        Pexp_ident "c_test" (lambda/switch.ml[663,18764+34]..[663,18764+40])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[663,18764+41]..[663,18764+44])
                                                            Pexp_ident "ctx" (lambda/switch.ml[663,18764+41]..[663,18764+44])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[663,18764+45]..[663,18764+49])
                                                            Pexp_ident "left" (lambda/switch.ml[663,18764+45]..[663,18764+49])
                                                      ]
                                                ]
                                              Some
                                                expression (lambda/switch.ml[664,18815+15]..[671,19046+50])
                                                  Pexp_ifthenelse
                                                  expression (lambda/switch.ml[664,18815+18]..[664,18815+41])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[664,18815+18]..[664,18815+28])
                                                      Pexp_ident "less_tests" (lambda/switch.ml[664,18815+18]..[664,18815+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[664,18815+29]..[664,18815+35])
                                                          Pexp_ident "cright" (lambda/switch.ml[664,18815+29]..[664,18815+35])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[664,18815+36]..[664,18815+41])
                                                          Pexp_ident "cleft" (lambda/switch.ml[664,18815+36]..[664,18815+41])
                                                    ]
                                                  expression (lambda/switch.ml[665,18862+12]..[667,18921+50])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[665,18862+12]..[665,18862+22])
                                                      Pexp_ident "make_if_lt" (lambda/switch.ml[665,18862+12]..[665,18862+22])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[666,18885+14]..[666,18885+21])
                                                          Pexp_field
                                                          expression (lambda/switch.ml[666,18885+14]..[666,18885+17])
                                                            Pexp_ident "ctx" (lambda/switch.ml[666,18885+14]..[666,18885+17])
                                                          "arg" (lambda/switch.ml[666,18885+18]..[666,18885+21])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[666,18885+22]..[666,18885+35])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[666,18885+26]..[666,18885+27])
                                                            Pexp_ident "+" (lambda/switch.ml[666,18885+26]..[666,18885+27])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[666,18885+23]..[666,18885+26])
                                                                Pexp_ident "lim" (lambda/switch.ml[666,18885+23]..[666,18885+26])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[666,18885+27]..[666,18885+34])
                                                                Pexp_field
                                                                expression (lambda/switch.ml[666,18885+27]..[666,18885+30])
                                                                  Pexp_ident "ctx" (lambda/switch.ml[666,18885+27]..[666,18885+30])
                                                                "off" (lambda/switch.ml[666,18885+31]..[666,18885+34])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[667,18921+14]..[667,18921+31])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[667,18921+15]..[667,18921+21])
                                                            Pexp_ident "c_test" (lambda/switch.ml[667,18921+15]..[667,18921+21])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[667,18921+22]..[667,18921+25])
                                                                Pexp_ident "ctx" (lambda/switch.ml[667,18921+22]..[667,18921+25])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[667,18921+26]..[667,18921+30])
                                                                Pexp_ident "left" (lambda/switch.ml[667,18921+26]..[667,18921+30])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[667,18921+32]..[667,18921+50])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[667,18921+33]..[667,18921+39])
                                                            Pexp_ident "c_test" (lambda/switch.ml[667,18921+33]..[667,18921+39])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[667,18921+40]..[667,18921+43])
                                                                Pexp_ident "ctx" (lambda/switch.ml[667,18921+40]..[667,18921+43])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[667,18921+44]..[667,18921+49])
                                                                Pexp_ident "right" (lambda/switch.ml[667,18921+44]..[667,18921+49])
                                                          ]
                                                    ]
                                                  Some
                                                    expression (lambda/switch.ml[669,18987+12]..[671,19046+50])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[669,18987+12]..[669,18987+22])
                                                        Pexp_ident "make_if_ge" (lambda/switch.ml[669,18987+12]..[669,18987+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[670,19010+14]..[670,19010+21])
                                                            Pexp_field
                                                            expression (lambda/switch.ml[670,19010+14]..[670,19010+17])
                                                              Pexp_ident "ctx" (lambda/switch.ml[670,19010+14]..[670,19010+17])
                                                            "arg" (lambda/switch.ml[670,19010+18]..[670,19010+21])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[670,19010+22]..[670,19010+35])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[670,19010+26]..[670,19010+27])
                                                              Pexp_ident "+" (lambda/switch.ml[670,19010+26]..[670,19010+27])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[670,19010+23]..[670,19010+26])
                                                                  Pexp_ident "lim" (lambda/switch.ml[670,19010+23]..[670,19010+26])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[670,19010+27]..[670,19010+34])
                                                                  Pexp_field
                                                                  expression (lambda/switch.ml[670,19010+27]..[670,19010+30])
                                                                    Pexp_ident "ctx" (lambda/switch.ml[670,19010+27]..[670,19010+30])
                                                                  "off" (lambda/switch.ml[670,19010+31]..[670,19010+34])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[671,19046+14]..[671,19046+32])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[671,19046+15]..[671,19046+21])
                                                              Pexp_ident "c_test" (lambda/switch.ml[671,19046+15]..[671,19046+21])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[671,19046+22]..[671,19046+25])
                                                                  Pexp_ident "ctx" (lambda/switch.ml[671,19046+22]..[671,19046+25])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[671,19046+26]..[671,19046+31])
                                                                  Pexp_ident "right" (lambda/switch.ml[671,19046+26]..[671,19046+31])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[671,19046+33]..[671,19046+50])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[671,19046+34]..[671,19046+40])
                                                              Pexp_ident "c_test" (lambda/switch.ml[671,19046+34]..[671,19046+40])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[671,19046+41]..[671,19046+44])
                                                                  Pexp_ident "ctx" (lambda/switch.ml[671,19046+41]..[671,19046+44])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[671,19046+45]..[671,19046+49])
                                                                  Pexp_ident "left" (lambda/switch.ml[671,19046+45]..[671,19046+49])
                                                            ]
                                                      ]
                                  ]
              ]
            structure_item (lambda/switch.ml[677,19144+2]..[677,19144+25])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[677,19144+6]..[677,19144+11])
                    Ppat_var "theta" (lambda/switch.ml[677,19144+6]..[677,19144+11])
                  expression (lambda/switch.ml[677,19144+14]..[677,19144+25])
                    Pexp_apply
                    expression (lambda/switch.ml[677,19144+14]..[677,19144+17])
                      Pexp_ident "ref" (lambda/switch.ml[677,19144+14]..[677,19144+17])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/switch.ml[677,19144+18]..[677,19144+25])
                          Pexp_constant PConst_float (0.33333,None)
                    ]
              ]
            structure_item (lambda/switch.ml[680,19220+2]..[680,19220+24])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[680,19220+6]..[680,19220+16])
                    Ppat_var "switch_min" (lambda/switch.ml[680,19220+6]..[680,19220+16])
                  expression (lambda/switch.ml[680,19220+19]..[680,19220+24])
                    Pexp_apply
                    expression (lambda/switch.ml[680,19220+19]..[680,19220+22])
                      Pexp_ident "ref" (lambda/switch.ml[680,19220+19]..[680,19220+22])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/switch.ml[680,19220+23]..[680,19220+24])
                          Pexp_constant PConst_int (3,None)
                    ]
              ]
            structure_item (lambda/switch.ml[683,19278+2]..[689,19471+18])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[683,19278+6]..[683,19278+21])
                    Ppat_var "particular_case" (lambda/switch.ml[683,19278+6]..[683,19278+21])
                  expression (lambda/switch.ml[683,19278+22]..[689,19471+18]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[683,19278+22]..[683,19278+27])
                      Ppat_var "cases" (lambda/switch.ml[683,19278+22]..[683,19278+27])
                    expression (lambda/switch.ml[683,19278+28]..[689,19471+18]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[683,19278+28]..[683,19278+29])
                        Ppat_var "i" (lambda/switch.ml[683,19278+28]..[683,19278+29])
                      expression (lambda/switch.ml[683,19278+30]..[689,19471+18]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[683,19278+30]..[683,19278+31])
                          Ppat_var "j" (lambda/switch.ml[683,19278+30]..[683,19278+31])
                        expression (lambda/switch.ml[684,19312+4]..[689,19471+18])
                          Pexp_apply
                          expression (lambda/switch.ml[684,19312+12]..[684,19312+14])
                            Pexp_ident "&&" (lambda/switch.ml[684,19312+12]..[684,19312+14])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/switch.ml[684,19312+4]..[684,19312+11])
                                Pexp_apply
                                expression (lambda/switch.ml[684,19312+8]..[684,19312+9])
                                  Pexp_ident "=" (lambda/switch.ml[684,19312+8]..[684,19312+9])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[684,19312+4]..[684,19312+7])
                                      Pexp_apply
                                      expression (lambda/switch.ml[684,19312+5]..[684,19312+6])
                                        Pexp_ident "-" (lambda/switch.ml[684,19312+5]..[684,19312+6])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[684,19312+4]..[684,19312+5])
                                            Pexp_ident "j" (lambda/switch.ml[684,19312+4]..[684,19312+5])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[684,19312+6]..[684,19312+7])
                                            Pexp_ident "i" (lambda/switch.ml[684,19312+6]..[684,19312+7])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[684,19312+10]..[684,19312+11])
                                      Pexp_constant PConst_int (2,None)
                                ]
                            <arg>
                            Nolabel
                              expression (lambda/switch.ml[685,19327+4]..[689,19471+18])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/switch.ml[685,19327+9]..[685,19327+20])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/switch.ml[685,19327+9]..[685,19327+11])
                                          Ppat_var "l1" (lambda/switch.ml[685,19327+9]..[685,19327+11])
                                        pattern (lambda/switch.ml[685,19327+12]..[685,19327+15])
                                          Ppat_var "_h1" (lambda/switch.ml[685,19327+12]..[685,19327+15])
                                        pattern (lambda/switch.ml[685,19327+16]..[685,19327+20])
                                          Ppat_var "act1" (lambda/switch.ml[685,19327+16]..[685,19327+20])
                                      ]
                                    expression (lambda/switch.ml[685,19327+23]..[685,19327+32])
                                      Pexp_apply
                                      expression (lambda/switch.ml[685,19327+23]..[685,19327+32]) ghost
                                        Pexp_ident "Array.get" (lambda/switch.ml[685,19327+23]..[685,19327+32]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[685,19327+23]..[685,19327+28])
                                            Pexp_ident "cases" (lambda/switch.ml[685,19327+23]..[685,19327+28])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[685,19327+30]..[685,19327+31])
                                            Pexp_ident "i" (lambda/switch.ml[685,19327+30]..[685,19327+31])
                                      ]
                                  <def>
                                    pattern (lambda/switch.ml[686,19360+10]..[686,19360+22])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/switch.ml[686,19360+10]..[686,19360+12])
                                          Ppat_var "l2" (lambda/switch.ml[686,19360+10]..[686,19360+12])
                                        pattern (lambda/switch.ml[686,19360+13]..[686,19360+16])
                                          Ppat_var "_h2" (lambda/switch.ml[686,19360+13]..[686,19360+16])
                                        pattern (lambda/switch.ml[686,19360+17]..[686,19360+22])
                                          Ppat_var "_act2" (lambda/switch.ml[686,19360+17]..[686,19360+22])
                                      ]
                                    expression (lambda/switch.ml[686,19360+25]..[686,19360+36])
                                      Pexp_apply
                                      expression (lambda/switch.ml[686,19360+25]..[686,19360+36]) ghost
                                        Pexp_ident "Array.get" (lambda/switch.ml[686,19360+25]..[686,19360+36]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[686,19360+25]..[686,19360+30])
                                            Pexp_ident "cases" (lambda/switch.ml[686,19360+25]..[686,19360+30])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[686,19360+32]..[686,19360+35])
                                            Pexp_apply
                                            expression (lambda/switch.ml[686,19360+33]..[686,19360+34])
                                              Pexp_ident "+" (lambda/switch.ml[686,19360+33]..[686,19360+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[686,19360+32]..[686,19360+33])
                                                  Pexp_ident "i" (lambda/switch.ml[686,19360+32]..[686,19360+33])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[686,19360+34]..[686,19360+35])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                  <def>
                                    pattern (lambda/switch.ml[687,19397+10]..[687,19397+20])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/switch.ml[687,19397+10]..[687,19397+12])
                                          Ppat_var "l3" (lambda/switch.ml[687,19397+10]..[687,19397+12])
                                        pattern (lambda/switch.ml[687,19397+13]..[687,19397+15])
                                          Ppat_var "h3" (lambda/switch.ml[687,19397+13]..[687,19397+15])
                                        pattern (lambda/switch.ml[687,19397+16]..[687,19397+20])
                                          Ppat_var "act3" (lambda/switch.ml[687,19397+16]..[687,19397+20])
                                      ]
                                    expression (lambda/switch.ml[687,19397+23]..[687,19397+34])
                                      Pexp_apply
                                      expression (lambda/switch.ml[687,19397+23]..[687,19397+34]) ghost
                                        Pexp_ident "Array.get" (lambda/switch.ml[687,19397+23]..[687,19397+34]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[687,19397+23]..[687,19397+28])
                                            Pexp_ident "cases" (lambda/switch.ml[687,19397+23]..[687,19397+28])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[687,19397+30]..[687,19397+33])
                                            Pexp_apply
                                            expression (lambda/switch.ml[687,19397+31]..[687,19397+32])
                                              Pexp_ident "+" (lambda/switch.ml[687,19397+31]..[687,19397+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[687,19397+30]..[687,19397+31])
                                                  Pexp_ident "i" (lambda/switch.ml[687,19397+30]..[687,19397+31])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[687,19397+32]..[687,19397+33])
                                                  Pexp_constant PConst_int (2,None)
                                            ]
                                      ]
                                ]
                                expression (lambda/switch.ml[688,19435+5]..[689,19471+17])
                                  Pexp_apply
                                  expression (lambda/switch.ml[688,19435+13]..[688,19435+15])
                                    Pexp_ident "&&" (lambda/switch.ml[688,19435+13]..[688,19435+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[688,19435+5]..[688,19435+12])
                                        Pexp_apply
                                        expression (lambda/switch.ml[688,19435+9]..[688,19435+10])
                                          Pexp_ident "=" (lambda/switch.ml[688,19435+9]..[688,19435+10])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[688,19435+5]..[688,19435+9])
                                              Pexp_apply
                                              expression (lambda/switch.ml[688,19435+7]..[688,19435+8])
                                                Pexp_ident "+" (lambda/switch.ml[688,19435+7]..[688,19435+8])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[688,19435+5]..[688,19435+7])
                                                    Pexp_ident "l1" (lambda/switch.ml[688,19435+5]..[688,19435+7])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[688,19435+8]..[688,19435+9])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[688,19435+10]..[688,19435+12])
                                              Pexp_ident "l2" (lambda/switch.ml[688,19435+10]..[688,19435+12])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[688,19435+16]..[689,19471+17])
                                        Pexp_apply
                                        expression (lambda/switch.ml[688,19435+24]..[688,19435+26])
                                          Pexp_ident "&&" (lambda/switch.ml[688,19435+24]..[688,19435+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[688,19435+16]..[688,19435+23])
                                              Pexp_apply
                                              expression (lambda/switch.ml[688,19435+20]..[688,19435+21])
                                                Pexp_ident "=" (lambda/switch.ml[688,19435+20]..[688,19435+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[688,19435+16]..[688,19435+20])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[688,19435+18]..[688,19435+19])
                                                      Pexp_ident "+" (lambda/switch.ml[688,19435+18]..[688,19435+19])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[688,19435+16]..[688,19435+18])
                                                          Pexp_ident "l2" (lambda/switch.ml[688,19435+16]..[688,19435+18])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[688,19435+19]..[688,19435+20])
                                                          Pexp_constant PConst_int (1,None)
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[688,19435+21]..[688,19435+23])
                                                    Pexp_ident "l3" (lambda/switch.ml[688,19435+21]..[688,19435+23])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[688,19435+27]..[689,19471+17])
                                              Pexp_apply
                                              expression (lambda/switch.ml[688,19435+33]..[688,19435+35])
                                                Pexp_ident "&&" (lambda/switch.ml[688,19435+33]..[688,19435+35])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[688,19435+27]..[688,19435+32])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[688,19435+29]..[688,19435+30])
                                                      Pexp_ident "=" (lambda/switch.ml[688,19435+29]..[688,19435+30])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[688,19435+27]..[688,19435+29])
                                                          Pexp_ident "l3" (lambda/switch.ml[688,19435+27]..[688,19435+29])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[688,19435+30]..[688,19435+32])
                                                          Pexp_ident "h3" (lambda/switch.ml[688,19435+30]..[688,19435+32])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[689,19471+5]..[689,19471+17])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[689,19471+10]..[689,19471+12])
                                                      Pexp_ident "<>" (lambda/switch.ml[689,19471+10]..[689,19471+12])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[689,19471+5]..[689,19471+9])
                                                          Pexp_ident "act1" (lambda/switch.ml[689,19471+5]..[689,19471+9])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[689,19471+13]..[689,19471+17])
                                                          Pexp_ident "act3" (lambda/switch.ml[689,19471+13]..[689,19471+17])
                                                    ]
                                              ]
                                        ]
                                  ]
                          ]
              ]
            structure_item (lambda/switch.ml[691,19491+2]..[697,19656+9])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[691,19491+6]..[691,19491+18])
                    Ppat_var "approx_count" (lambda/switch.ml[691,19491+6]..[691,19491+18])
                  expression (lambda/switch.ml[691,19491+19]..[697,19656+9]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[691,19491+19]..[691,19491+24])
                      Ppat_var "cases" (lambda/switch.ml[691,19491+19]..[691,19491+24])
                    expression (lambda/switch.ml[691,19491+25]..[697,19656+9]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[691,19491+25]..[691,19491+26])
                        Ppat_var "i" (lambda/switch.ml[691,19491+25]..[691,19491+26])
                      expression (lambda/switch.ml[691,19491+27]..[697,19656+9]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[691,19491+27]..[691,19491+28])
                          Ppat_var "j" (lambda/switch.ml[691,19491+27]..[691,19491+28])
                        expression (lambda/switch.ml[692,19522+4]..[697,19656+9])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/switch.ml[692,19522+8]..[692,19522+9])
                                Ppat_var "l" (lambda/switch.ml[692,19522+8]..[692,19522+9])
                              expression (lambda/switch.ml[692,19522+12]..[692,19522+17])
                                Pexp_apply
                                expression (lambda/switch.ml[692,19522+15]..[692,19522+16])
                                  Pexp_ident "+" (lambda/switch.ml[692,19522+15]..[692,19522+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[692,19522+12]..[692,19522+15])
                                      Pexp_apply
                                      expression (lambda/switch.ml[692,19522+13]..[692,19522+14])
                                        Pexp_ident "-" (lambda/switch.ml[692,19522+13]..[692,19522+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[692,19522+12]..[692,19522+13])
                                            Pexp_ident "j" (lambda/switch.ml[692,19522+12]..[692,19522+13])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[692,19522+14]..[692,19522+15])
                                            Pexp_ident "i" (lambda/switch.ml[692,19522+14]..[692,19522+15])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[692,19522+16]..[692,19522+17])
                                      Pexp_constant PConst_int (1,None)
                                ]
                          ]
                          expression (lambda/switch.ml[693,19543+4]..[697,19656+9])
                            Pexp_ifthenelse
                            expression (lambda/switch.ml[693,19543+7]..[693,19543+15])
                              Pexp_apply
                              expression (lambda/switch.ml[693,19543+9]..[693,19543+10])
                                Pexp_ident "<" (lambda/switch.ml[693,19543+9]..[693,19543+10])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[693,19543+7]..[693,19543+8])
                                    Pexp_ident "l" (lambda/switch.ml[693,19543+7]..[693,19543+8])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[693,19543+11]..[693,19543+15])
                                    Pexp_apply
                                    expression (lambda/switch.ml[693,19543+11]..[693,19543+12])
                                      Pexp_ident "!" (lambda/switch.ml[693,19543+11]..[693,19543+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[693,19543+12]..[693,19543+15])
                                          Pexp_ident "cut" (lambda/switch.ml[693,19543+12]..[693,19543+15])
                                    ]
                              ]
                            expression (lambda/switch.ml[694,19564+6]..[695,19634+12])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/switch.ml[694,19564+10]..[694,19564+26])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/switch.ml[694,19564+10]..[694,19564+11])
                                        Ppat_any
                                      pattern (lambda/switch.ml[694,19564+12]..[694,19564+26])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/switch.ml[694,19564+13]..[694,19564+14])
                                            Ppat_any
                                          pattern (lambda/switch.ml[694,19564+15]..[694,19564+25])
                                            Ppat_record Closed
                                            [
                                              "n" (lambda/switch.ml[694,19564+16]..[694,19564+17])
                                                pattern (lambda/switch.ml[694,19564+18]..[694,19564+24])
                                                  Ppat_var "ntests" (lambda/switch.ml[694,19564+18]..[694,19564+24])
                                            ]
                                        ]
                                    ]
                                  expression (lambda/switch.ml[694,19564+29]..[694,19564+66])
                                    Pexp_apply
                                    expression (lambda/switch.ml[694,19564+29]..[694,19564+38])
                                      Pexp_ident "opt_count" (lambda/switch.ml[694,19564+29]..[694,19564+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[694,19564+39]..[694,19564+44])
                                          Pexp_construct "false" (lambda/switch.ml[694,19564+39]..[694,19564+44])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[694,19564+45]..[694,19564+66])
                                          Pexp_apply
                                          expression (lambda/switch.ml[694,19564+46]..[694,19564+55])
                                            Pexp_ident "Array.sub" (lambda/switch.ml[694,19564+46]..[694,19564+55])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[694,19564+56]..[694,19564+61])
                                                Pexp_ident "cases" (lambda/switch.ml[694,19564+56]..[694,19564+61])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[694,19564+62]..[694,19564+63])
                                                Pexp_ident "i" (lambda/switch.ml[694,19564+62]..[694,19564+63])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[694,19564+64]..[694,19564+65])
                                                Pexp_ident "l" (lambda/switch.ml[694,19564+64]..[694,19564+65])
                                          ]
                                    ]
                              ]
                              expression (lambda/switch.ml[695,19634+6]..[695,19634+12])
                                Pexp_ident "ntests" (lambda/switch.ml[695,19634+6]..[695,19634+12])
                            Some
                              expression (lambda/switch.ml[697,19656+6]..[697,19656+9])
                                Pexp_apply
                                expression (lambda/switch.ml[697,19656+7]..[697,19656+8])
                                  Pexp_ident "-" (lambda/switch.ml[697,19656+7]..[697,19656+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[697,19656+6]..[697,19656+7])
                                      Pexp_ident "l" (lambda/switch.ml[697,19656+6]..[697,19656+7])
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[697,19656+8]..[697,19656+9])
                                      Pexp_constant PConst_int (1,None)
                                ]
              ]
            structure_item (lambda/switch.ml[701,19741+2]..[713,20044+59])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[701,19741+6]..[701,19741+11])
                    Ppat_var "dense" (lambda/switch.ml[701,19741+6]..[701,19741+11])
                  expression (lambda/switch.ml[701,19741+12]..[713,20044+59]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[701,19741+12]..[701,19741+19])
                      Ppat_record Closed
                      [
                        "cases" (lambda/switch.ml[701,19741+13]..[701,19741+18]) ghost
                          pattern (lambda/switch.ml[701,19741+13]..[701,19741+18])
                            Ppat_var "cases" (lambda/switch.ml[701,19741+13]..[701,19741+18])
                      ]
                    expression (lambda/switch.ml[701,19741+20]..[713,20044+59]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[701,19741+20]..[701,19741+21])
                        Ppat_var "i" (lambda/switch.ml[701,19741+20]..[701,19741+21])
                      expression (lambda/switch.ml[701,19741+22]..[713,20044+59]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[701,19741+22]..[701,19741+23])
                          Ppat_var "j" (lambda/switch.ml[701,19741+22]..[701,19741+23])
                        expression (lambda/switch.ml[702,19767+4]..[713,20044+59])
                          Pexp_ifthenelse
                          expression (lambda/switch.ml[702,19767+7]..[702,19767+10])
                            Pexp_apply
                            expression (lambda/switch.ml[702,19767+8]..[702,19767+9])
                              Pexp_ident "=" (lambda/switch.ml[702,19767+8]..[702,19767+9])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[702,19767+7]..[702,19767+8])
                                  Pexp_ident "i" (lambda/switch.ml[702,19767+7]..[702,19767+8])
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[702,19767+9]..[702,19767+10])
                                  Pexp_ident "j" (lambda/switch.ml[702,19767+9]..[702,19767+10])
                            ]
                          expression (lambda/switch.ml[702,19767+16]..[702,19767+20])
                            Pexp_construct "true" (lambda/switch.ml[702,19767+16]..[702,19767+20])
                            None
                          Some
                            expression (lambda/switch.ml[704,19797+6]..[713,20044+59])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/switch.ml[704,19797+10]..[704,19797+15])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/switch.ml[704,19797+10]..[704,19797+11])
                                        Ppat_var "l" (lambda/switch.ml[704,19797+10]..[704,19797+11])
                                      pattern (lambda/switch.ml[704,19797+12]..[704,19797+13])
                                        Ppat_any
                                      pattern (lambda/switch.ml[704,19797+14]..[704,19797+15])
                                        Ppat_any
                                    ]
                                  expression (lambda/switch.ml[704,19797+18]..[704,19797+27])
                                    Pexp_apply
                                    expression (lambda/switch.ml[704,19797+18]..[704,19797+27]) ghost
                                      Pexp_ident "Array.get" (lambda/switch.ml[704,19797+18]..[704,19797+27]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[704,19797+18]..[704,19797+23])
                                          Pexp_ident "cases" (lambda/switch.ml[704,19797+18]..[704,19797+23])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[704,19797+25]..[704,19797+26])
                                          Pexp_ident "i" (lambda/switch.ml[704,19797+25]..[704,19797+26])
                                    ]
                                <def>
                                  pattern (lambda/switch.ml[705,19825+10]..[705,19825+15])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/switch.ml[705,19825+10]..[705,19825+11])
                                        Ppat_any
                                      pattern (lambda/switch.ml[705,19825+12]..[705,19825+13])
                                        Ppat_var "h" (lambda/switch.ml[705,19825+12]..[705,19825+13])
                                      pattern (lambda/switch.ml[705,19825+14]..[705,19825+15])
                                        Ppat_any
                                    ]
                                  expression (lambda/switch.ml[705,19825+18]..[705,19825+27])
                                    Pexp_apply
                                    expression (lambda/switch.ml[705,19825+18]..[705,19825+27]) ghost
                                      Pexp_ident "Array.get" (lambda/switch.ml[705,19825+18]..[705,19825+27]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[705,19825+18]..[705,19825+23])
                                          Pexp_ident "cases" (lambda/switch.ml[705,19825+18]..[705,19825+23])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[705,19825+25]..[705,19825+26])
                                          Pexp_ident "j" (lambda/switch.ml[705,19825+25]..[705,19825+26])
                                    ]
                              ]
                              expression (lambda/switch.ml[706,19856+6]..[713,20044+59])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/switch.ml[706,19856+10]..[706,19856+16])
                                      Ppat_var "ntests" (lambda/switch.ml[706,19856+10]..[706,19856+16])
                                    expression (lambda/switch.ml[706,19856+20]..[706,19856+42])
                                      Pexp_apply
                                      expression (lambda/switch.ml[706,19856+20]..[706,19856+32])
                                        Pexp_ident "approx_count" (lambda/switch.ml[706,19856+20]..[706,19856+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[706,19856+33]..[706,19856+38])
                                            Pexp_ident "cases" (lambda/switch.ml[706,19856+33]..[706,19856+38])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[706,19856+39]..[706,19856+40])
                                            Pexp_ident "i" (lambda/switch.ml[706,19856+39]..[706,19856+40])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[706,19856+41]..[706,19856+42])
                                            Pexp_ident "j" (lambda/switch.ml[706,19856+41]..[706,19856+42])
                                      ]
                                ]
                                expression (lambda/switch.ml[710,19940+6]..[713,20044+59])
                                  Pexp_apply
                                  expression (lambda/switch.ml[710,19940+32]..[710,19940+34])
                                    Pexp_ident "||" (lambda/switch.ml[710,19940+32]..[710,19940+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[710,19940+6]..[710,19940+31])
                                        Pexp_apply
                                        expression (lambda/switch.ml[710,19940+6]..[710,19940+21])
                                          Pexp_ident "particular_case" (lambda/switch.ml[710,19940+6]..[710,19940+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[710,19940+22]..[710,19940+27])
                                              Pexp_ident "cases" (lambda/switch.ml[710,19940+22]..[710,19940+27])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[710,19940+28]..[710,19940+29])
                                              Pexp_ident "i" (lambda/switch.ml[710,19940+28]..[710,19940+29])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[710,19940+30]..[710,19940+31])
                                              Pexp_ident "j" (lambda/switch.ml[710,19940+30]..[710,19940+31])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[711,19975+6]..[713,20044+59])
                                        Pexp_apply
                                        expression (lambda/switch.ml[711,19975+29]..[711,19975+31])
                                          Pexp_ident "&&" (lambda/switch.ml[711,19975+29]..[711,19975+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[711,19975+7]..[711,19975+28])
                                              Pexp_apply
                                              expression (lambda/switch.ml[711,19975+14]..[711,19975+16])
                                                Pexp_ident ">=" (lambda/switch.ml[711,19975+14]..[711,19975+16])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[711,19975+7]..[711,19975+13])
                                                    Pexp_ident "ntests" (lambda/switch.ml[711,19975+7]..[711,19975+13])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[711,19975+17]..[711,19975+28])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[711,19975+17]..[711,19975+18])
                                                      Pexp_ident "!" (lambda/switch.ml[711,19975+17]..[711,19975+18])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[711,19975+18]..[711,19975+28])
                                                          Pexp_ident "switch_min" (lambda/switch.ml[711,19975+18]..[711,19975+28])
                                                    ]
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[712,20007+7]..[713,20044+58])
                                              Pexp_apply
                                              expression (lambda/switch.ml[712,20007+34]..[712,20007+36])
                                                Pexp_ident ">=" (lambda/switch.ml[712,20007+34]..[712,20007+36])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[712,20007+7]..[712,20007+33])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[712,20007+27]..[712,20007+29])
                                                      Pexp_ident "+." (lambda/switch.ml[712,20007+27]..[712,20007+29])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[712,20007+7]..[712,20007+26])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[712,20007+7]..[712,20007+19])
                                                            Pexp_ident "float_of_int" (lambda/switch.ml[712,20007+7]..[712,20007+19])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[712,20007+20]..[712,20007+26])
                                                                Pexp_ident "ntests" (lambda/switch.ml[712,20007+20]..[712,20007+26])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[712,20007+30]..[712,20007+33])
                                                          Pexp_constant PConst_float (1.0,None)
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[713,20044+7]..[713,20044+58])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[713,20044+14]..[713,20044+16])
                                                      Pexp_ident "*." (lambda/switch.ml[713,20044+14]..[713,20044+16])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[713,20044+7]..[713,20044+13])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[713,20044+7]..[713,20044+8])
                                                            Pexp_ident "!" (lambda/switch.ml[713,20044+7]..[713,20044+8])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[713,20044+8]..[713,20044+13])
                                                                Pexp_ident "theta" (lambda/switch.ml[713,20044+8]..[713,20044+13])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[713,20044+17]..[713,20044+58])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[713,20044+51]..[713,20044+53])
                                                            Pexp_ident "+." (lambda/switch.ml[713,20044+51]..[713,20044+53])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[713,20044+18]..[713,20044+50])
                                                                Pexp_apply
                                                                expression (lambda/switch.ml[713,20044+33]..[713,20044+35])
                                                                  Pexp_ident "-." (lambda/switch.ml[713,20044+33]..[713,20044+35])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/switch.ml[713,20044+18]..[713,20044+32])
                                                                      Pexp_apply
                                                                      expression (lambda/switch.ml[713,20044+18]..[713,20044+30])
Pexp_ident "float_of_int" (lambda/switch.ml[713,20044+18]..[713,20044+30])
                                                                      [
<arg>
Nolabel
  expression (lambda/switch.ml[713,20044+31]..[713,20044+32])
    Pexp_ident "h" (lambda/switch.ml[713,20044+31]..[713,20044+32])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/switch.ml[713,20044+36]..[713,20044+50])
                                                                      Pexp_apply
                                                                      expression (lambda/switch.ml[713,20044+36]..[713,20044+48])
Pexp_ident "float_of_int" (lambda/switch.ml[713,20044+36]..[713,20044+48])
                                                                      [
<arg>
Nolabel
  expression (lambda/switch.ml[713,20044+49]..[713,20044+50])
    Pexp_ident "l" (lambda/switch.ml[713,20044+49]..[713,20044+50])
                                                                      ]
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[713,20044+54]..[713,20044+57])
                                                                Pexp_constant PConst_float (1.0,None)
                                                          ]
                                                    ]
                                              ]
                                        ]
                                  ]
              ]
            structure_item (lambda/switch.ml[722,20373+2]..[739,20834+26])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[722,20373+6]..[722,20373+19])
                    Ppat_var "comp_clusters" (lambda/switch.ml[722,20373+6]..[722,20373+19])
                  expression (lambda/switch.ml[722,20373+20]..[739,20834+26]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[722,20373+20]..[722,20373+21])
                      Ppat_var "s" (lambda/switch.ml[722,20373+20]..[722,20373+21])
                    expression (lambda/switch.ml[723,20397+4]..[739,20834+26])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/switch.ml[723,20397+8]..[723,20397+11])
                            Ppat_var "len" (lambda/switch.ml[723,20397+8]..[723,20397+11])
                          expression (lambda/switch.ml[723,20397+14]..[723,20397+34])
                            Pexp_apply
                            expression (lambda/switch.ml[723,20397+14]..[723,20397+26])
                              Pexp_ident "Array.length" (lambda/switch.ml[723,20397+14]..[723,20397+26])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[723,20397+27]..[723,20397+34])
                                  Pexp_field
                                  expression (lambda/switch.ml[723,20397+27]..[723,20397+28])
                                    Pexp_ident "s" (lambda/switch.ml[723,20397+27]..[723,20397+28])
                                  "cases" (lambda/switch.ml[723,20397+29]..[723,20397+34])
                            ]
                      ]
                      expression (lambda/switch.ml[724,20435+4]..[739,20834+26])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[724,20435+8]..[724,20435+20])
                              Ppat_var "min_clusters" (lambda/switch.ml[724,20435+8]..[724,20435+20])
                            expression (lambda/switch.ml[724,20435+23]..[724,20435+45])
                              Pexp_apply
                              expression (lambda/switch.ml[724,20435+23]..[724,20435+33])
                                Pexp_ident "Array.make" (lambda/switch.ml[724,20435+23]..[724,20435+33])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[724,20435+34]..[724,20435+37])
                                    Pexp_ident "len" (lambda/switch.ml[724,20435+34]..[724,20435+37])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[724,20435+38]..[724,20435+45])
                                    Pexp_ident "max_int" (lambda/switch.ml[724,20435+38]..[724,20435+45])
                              ]
                          <def>
                            pattern (lambda/switch.ml[725,20481+8]..[725,20481+9])
                              Ppat_var "k" (lambda/switch.ml[725,20481+8]..[725,20481+9])
                            expression (lambda/switch.ml[725,20481+12]..[725,20481+28])
                              Pexp_apply
                              expression (lambda/switch.ml[725,20481+12]..[725,20481+22])
                                Pexp_ident "Array.make" (lambda/switch.ml[725,20481+12]..[725,20481+22])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[725,20481+23]..[725,20481+26])
                                    Pexp_ident "len" (lambda/switch.ml[725,20481+23]..[725,20481+26])
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[725,20481+27]..[725,20481+28])
                                    Pexp_constant PConst_int (0,None)
                              ]
                        ]
                        expression (lambda/switch.ml[726,20513+4]..[739,20834+26])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/switch.ml[726,20513+8]..[726,20513+15])
                                Ppat_var "get_min" (lambda/switch.ml[726,20513+8]..[726,20513+15])
                              expression (lambda/switch.ml[726,20513+16]..[726,20513+57]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/switch.ml[726,20513+16]..[726,20513+17])
                                  Ppat_var "i" (lambda/switch.ml[726,20513+16]..[726,20513+17])
                                expression (lambda/switch.ml[726,20513+20]..[726,20513+57])
                                  Pexp_ifthenelse
                                  expression (lambda/switch.ml[726,20513+23]..[726,20513+28])
                                    Pexp_apply
                                    expression (lambda/switch.ml[726,20513+25]..[726,20513+26])
                                      Pexp_ident "<" (lambda/switch.ml[726,20513+25]..[726,20513+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[726,20513+23]..[726,20513+24])
                                          Pexp_ident "i" (lambda/switch.ml[726,20513+23]..[726,20513+24])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[726,20513+27]..[726,20513+28])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                  expression (lambda/switch.ml[726,20513+34]..[726,20513+35])
                                    Pexp_constant PConst_int (0,None)
                                  Some
                                    expression (lambda/switch.ml[726,20513+41]..[726,20513+57])
                                      Pexp_apply
                                      expression (lambda/switch.ml[726,20513+41]..[726,20513+57]) ghost
                                        Pexp_ident "Array.get" (lambda/switch.ml[726,20513+41]..[726,20513+57]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[726,20513+41]..[726,20513+53])
                                            Pexp_ident "min_clusters" (lambda/switch.ml[726,20513+41]..[726,20513+53])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[726,20513+55]..[726,20513+56])
                                            Pexp_ident "i" (lambda/switch.ml[726,20513+55]..[726,20513+56])
                                      ]
                          ]
                          expression (lambda/switch.ml[728,20575+4]..[739,20834+26])
                            Pexp_sequence
                            expression (lambda/switch.ml[728,20575+4]..[738,20823+8])
                              Pexp_for Up
                              pattern (lambda/switch.ml[728,20575+8]..[728,20575+9])
                                Ppat_var "i" (lambda/switch.ml[728,20575+8]..[728,20575+9])
                              expression (lambda/switch.ml[728,20575+12]..[728,20575+13])
                                Pexp_constant PConst_int (0,None)
                              expression (lambda/switch.ml[728,20575+17]..[728,20575+22])
                                Pexp_apply
                                expression (lambda/switch.ml[728,20575+20]..[728,20575+21])
                                  Pexp_ident "-" (lambda/switch.ml[728,20575+20]..[728,20575+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[728,20575+17]..[728,20575+20])
                                      Pexp_ident "len" (lambda/switch.ml[728,20575+17]..[728,20575+20])
                                  <arg>
                                  Nolabel
                                    expression (lambda/switch.ml[728,20575+21]..[728,20575+22])
                                      Pexp_constant PConst_int (1,None)
                                ]
                              expression (lambda/switch.ml[729,20601+6]..[737,20810+10])
                                Pexp_for Up
                                pattern (lambda/switch.ml[729,20601+10]..[729,20601+11])
                                  Ppat_var "j" (lambda/switch.ml[729,20601+10]..[729,20601+11])
                                expression (lambda/switch.ml[729,20601+14]..[729,20601+15])
                                  Pexp_constant PConst_int (0,None)
                                expression (lambda/switch.ml[729,20601+19]..[729,20601+20])
                                  Pexp_ident "i" (lambda/switch.ml[729,20601+19]..[729,20601+20])
                                expression (lambda/switch.ml[730,20625+8]..[736,20798+11])
                                  Pexp_ifthenelse
                                  expression (lambda/switch.ml[731,20636+10]..[732,20661+46])
                                    Pexp_apply
                                    expression (lambda/switch.ml[731,20636+22]..[731,20636+24])
                                      Pexp_ident "&&" (lambda/switch.ml[731,20636+22]..[731,20636+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[731,20636+10]..[731,20636+21])
                                          Pexp_apply
                                          expression (lambda/switch.ml[731,20636+10]..[731,20636+15])
                                            Pexp_ident "dense" (lambda/switch.ml[731,20636+10]..[731,20636+15])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[731,20636+16]..[731,20636+17])
                                                Pexp_ident "s" (lambda/switch.ml[731,20636+16]..[731,20636+17])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[731,20636+18]..[731,20636+19])
                                                Pexp_ident "j" (lambda/switch.ml[731,20636+18]..[731,20636+19])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[731,20636+20]..[731,20636+21])
                                                Pexp_ident "i" (lambda/switch.ml[731,20636+20]..[731,20636+21])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[732,20661+10]..[732,20661+46])
                                          Pexp_apply
                                          expression (lambda/switch.ml[732,20661+28]..[732,20661+29])
                                            Pexp_ident "<" (lambda/switch.ml[732,20661+28]..[732,20661+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[732,20661+10]..[732,20661+27])
                                                Pexp_apply
                                                expression (lambda/switch.ml[732,20661+24]..[732,20661+25])
                                                  Pexp_ident "+" (lambda/switch.ml[732,20661+24]..[732,20661+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[732,20661+10]..[732,20661+23])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[732,20661+10]..[732,20661+17])
                                                        Pexp_ident "get_min" (lambda/switch.ml[732,20661+10]..[732,20661+17])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[732,20661+18]..[732,20661+23])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[732,20661+20]..[732,20661+21])
                                                              Pexp_ident "-" (lambda/switch.ml[732,20661+20]..[732,20661+21])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[732,20661+19]..[732,20661+20])
                                                                  Pexp_ident "j" (lambda/switch.ml[732,20661+19]..[732,20661+20])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[732,20661+21]..[732,20661+22])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[732,20661+26]..[732,20661+27])
                                                      Pexp_constant PConst_int (1,None)
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[732,20661+30]..[732,20661+46])
                                                Pexp_apply
                                                expression (lambda/switch.ml[732,20661+30]..[732,20661+46]) ghost
                                                  Pexp_ident "Array.get" (lambda/switch.ml[732,20661+30]..[732,20661+46]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[732,20661+30]..[732,20661+42])
                                                      Pexp_ident "min_clusters" (lambda/switch.ml[732,20661+30]..[732,20661+42])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[732,20661+44]..[732,20661+45])
                                                      Pexp_ident "i" (lambda/switch.ml[732,20661+44]..[732,20661+45])
                                                ]
                                          ]
                                    ]
                                  expression (lambda/switch.ml[733,20708+13]..[736,20798+11])
                                    Pexp_sequence
                                    expression (lambda/switch.ml[734,20727+10]..[734,20727+20])
                                      Pexp_apply
                                      expression (lambda/switch.ml[734,20727+10]..[734,20727+20]) ghost
                                        Pexp_ident "Array.set" (lambda/switch.ml[734,20727+10]..[734,20727+20]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[734,20727+10]..[734,20727+11])
                                            Pexp_ident "k" (lambda/switch.ml[734,20727+10]..[734,20727+11])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[734,20727+13]..[734,20727+14])
                                            Pexp_ident "i" (lambda/switch.ml[734,20727+13]..[734,20727+14])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[734,20727+19]..[734,20727+20])
                                            Pexp_ident "j" (lambda/switch.ml[734,20727+19]..[734,20727+20])
                                      ]
                                    expression (lambda/switch.ml[735,20750+10]..[735,20750+47])
                                      Pexp_apply
                                      expression (lambda/switch.ml[735,20750+10]..[735,20750+47]) ghost
                                        Pexp_ident "Array.set" (lambda/switch.ml[735,20750+10]..[735,20750+47]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[735,20750+10]..[735,20750+22])
                                            Pexp_ident "min_clusters" (lambda/switch.ml[735,20750+10]..[735,20750+22])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[735,20750+24]..[735,20750+25])
                                            Pexp_ident "i" (lambda/switch.ml[735,20750+24]..[735,20750+25])
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[735,20750+30]..[735,20750+47])
                                            Pexp_apply
                                            expression (lambda/switch.ml[735,20750+44]..[735,20750+45])
                                              Pexp_ident "+" (lambda/switch.ml[735,20750+44]..[735,20750+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[735,20750+30]..[735,20750+43])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[735,20750+30]..[735,20750+37])
                                                    Pexp_ident "get_min" (lambda/switch.ml[735,20750+30]..[735,20750+37])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[735,20750+38]..[735,20750+43])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[735,20750+40]..[735,20750+41])
                                                          Pexp_ident "-" (lambda/switch.ml[735,20750+40]..[735,20750+41])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[735,20750+39]..[735,20750+40])
                                                              Pexp_ident "j" (lambda/switch.ml[735,20750+39]..[735,20750+40])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[735,20750+41]..[735,20750+42])
                                                              Pexp_constant PConst_int (1,None)
                                                        ]
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[735,20750+46]..[735,20750+47])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                  None
                            expression (lambda/switch.ml[739,20834+4]..[739,20834+26])
                              Pexp_tuple
                              [
                                expression (lambda/switch.ml[739,20834+4]..[739,20834+24])
                                  Pexp_apply
                                  expression (lambda/switch.ml[739,20834+4]..[739,20834+24]) ghost
                                    Pexp_ident "Array.get" (lambda/switch.ml[739,20834+4]..[739,20834+24]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[739,20834+4]..[739,20834+16])
                                        Pexp_ident "min_clusters" (lambda/switch.ml[739,20834+4]..[739,20834+16])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[739,20834+18]..[739,20834+23])
                                        Pexp_apply
                                        expression (lambda/switch.ml[739,20834+21]..[739,20834+22])
                                          Pexp_ident "-" (lambda/switch.ml[739,20834+21]..[739,20834+22])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[739,20834+18]..[739,20834+21])
                                              Pexp_ident "len" (lambda/switch.ml[739,20834+18]..[739,20834+21])
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[739,20834+22]..[739,20834+23])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                  ]
                                expression (lambda/switch.ml[739,20834+25]..[739,20834+26])
                                  Pexp_ident "k" (lambda/switch.ml[739,20834+25]..[739,20834+26])
                              ]
              ]
            structure_item (lambda/switch.ml[742,20883+2]..[775,21755+59])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[742,20883+6]..[742,20883+17])
                    Ppat_var "make_switch" (lambda/switch.ml[742,20883+6]..[742,20883+17])
                  expression (lambda/switch.ml[742,20883+18]..[775,21755+59]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[742,20883+18]..[742,20883+21])
                      Ppat_var "loc" (lambda/switch.ml[742,20883+18]..[742,20883+21])
                    expression (lambda/switch.ml[742,20883+22]..[775,21755+59]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[742,20883+22]..[742,20883+53])
                        Ppat_record Closed
                        [
                          "cases" (lambda/switch.ml[742,20883+23]..[742,20883+28])
                            pattern (lambda/switch.ml[742,20883+29]..[742,20883+34])
                              Ppat_var "cases" (lambda/switch.ml[742,20883+29]..[742,20883+34])
                          "actions" (lambda/switch.ml[742,20883+37]..[742,20883+44])
                            pattern (lambda/switch.ml[742,20883+45]..[742,20883+52])
                              Ppat_var "actions" (lambda/switch.ml[742,20883+45]..[742,20883+52])
                        ]
                      expression (lambda/switch.ml[742,20883+54]..[775,21755+59]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[742,20883+54]..[742,20883+55])
                          Ppat_var "i" (lambda/switch.ml[742,20883+54]..[742,20883+55])
                        expression (lambda/switch.ml[742,20883+56]..[775,21755+59]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/switch.ml[742,20883+56]..[742,20883+57])
                            Ppat_var "j" (lambda/switch.ml[742,20883+56]..[742,20883+57])
                          expression (lambda/switch.ml[743,20943+4]..[775,21755+59])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/switch.ml[743,20943+8]..[743,20943+14])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/switch.ml[743,20943+8]..[743,20943+10])
                                      Ppat_var "ll" (lambda/switch.ml[743,20943+8]..[743,20943+10])
                                    pattern (lambda/switch.ml[743,20943+11]..[743,20943+12])
                                      Ppat_any
                                    pattern (lambda/switch.ml[743,20943+13]..[743,20943+14])
                                      Ppat_any
                                  ]
                                expression (lambda/switch.ml[743,20943+17]..[743,20943+26])
                                  Pexp_apply
                                  expression (lambda/switch.ml[743,20943+17]..[743,20943+26]) ghost
                                    Pexp_ident "Array.get" (lambda/switch.ml[743,20943+17]..[743,20943+26]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[743,20943+17]..[743,20943+22])
                                        Pexp_ident "cases" (lambda/switch.ml[743,20943+17]..[743,20943+22])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[743,20943+24]..[743,20943+25])
                                        Pexp_ident "i" (lambda/switch.ml[743,20943+24]..[743,20943+25])
                                  ]
                              <def>
                                pattern (lambda/switch.ml[744,20970+8]..[744,20970+14])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/switch.ml[744,20970+8]..[744,20970+9])
                                      Ppat_any
                                    pattern (lambda/switch.ml[744,20970+10]..[744,20970+12])
                                      Ppat_var "hh" (lambda/switch.ml[744,20970+10]..[744,20970+12])
                                    pattern (lambda/switch.ml[744,20970+13]..[744,20970+14])
                                      Ppat_any
                                  ]
                                expression (lambda/switch.ml[744,20970+17]..[744,20970+26])
                                  Pexp_apply
                                  expression (lambda/switch.ml[744,20970+17]..[744,20970+26]) ghost
                                    Pexp_ident "Array.get" (lambda/switch.ml[744,20970+17]..[744,20970+26]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[744,20970+17]..[744,20970+22])
                                        Pexp_ident "cases" (lambda/switch.ml[744,20970+17]..[744,20970+22])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[744,20970+24]..[744,20970+25])
                                        Pexp_ident "j" (lambda/switch.ml[744,20970+24]..[744,20970+25])
                                  ]
                            ]
                            expression (lambda/switch.ml[745,21000+4]..[775,21755+59])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/switch.ml[745,21000+8]..[745,21000+11])
                                    Ppat_var "tbl" (lambda/switch.ml[745,21000+8]..[745,21000+11])
                                  expression (lambda/switch.ml[745,21000+14]..[745,21000+36])
                                    Pexp_apply
                                    expression (lambda/switch.ml[745,21000+14]..[745,21000+24])
                                      Pexp_ident "Array.make" (lambda/switch.ml[745,21000+14]..[745,21000+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[745,21000+25]..[745,21000+34])
                                          Pexp_apply
                                          expression (lambda/switch.ml[745,21000+31]..[745,21000+32])
                                            Pexp_ident "+" (lambda/switch.ml[745,21000+31]..[745,21000+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[745,21000+26]..[745,21000+31])
                                                Pexp_apply
                                                expression (lambda/switch.ml[745,21000+28]..[745,21000+29])
                                                  Pexp_ident "-" (lambda/switch.ml[745,21000+28]..[745,21000+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[745,21000+26]..[745,21000+28])
                                                      Pexp_ident "hh" (lambda/switch.ml[745,21000+26]..[745,21000+28])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[745,21000+29]..[745,21000+31])
                                                      Pexp_ident "ll" (lambda/switch.ml[745,21000+29]..[745,21000+31])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[745,21000+32]..[745,21000+33])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[745,21000+35]..[745,21000+36])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                <def>
                                  pattern (lambda/switch.ml[746,21037+8]..[746,21037+9])
                                    Ppat_var "t" (lambda/switch.ml[746,21037+8]..[746,21037+9])
                                  expression (lambda/switch.ml[746,21037+12]..[746,21037+29])
                                    Pexp_apply
                                    expression (lambda/switch.ml[746,21037+12]..[746,21037+26])
                                      Pexp_ident "Hashtbl.create" (lambda/switch.ml[746,21037+12]..[746,21037+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[746,21037+27]..[746,21037+29])
                                          Pexp_constant PConst_int (17,None)
                                    ]
                                <def>
                                  pattern (lambda/switch.ml[747,21067+8]..[747,21067+13])
                                    Ppat_var "index" (lambda/switch.ml[747,21067+8]..[747,21067+13])
                                  expression (lambda/switch.ml[747,21067+16]..[747,21067+21])
                                    Pexp_apply
                                    expression (lambda/switch.ml[747,21067+16]..[747,21067+19])
                                      Pexp_ident "ref" (lambda/switch.ml[747,21067+16]..[747,21067+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[747,21067+20]..[747,21067+21])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                              ]
                              expression (lambda/switch.ml[748,21092+4]..[775,21755+59])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/switch.ml[748,21092+8]..[748,21092+17])
                                      Ppat_var "get_index" (lambda/switch.ml[748,21092+8]..[748,21092+17])
                                    expression (lambda/switch.ml[748,21092+18]..[756,21268+11]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/switch.ml[748,21092+18]..[748,21092+21])
                                        Ppat_var "act" (lambda/switch.ml[748,21092+18]..[748,21092+21])
                                      expression (lambda/switch.ml[749,21116+6]..[756,21268+11])
                                        Pexp_try
                                        expression (lambda/switch.ml[750,21126+8]..[750,21126+26])
                                          Pexp_apply
                                          expression (lambda/switch.ml[750,21126+8]..[750,21126+20])
                                            Pexp_ident "Hashtbl.find" (lambda/switch.ml[750,21126+8]..[750,21126+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[750,21126+21]..[750,21126+22])
                                                Pexp_ident "t" (lambda/switch.ml[750,21126+21]..[750,21126+22])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[750,21126+23]..[750,21126+26])
                                                Pexp_ident "act" (lambda/switch.ml[750,21126+23]..[750,21126+26])
                                          ]
                                        [
                                          <case>
                                            pattern (lambda/switch.ml[752,21164+8]..[752,21164+17])
                                              Ppat_construct "Not_found" (lambda/switch.ml[752,21164+8]..[752,21164+17])
                                              None
                                            expression (lambda/switch.ml[753,21185+10]..[756,21268+11])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lambda/switch.ml[753,21185+14]..[753,21185+15])
                                                    Ppat_var "i" (lambda/switch.ml[753,21185+14]..[753,21185+15])
                                                  expression (lambda/switch.ml[753,21185+18]..[753,21185+24])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[753,21185+18]..[753,21185+19])
                                                      Pexp_ident "!" (lambda/switch.ml[753,21185+18]..[753,21185+19])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[753,21185+19]..[753,21185+24])
                                                          Pexp_ident "index" (lambda/switch.ml[753,21185+19]..[753,21185+24])
                                                    ]
                                              ]
                                              expression (lambda/switch.ml[754,21213+10]..[756,21268+11])
                                                Pexp_sequence
                                                expression (lambda/switch.ml[754,21213+10]..[754,21213+20])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[754,21213+10]..[754,21213+14])
                                                    Pexp_ident "incr" (lambda/switch.ml[754,21213+10]..[754,21213+14])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[754,21213+15]..[754,21213+20])
                                                        Pexp_ident "index" (lambda/switch.ml[754,21213+15]..[754,21213+20])
                                                  ]
                                                expression (lambda/switch.ml[755,21236+10]..[756,21268+11])
                                                  Pexp_sequence
                                                  expression (lambda/switch.ml[755,21236+10]..[755,21236+29])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[755,21236+10]..[755,21236+21])
                                                      Pexp_ident "Hashtbl.add" (lambda/switch.ml[755,21236+10]..[755,21236+21])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[755,21236+22]..[755,21236+23])
                                                          Pexp_ident "t" (lambda/switch.ml[755,21236+22]..[755,21236+23])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[755,21236+24]..[755,21236+27])
                                                          Pexp_ident "act" (lambda/switch.ml[755,21236+24]..[755,21236+27])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[755,21236+28]..[755,21236+29])
                                                          Pexp_ident "i" (lambda/switch.ml[755,21236+28]..[755,21236+29])
                                                    ]
                                                  expression (lambda/switch.ml[756,21268+10]..[756,21268+11])
                                                    Pexp_ident "i" (lambda/switch.ml[756,21268+10]..[756,21268+11])
                                        ]
                                ]
                                expression (lambda/switch.ml[758,21284+4]..[775,21755+59])
                                  Pexp_sequence
                                  expression (lambda/switch.ml[758,21284+4]..[764,21438+8])
                                    Pexp_for Up
                                    pattern (lambda/switch.ml[758,21284+8]..[758,21284+9])
                                      Ppat_var "k" (lambda/switch.ml[758,21284+8]..[758,21284+9])
                                    expression (lambda/switch.ml[758,21284+10]..[758,21284+11])
                                      Pexp_ident "i" (lambda/switch.ml[758,21284+10]..[758,21284+11])
                                    expression (lambda/switch.ml[758,21284+15]..[758,21284+16])
                                      Pexp_ident "j" (lambda/switch.ml[758,21284+15]..[758,21284+16])
                                    expression (lambda/switch.ml[759,21304+6]..[763,21427+10])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/switch.ml[759,21304+10]..[759,21304+17])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/switch.ml[759,21304+10]..[759,21304+11])
                                                Ppat_var "l" (lambda/switch.ml[759,21304+10]..[759,21304+11])
                                              pattern (lambda/switch.ml[759,21304+12]..[759,21304+13])
                                                Ppat_var "h" (lambda/switch.ml[759,21304+12]..[759,21304+13])
                                              pattern (lambda/switch.ml[759,21304+14]..[759,21304+17])
                                                Ppat_var "act" (lambda/switch.ml[759,21304+14]..[759,21304+17])
                                            ]
                                          expression (lambda/switch.ml[759,21304+20]..[759,21304+29])
                                            Pexp_apply
                                            expression (lambda/switch.ml[759,21304+20]..[759,21304+29]) ghost
                                              Pexp_ident "Array.get" (lambda/switch.ml[759,21304+20]..[759,21304+29]) ghost
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[759,21304+20]..[759,21304+25])
                                                  Pexp_ident "cases" (lambda/switch.ml[759,21304+20]..[759,21304+25])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[759,21304+27]..[759,21304+28])
                                                  Pexp_ident "k" (lambda/switch.ml[759,21304+27]..[759,21304+28])
                                            ]
                                      ]
                                      expression (lambda/switch.ml[760,21337+6]..[763,21427+10])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/switch.ml[760,21337+10]..[760,21337+15])
                                              Ppat_var "index" (lambda/switch.ml[760,21337+10]..[760,21337+15])
                                            expression (lambda/switch.ml[760,21337+18]..[760,21337+31])
                                              Pexp_apply
                                              expression (lambda/switch.ml[760,21337+18]..[760,21337+27])
                                                Pexp_ident "get_index" (lambda/switch.ml[760,21337+18]..[760,21337+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[760,21337+28]..[760,21337+31])
                                                    Pexp_ident "act" (lambda/switch.ml[760,21337+28]..[760,21337+31])
                                              ]
                                        ]
                                        expression (lambda/switch.ml[761,21372+6]..[763,21427+10])
                                          Pexp_for Up
                                          pattern (lambda/switch.ml[761,21372+10]..[761,21372+12])
                                            Ppat_var "kk" (lambda/switch.ml[761,21372+10]..[761,21372+12])
                                          expression (lambda/switch.ml[761,21372+13]..[761,21372+17])
                                            Pexp_apply
                                            expression (lambda/switch.ml[761,21372+14]..[761,21372+15])
                                              Pexp_ident "-" (lambda/switch.ml[761,21372+14]..[761,21372+15])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[761,21372+13]..[761,21372+14])
                                                  Pexp_ident "l" (lambda/switch.ml[761,21372+13]..[761,21372+14])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[761,21372+15]..[761,21372+17])
                                                  Pexp_ident "ll" (lambda/switch.ml[761,21372+15]..[761,21372+17])
                                            ]
                                          expression (lambda/switch.ml[761,21372+21]..[761,21372+25])
                                            Pexp_apply
                                            expression (lambda/switch.ml[761,21372+22]..[761,21372+23])
                                              Pexp_ident "-" (lambda/switch.ml[761,21372+22]..[761,21372+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[761,21372+21]..[761,21372+22])
                                                  Pexp_ident "h" (lambda/switch.ml[761,21372+21]..[761,21372+22])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[761,21372+23]..[761,21372+25])
                                                  Pexp_ident "ll" (lambda/switch.ml[761,21372+23]..[761,21372+25])
                                            ]
                                          expression (lambda/switch.ml[762,21401+8]..[762,21401+25])
                                            Pexp_apply
                                            expression (lambda/switch.ml[762,21401+8]..[762,21401+25]) ghost
                                              Pexp_ident "Array.set" (lambda/switch.ml[762,21401+8]..[762,21401+25]) ghost
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[762,21401+8]..[762,21401+11])
                                                  Pexp_ident "tbl" (lambda/switch.ml[762,21401+8]..[762,21401+11])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[762,21401+13]..[762,21401+15])
                                                  Pexp_ident "kk" (lambda/switch.ml[762,21401+13]..[762,21401+15])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[762,21401+20]..[762,21401+25])
                                                  Pexp_ident "index" (lambda/switch.ml[762,21401+20]..[762,21401+25])
                                            ]
                                  expression (lambda/switch.ml[765,21449+4]..[775,21755+59])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/switch.ml[765,21449+8]..[765,21449+12])
                                          Ppat_var "acts" (lambda/switch.ml[765,21449+8]..[765,21449+12])
                                        expression (lambda/switch.ml[765,21449+15]..[765,21449+44])
                                          Pexp_apply
                                          expression (lambda/switch.ml[765,21449+15]..[765,21449+25])
                                            Pexp_ident "Array.make" (lambda/switch.ml[765,21449+15]..[765,21449+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[765,21449+26]..[765,21449+32])
                                                Pexp_apply
                                                expression (lambda/switch.ml[765,21449+26]..[765,21449+27])
                                                  Pexp_ident "!" (lambda/switch.ml[765,21449+26]..[765,21449+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[765,21449+27]..[765,21449+32])
                                                      Pexp_ident "index" (lambda/switch.ml[765,21449+27]..[765,21449+32])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[765,21449+33]..[765,21449+44])
                                                Pexp_apply
                                                expression (lambda/switch.ml[765,21449+33]..[765,21449+44]) ghost
                                                  Pexp_ident "Array.get" (lambda/switch.ml[765,21449+33]..[765,21449+44]) ghost
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[765,21449+33]..[765,21449+40])
                                                      Pexp_ident "actions" (lambda/switch.ml[765,21449+33]..[765,21449+40])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[765,21449+42]..[765,21449+43])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                          ]
                                    ]
                                    expression (lambda/switch.ml[766,21497+4]..[775,21755+59])
                                      Pexp_sequence
                                      expression (lambda/switch.ml[766,21497+4]..[768,21561+7])
                                        Pexp_apply
                                        expression (lambda/switch.ml[766,21497+4]..[766,21497+16])
                                          Pexp_ident "Hashtbl.iter" (lambda/switch.ml[766,21497+4]..[766,21497+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[767,21514+6]..[767,21514+46])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (lambda/switch.ml[767,21514+11]..[767,21514+14])
                                                Ppat_var "act" (lambda/switch.ml[767,21514+11]..[767,21514+14])
                                              expression (lambda/switch.ml[767,21514+15]..[767,21514+45]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (lambda/switch.ml[767,21514+15]..[767,21514+16])
                                                  Ppat_var "i" (lambda/switch.ml[767,21514+15]..[767,21514+16])
                                                expression (lambda/switch.ml[767,21514+20]..[767,21514+45])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[767,21514+20]..[767,21514+45]) ghost
                                                    Pexp_ident "Array.set" (lambda/switch.ml[767,21514+20]..[767,21514+45]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[767,21514+20]..[767,21514+24])
                                                        Pexp_ident "acts" (lambda/switch.ml[767,21514+20]..[767,21514+24])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[767,21514+26]..[767,21514+27])
                                                        Pexp_ident "i" (lambda/switch.ml[767,21514+26]..[767,21514+27])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[767,21514+32]..[767,21514+45])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[767,21514+32]..[767,21514+45]) ghost
                                                          Pexp_ident "Array.get" (lambda/switch.ml[767,21514+32]..[767,21514+45]) ghost
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[767,21514+32]..[767,21514+39])
                                                              Pexp_ident "actions" (lambda/switch.ml[767,21514+32]..[767,21514+39])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[767,21514+41]..[767,21514+44])
                                                              Pexp_ident "act" (lambda/switch.ml[767,21514+41]..[767,21514+44])
                                                        ]
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[768,21561+6]..[768,21561+7])
                                              Pexp_ident "t" (lambda/switch.ml[768,21561+6]..[768,21561+7])
                                        ]
                                      expression (lambda/switch.ml[769,21571+4]..[775,21755+59])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lambda/switch.ml[769,21571+9]..[769,21571+12])
                                          Ppat_var "ctx" (lambda/switch.ml[769,21571+9]..[769,21571+12])
                                        expression (lambda/switch.ml[770,21587+7]..[775,21755+58])
                                          Pexp_match
                                          expression (lambda/switch.ml[770,21587+13]..[770,21587+24])
                                            Pexp_apply
                                            expression (lambda/switch.ml[770,21587+16]..[770,21587+17])
                                              Pexp_ident "-" (lambda/switch.ml[770,21587+16]..[770,21587+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[770,21587+13]..[770,21587+16])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[770,21587+13]..[770,21587+14])
                                                    Pexp_ident "~-" (lambda/switch.ml[770,21587+13]..[770,21587+14])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[770,21587+14]..[770,21587+16])
                                                        Pexp_ident "ll" (lambda/switch.ml[770,21587+14]..[770,21587+16])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[770,21587+17]..[770,21587+24])
                                                  Pexp_field
                                                  expression (lambda/switch.ml[770,21587+17]..[770,21587+20])
                                                    Pexp_ident "ctx" (lambda/switch.ml[770,21587+17]..[770,21587+20])
                                                  "off" (lambda/switch.ml[770,21587+21]..[770,21587+24])
                                            ]
                                          [
                                            <case>
                                              pattern (lambda/switch.ml[771,21617+9]..[771,21617+10])
                                                Ppat_constant PConst_int (0,None)
                                              expression (lambda/switch.ml[771,21617+14]..[771,21617+50])
                                                Pexp_apply
                                                expression (lambda/switch.ml[771,21617+14]..[771,21617+29])
                                                  Pexp_ident "Arg.make_switch" (lambda/switch.ml[771,21617+14]..[771,21617+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[771,21617+30]..[771,21617+33])
                                                      Pexp_ident "loc" (lambda/switch.ml[771,21617+30]..[771,21617+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[771,21617+34]..[771,21617+41])
                                                      Pexp_field
                                                      expression (lambda/switch.ml[771,21617+34]..[771,21617+37])
                                                        Pexp_ident "ctx" (lambda/switch.ml[771,21617+34]..[771,21617+37])
                                                      "arg" (lambda/switch.ml[771,21617+38]..[771,21617+41])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[771,21617+42]..[771,21617+45])
                                                      Pexp_ident "tbl" (lambda/switch.ml[771,21617+42]..[771,21617+45])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[771,21617+46]..[771,21617+50])
                                                      Pexp_ident "acts" (lambda/switch.ml[771,21617+46]..[771,21617+50])
                                                ]
                                            <case>
                                              pattern (lambda/switch.ml[772,21668+9]..[772,21668+10])
                                                Ppat_any
                                              expression (lambda/switch.ml[773,21682+11]..[775,21755+58])
                                                Pexp_apply
                                                expression (lambda/switch.ml[773,21682+11]..[773,21682+19])
                                                  Pexp_ident "Arg.bind" (lambda/switch.ml[773,21682+11]..[773,21682+19])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[774,21702+13]..[774,21702+52])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[774,21702+14]..[774,21702+29])
                                                        Pexp_ident "Arg.make_offset" (lambda/switch.ml[774,21702+14]..[774,21702+29])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[774,21702+30]..[774,21702+37])
                                                            Pexp_field
                                                            expression (lambda/switch.ml[774,21702+30]..[774,21702+33])
                                                              Pexp_ident "ctx" (lambda/switch.ml[774,21702+30]..[774,21702+33])
                                                            "arg" (lambda/switch.ml[774,21702+34]..[774,21702+37])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[774,21702+38]..[774,21702+51])
                                                            Pexp_apply
                                                            expression (lambda/switch.ml[774,21702+42]..[774,21702+43])
                                                              Pexp_ident "-" (lambda/switch.ml[774,21702+42]..[774,21702+43])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[774,21702+39]..[774,21702+42])
                                                                  Pexp_apply
                                                                  expression (lambda/switch.ml[774,21702+39]..[774,21702+40])
                                                                    Pexp_ident "~-" (lambda/switch.ml[774,21702+39]..[774,21702+40])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lambda/switch.ml[774,21702+40]..[774,21702+42])
Pexp_ident "ll" (lambda/switch.ml[774,21702+40]..[774,21702+42])
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/switch.ml[774,21702+43]..[774,21702+50])
                                                                  Pexp_field
                                                                  expression (lambda/switch.ml[774,21702+43]..[774,21702+46])
                                                                    Pexp_ident "ctx" (lambda/switch.ml[774,21702+43]..[774,21702+46])
                                                                  "off" (lambda/switch.ml[774,21702+47]..[774,21702+50])
                                                            ]
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[775,21755+13]..[775,21755+58])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (lambda/switch.ml[775,21755+18]..[775,21755+21])
                                                        Ppat_var "arg" (lambda/switch.ml[775,21755+18]..[775,21755+21])
                                                      expression (lambda/switch.ml[775,21755+25]..[775,21755+57])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[775,21755+25]..[775,21755+40])
                                                          Pexp_ident "Arg.make_switch" (lambda/switch.ml[775,21755+25]..[775,21755+40])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[775,21755+41]..[775,21755+44])
                                                              Pexp_ident "loc" (lambda/switch.ml[775,21755+41]..[775,21755+44])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[775,21755+45]..[775,21755+48])
                                                              Pexp_ident "arg" (lambda/switch.ml[775,21755+45]..[775,21755+48])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[775,21755+49]..[775,21755+52])
                                                              Pexp_ident "tbl" (lambda/switch.ml[775,21755+49]..[775,21755+52])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[775,21755+53]..[775,21755+57])
                                                              Pexp_ident "acts" (lambda/switch.ml[775,21755+53]..[775,21755+57])
                                                        ]
                                                ]
                                          ]
              ]
            structure_item (lambda/switch.ml[778,21817+2]..[818,22979+32])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[778,21817+6]..[778,21817+19])
                    Ppat_var "make_clusters" (lambda/switch.ml[778,21817+6]..[778,21817+19])
                  expression (lambda/switch.ml[778,21817+20]..[818,22979+32]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[778,21817+20]..[778,21817+23])
                      Ppat_var "loc" (lambda/switch.ml[778,21817+20]..[778,21817+23])
                    expression (lambda/switch.ml[778,21817+24]..[818,22979+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[778,21817+24]..[778,21817+62])
                        Ppat_alias "s" (lambda/switch.ml[778,21817+60]..[778,21817+61])
                        pattern (lambda/switch.ml[778,21817+25]..[778,21817+56])
                          Ppat_record Closed
                          [
                            "cases" (lambda/switch.ml[778,21817+26]..[778,21817+31])
                              pattern (lambda/switch.ml[778,21817+32]..[778,21817+37])
                                Ppat_var "cases" (lambda/switch.ml[778,21817+32]..[778,21817+37])
                            "actions" (lambda/switch.ml[778,21817+40]..[778,21817+47])
                              pattern (lambda/switch.ml[778,21817+48]..[778,21817+55])
                                Ppat_var "actions" (lambda/switch.ml[778,21817+48]..[778,21817+55])
                          ]
                      expression (lambda/switch.ml[778,21817+63]..[818,22979+32]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[778,21817+63]..[778,21817+73])
                          Ppat_var "n_clusters" (lambda/switch.ml[778,21817+63]..[778,21817+73])
                        expression (lambda/switch.ml[778,21817+74]..[818,22979+32]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/switch.ml[778,21817+74]..[778,21817+75])
                            Ppat_var "k" (lambda/switch.ml[778,21817+74]..[778,21817+75])
                          expression (lambda/switch.ml[779,21895+4]..[818,22979+32])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/switch.ml[779,21895+8]..[779,21895+11])
                                  Ppat_var "len" (lambda/switch.ml[779,21895+8]..[779,21895+11])
                                expression (lambda/switch.ml[779,21895+14]..[779,21895+32])
                                  Pexp_apply
                                  expression (lambda/switch.ml[779,21895+14]..[779,21895+26])
                                    Pexp_ident "Array.length" (lambda/switch.ml[779,21895+14]..[779,21895+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[779,21895+27]..[779,21895+32])
                                        Pexp_ident "cases" (lambda/switch.ml[779,21895+27]..[779,21895+32])
                                  ]
                            ]
                            expression (lambda/switch.ml[780,21931+4]..[818,22979+32])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/switch.ml[780,21931+8]..[780,21931+9])
                                    Ppat_var "r" (lambda/switch.ml[780,21931+8]..[780,21931+9])
                                  expression (lambda/switch.ml[780,21931+12]..[780,21931+41])
                                    Pexp_apply
                                    expression (lambda/switch.ml[780,21931+12]..[780,21931+22])
                                      Pexp_ident "Array.make" (lambda/switch.ml[780,21931+12]..[780,21931+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[780,21931+23]..[780,21931+33])
                                          Pexp_ident "n_clusters" (lambda/switch.ml[780,21931+23]..[780,21931+33])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[780,21931+34]..[780,21931+41])
                                          Pexp_tuple
                                          [
                                            expression (lambda/switch.ml[780,21931+35]..[780,21931+36])
                                              Pexp_constant PConst_int (0,None)
                                            expression (lambda/switch.ml[780,21931+37]..[780,21931+38])
                                              Pexp_constant PConst_int (0,None)
                                            expression (lambda/switch.ml[780,21931+39]..[780,21931+40])
                                              Pexp_constant PConst_int (0,None)
                                          ]
                                    ]
                                <def>
                                  pattern (lambda/switch.ml[781,21973+8]..[781,21973+9])
                                    Ppat_var "t" (lambda/switch.ml[781,21973+8]..[781,21973+9])
                                  expression (lambda/switch.ml[781,21973+12]..[781,21973+29])
                                    Pexp_apply
                                    expression (lambda/switch.ml[781,21973+12]..[781,21973+26])
                                      Pexp_ident "Hashtbl.create" (lambda/switch.ml[781,21973+12]..[781,21973+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[781,21973+27]..[781,21973+29])
                                          Pexp_constant PConst_int (17,None)
                                    ]
                                <def>
                                  pattern (lambda/switch.ml[782,22003+8]..[782,22003+13])
                                    Ppat_var "index" (lambda/switch.ml[782,22003+8]..[782,22003+13])
                                  expression (lambda/switch.ml[782,22003+16]..[782,22003+21])
                                    Pexp_apply
                                    expression (lambda/switch.ml[782,22003+16]..[782,22003+19])
                                      Pexp_ident "ref" (lambda/switch.ml[782,22003+16]..[782,22003+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[782,22003+20]..[782,22003+21])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                <def>
                                  pattern (lambda/switch.ml[783,22025+8]..[783,22025+13])
                                    Ppat_var "bidon" (lambda/switch.ml[783,22025+8]..[783,22025+13])
                                  expression (lambda/switch.ml[783,22025+16]..[783,22025+42])
                                    Pexp_apply
                                    expression (lambda/switch.ml[783,22025+16]..[783,22025+19])
                                      Pexp_ident "ref" (lambda/switch.ml[783,22025+16]..[783,22025+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[783,22025+20]..[783,22025+42])
                                          Pexp_apply
                                          expression (lambda/switch.ml[783,22025+21]..[783,22025+33])
                                            Pexp_ident "Array.length" (lambda/switch.ml[783,22025+21]..[783,22025+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[783,22025+34]..[783,22025+41])
                                                Pexp_ident "actions" (lambda/switch.ml[783,22025+34]..[783,22025+41])
                                          ]
                                    ]
                              ]
                              expression (lambda/switch.ml[784,22071+4]..[818,22979+32])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/switch.ml[784,22071+8]..[784,22071+17])
                                      Ppat_var "get_index" (lambda/switch.ml[784,22071+8]..[784,22071+17])
                                    expression (lambda/switch.ml[784,22071+18]..[795,22321+11]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/switch.ml[784,22071+18]..[784,22071+21])
                                        Ppat_var "act" (lambda/switch.ml[784,22071+18]..[784,22071+21])
                                      expression (lambda/switch.ml[785,22095+6]..[795,22321+11])
                                        Pexp_try
                                        expression (lambda/switch.ml[786,22105+8]..[787,22145+9])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/switch.ml[786,22105+12]..[786,22105+15])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/switch.ml[786,22105+12]..[786,22105+13])
                                                    Ppat_var "i" (lambda/switch.ml[786,22105+12]..[786,22105+13])
                                                  pattern (lambda/switch.ml[786,22105+14]..[786,22105+15])
                                                    Ppat_any
                                                ]
                                              expression (lambda/switch.ml[786,22105+18]..[786,22105+36])
                                                Pexp_apply
                                                expression (lambda/switch.ml[786,22105+18]..[786,22105+30])
                                                  Pexp_ident "Hashtbl.find" (lambda/switch.ml[786,22105+18]..[786,22105+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[786,22105+31]..[786,22105+32])
                                                      Pexp_ident "t" (lambda/switch.ml[786,22105+31]..[786,22105+32])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[786,22105+33]..[786,22105+36])
                                                      Pexp_ident "act" (lambda/switch.ml[786,22105+33]..[786,22105+36])
                                                ]
                                          ]
                                          expression (lambda/switch.ml[787,22145+8]..[787,22145+9])
                                            Pexp_ident "i" (lambda/switch.ml[787,22145+8]..[787,22145+9])
                                        [
                                          <case>
                                            pattern (lambda/switch.ml[789,22166+8]..[789,22166+17])
                                              Ppat_construct "Not_found" (lambda/switch.ml[789,22166+8]..[789,22166+17])
                                              None
                                            expression (lambda/switch.ml[790,22187+10]..[795,22321+11])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lambda/switch.ml[790,22187+14]..[790,22187+15])
                                                    Ppat_var "i" (lambda/switch.ml[790,22187+14]..[790,22187+15])
                                                  expression (lambda/switch.ml[790,22187+18]..[790,22187+24])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[790,22187+18]..[790,22187+19])
                                                      Pexp_ident "!" (lambda/switch.ml[790,22187+18]..[790,22187+19])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[790,22187+19]..[790,22187+24])
                                                          Pexp_ident "index" (lambda/switch.ml[790,22187+19]..[790,22187+24])
                                                    ]
                                              ]
                                              expression (lambda/switch.ml[791,22215+10]..[795,22321+11])
                                                Pexp_sequence
                                                expression (lambda/switch.ml[791,22215+10]..[791,22215+20])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[791,22215+10]..[791,22215+14])
                                                    Pexp_ident "incr" (lambda/switch.ml[791,22215+10]..[791,22215+14])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[791,22215+15]..[791,22215+20])
                                                        Pexp_ident "index" (lambda/switch.ml[791,22215+15]..[791,22215+20])
                                                  ]
                                                expression (lambda/switch.ml[792,22238+10]..[795,22321+11])
                                                  Pexp_sequence
                                                  expression (lambda/switch.ml[792,22238+10]..[794,22278+40])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[792,22238+10]..[792,22238+21])
                                                      Pexp_ident "Hashtbl.add" (lambda/switch.ml[792,22238+10]..[792,22238+21])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[793,22260+12]..[793,22260+13])
                                                          Pexp_ident "t" (lambda/switch.ml[793,22260+12]..[793,22260+13])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[793,22260+14]..[793,22260+17])
                                                          Pexp_ident "act" (lambda/switch.ml[793,22260+14]..[793,22260+17])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[794,22278+12]..[794,22278+40])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/switch.ml[794,22278+13]..[794,22278+14])
                                                              Pexp_ident "i" (lambda/switch.ml[794,22278+13]..[794,22278+14])
                                                            expression (lambda/switch.ml[794,22278+15]..[794,22278+39])
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (lambda/switch.ml[794,22278+20]..[794,22278+21])
                                                                Ppat_any
                                                              expression (lambda/switch.ml[794,22278+25]..[794,22278+38])
                                                                Pexp_apply
                                                                expression (lambda/switch.ml[794,22278+25]..[794,22278+38]) ghost
                                                                  Pexp_ident "Array.get" (lambda/switch.ml[794,22278+25]..[794,22278+38]) ghost
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/switch.ml[794,22278+25]..[794,22278+32])
                                                                      Pexp_ident "actions" (lambda/switch.ml[794,22278+25]..[794,22278+32])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/switch.ml[794,22278+34]..[794,22278+37])
                                                                      Pexp_ident "act" (lambda/switch.ml[794,22278+34]..[794,22278+37])
                                                                ]
                                                          ]
                                                    ]
                                                  expression (lambda/switch.ml[795,22321+10]..[795,22321+11])
                                                    Pexp_ident "i" (lambda/switch.ml[795,22321+10]..[795,22321+11])
                                        ]
                                  <def>
                                    pattern (lambda/switch.ml[796,22333+8]..[796,22333+17])
                                      Ppat_var "add_index" (lambda/switch.ml[796,22333+8]..[796,22333+17])
                                    expression (lambda/switch.ml[796,22333+18]..[801,22456+7]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/switch.ml[796,22333+18]..[796,22333+21])
                                        Ppat_var "act" (lambda/switch.ml[796,22333+18]..[796,22333+21])
                                      expression (lambda/switch.ml[797,22357+6]..[801,22456+7])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/switch.ml[797,22357+10]..[797,22357+11])
                                              Ppat_var "i" (lambda/switch.ml[797,22357+10]..[797,22357+11])
                                            expression (lambda/switch.ml[797,22357+14]..[797,22357+20])
                                              Pexp_apply
                                              expression (lambda/switch.ml[797,22357+14]..[797,22357+15])
                                                Pexp_ident "!" (lambda/switch.ml[797,22357+14]..[797,22357+15])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[797,22357+15]..[797,22357+20])
                                                    Pexp_ident "index" (lambda/switch.ml[797,22357+15]..[797,22357+20])
                                              ]
                                        ]
                                        expression (lambda/switch.ml[798,22381+6]..[801,22456+7])
                                          Pexp_sequence
                                          expression (lambda/switch.ml[798,22381+6]..[798,22381+16])
                                            Pexp_apply
                                            expression (lambda/switch.ml[798,22381+6]..[798,22381+10])
                                              Pexp_ident "incr" (lambda/switch.ml[798,22381+6]..[798,22381+10])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[798,22381+11]..[798,22381+16])
                                                  Pexp_ident "index" (lambda/switch.ml[798,22381+11]..[798,22381+16])
                                            ]
                                          expression (lambda/switch.ml[799,22400+6]..[801,22456+7])
                                            Pexp_sequence
                                            expression (lambda/switch.ml[799,22400+6]..[799,22400+16])
                                              Pexp_apply
                                              expression (lambda/switch.ml[799,22400+6]..[799,22400+10])
                                                Pexp_ident "incr" (lambda/switch.ml[799,22400+6]..[799,22400+10])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[799,22400+11]..[799,22400+16])
                                                    Pexp_ident "bidon" (lambda/switch.ml[799,22400+11]..[799,22400+16])
                                              ]
                                            expression (lambda/switch.ml[800,22419+6]..[801,22456+7])
                                              Pexp_sequence
                                              expression (lambda/switch.ml[800,22419+6]..[800,22419+34])
                                                Pexp_apply
                                                expression (lambda/switch.ml[800,22419+6]..[800,22419+17])
                                                  Pexp_ident "Hashtbl.add" (lambda/switch.ml[800,22419+6]..[800,22419+17])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[800,22419+18]..[800,22419+19])
                                                      Pexp_ident "t" (lambda/switch.ml[800,22419+18]..[800,22419+19])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[800,22419+20]..[800,22419+26])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[800,22419+20]..[800,22419+21])
                                                        Pexp_ident "!" (lambda/switch.ml[800,22419+20]..[800,22419+21])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[800,22419+21]..[800,22419+26])
                                                            Pexp_ident "bidon" (lambda/switch.ml[800,22419+21]..[800,22419+26])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/switch.ml[800,22419+27]..[800,22419+34])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/switch.ml[800,22419+28]..[800,22419+29])
                                                          Pexp_ident "i" (lambda/switch.ml[800,22419+28]..[800,22419+29])
                                                        expression (lambda/switch.ml[800,22419+30]..[800,22419+33])
                                                          Pexp_ident "act" (lambda/switch.ml[800,22419+30]..[800,22419+33])
                                                      ]
                                                ]
                                              expression (lambda/switch.ml[801,22456+6]..[801,22456+7])
                                                Pexp_ident "i" (lambda/switch.ml[801,22456+6]..[801,22456+7])
                                ]
                                expression (lambda/switch.ml[803,22468+4]..[818,22979+32])
                                  Pexp_let Rec
                                  [
                                    <def>
                                      pattern (lambda/switch.ml[803,22468+12]..[803,22468+16])
                                        Ppat_var "zyva" (lambda/switch.ml[803,22468+12]..[803,22468+16])
                                      expression (lambda/switch.ml[803,22468+17]..[813,22787+37]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (lambda/switch.ml[803,22468+17]..[803,22468+18])
                                          Ppat_var "j" (lambda/switch.ml[803,22468+17]..[803,22468+18])
                                        expression (lambda/switch.ml[803,22468+19]..[813,22787+37]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (lambda/switch.ml[803,22468+19]..[803,22468+21])
                                            Ppat_var "ir" (lambda/switch.ml[803,22468+19]..[803,22468+21])
                                          expression (lambda/switch.ml[804,22492+6]..[813,22787+37])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/switch.ml[804,22492+10]..[804,22492+11])
                                                  Ppat_var "i" (lambda/switch.ml[804,22492+10]..[804,22492+11])
                                                expression (lambda/switch.ml[804,22492+14]..[804,22492+19])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[804,22492+14]..[804,22492+19]) ghost
                                                    Pexp_ident "Array.get" (lambda/switch.ml[804,22492+14]..[804,22492+19]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[804,22492+14]..[804,22492+15])
                                                        Pexp_ident "k" (lambda/switch.ml[804,22492+14]..[804,22492+15])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[804,22492+17]..[804,22492+18])
                                                        Pexp_ident "j" (lambda/switch.ml[804,22492+17]..[804,22492+18])
                                                  ]
                                            ]
                                            expression (lambda/switch.ml[805,22515+6]..[813,22787+37])
                                              Pexp_sequence
                                              expression (lambda/switch.ml[805,22515+6]..[812,22775+9])
                                                Pexp_ifthenelse
                                                expression (lambda/switch.ml[805,22515+15]..[805,22515+18])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[805,22515+16]..[805,22515+17])
                                                    Pexp_ident "=" (lambda/switch.ml[805,22515+16]..[805,22515+17])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[805,22515+15]..[805,22515+16])
                                                        Pexp_ident "i" (lambda/switch.ml[805,22515+15]..[805,22515+16])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[805,22515+17]..[805,22515+18])
                                                        Pexp_ident "j" (lambda/switch.ml[805,22515+17]..[805,22515+18])
                                                  ]
                                                expression (lambda/switch.ml[806,22539+10]..[807,22576+39])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lambda/switch.ml[806,22539+14]..[806,22539+21])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lambda/switch.ml[806,22539+14]..[806,22539+15])
                                                            Ppat_var "l" (lambda/switch.ml[806,22539+14]..[806,22539+15])
                                                          pattern (lambda/switch.ml[806,22539+16]..[806,22539+17])
                                                            Ppat_var "h" (lambda/switch.ml[806,22539+16]..[806,22539+17])
                                                          pattern (lambda/switch.ml[806,22539+18]..[806,22539+21])
                                                            Ppat_var "act" (lambda/switch.ml[806,22539+18]..[806,22539+21])
                                                        ]
                                                      expression (lambda/switch.ml[806,22539+24]..[806,22539+33])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[806,22539+24]..[806,22539+33]) ghost
                                                          Pexp_ident "Array.get" (lambda/switch.ml[806,22539+24]..[806,22539+33]) ghost
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[806,22539+24]..[806,22539+29])
                                                              Pexp_ident "cases" (lambda/switch.ml[806,22539+24]..[806,22539+29])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[806,22539+31]..[806,22539+32])
                                                              Pexp_ident "i" (lambda/switch.ml[806,22539+31]..[806,22539+32])
                                                        ]
                                                  ]
                                                  expression (lambda/switch.ml[807,22576+10]..[807,22576+39])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[807,22576+10]..[807,22576+39]) ghost
                                                      Pexp_ident "Array.set" (lambda/switch.ml[807,22576+10]..[807,22576+39]) ghost
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[807,22576+10]..[807,22576+11])
                                                          Pexp_ident "r" (lambda/switch.ml[807,22576+10]..[807,22576+11])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[807,22576+13]..[807,22576+15])
                                                          Pexp_ident "ir" (lambda/switch.ml[807,22576+13]..[807,22576+15])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[807,22576+20]..[807,22576+39])
                                                          Pexp_tuple
                                                          [
                                                            expression (lambda/switch.ml[807,22576+21]..[807,22576+22])
                                                              Pexp_ident "l" (lambda/switch.ml[807,22576+21]..[807,22576+22])
                                                            expression (lambda/switch.ml[807,22576+23]..[807,22576+24])
                                                              Pexp_ident "h" (lambda/switch.ml[807,22576+23]..[807,22576+24])
                                                            expression (lambda/switch.ml[807,22576+25]..[807,22576+38])
                                                              Pexp_apply
                                                              expression (lambda/switch.ml[807,22576+25]..[807,22576+34])
                                                                Pexp_ident "get_index" (lambda/switch.ml[807,22576+25]..[807,22576+34])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/switch.ml[807,22576+35]..[807,22576+38])
                                                                    Pexp_ident "act" (lambda/switch.ml[807,22576+35]..[807,22576+38])
                                                              ]
                                                          ]
                                                    ]
                                                Some
                                                  expression (lambda/switch.ml[809,22648+10]..[811,22715+59])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lambda/switch.ml[809,22648+14]..[809,22648+19])
                                                          Ppat_tuple
                                                          [
                                                            pattern (lambda/switch.ml[809,22648+14]..[809,22648+15])
                                                              Ppat_var "l" (lambda/switch.ml[809,22648+14]..[809,22648+15])
                                                            pattern (lambda/switch.ml[809,22648+16]..[809,22648+17])
                                                              Ppat_any
                                                            pattern (lambda/switch.ml[809,22648+18]..[809,22648+19])
                                                              Ppat_any
                                                          ]
                                                        expression (lambda/switch.ml[809,22648+22]..[809,22648+31])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[809,22648+22]..[809,22648+31]) ghost
                                                            Pexp_ident "Array.get" (lambda/switch.ml[809,22648+22]..[809,22648+31]) ghost
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[809,22648+22]..[809,22648+27])
                                                                Pexp_ident "cases" (lambda/switch.ml[809,22648+22]..[809,22648+27])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[809,22648+29]..[809,22648+30])
                                                                Pexp_ident "i" (lambda/switch.ml[809,22648+29]..[809,22648+30])
                                                          ]
                                                      <def>
                                                        pattern (lambda/switch.ml[810,22680+14]..[810,22680+19])
                                                          Ppat_tuple
                                                          [
                                                            pattern (lambda/switch.ml[810,22680+14]..[810,22680+15])
                                                              Ppat_any
                                                            pattern (lambda/switch.ml[810,22680+16]..[810,22680+17])
                                                              Ppat_var "h" (lambda/switch.ml[810,22680+16]..[810,22680+17])
                                                            pattern (lambda/switch.ml[810,22680+18]..[810,22680+19])
                                                              Ppat_any
                                                          ]
                                                        expression (lambda/switch.ml[810,22680+22]..[810,22680+31])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[810,22680+22]..[810,22680+31]) ghost
                                                            Pexp_ident "Array.get" (lambda/switch.ml[810,22680+22]..[810,22680+31]) ghost
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[810,22680+22]..[810,22680+27])
                                                                Pexp_ident "cases" (lambda/switch.ml[810,22680+22]..[810,22680+27])
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[810,22680+29]..[810,22680+30])
                                                                Pexp_ident "j" (lambda/switch.ml[810,22680+29]..[810,22680+30])
                                                          ]
                                                    ]
                                                    expression (lambda/switch.ml[811,22715+10]..[811,22715+59])
                                                      Pexp_apply
                                                      expression (lambda/switch.ml[811,22715+10]..[811,22715+59]) ghost
                                                        Pexp_ident "Array.set" (lambda/switch.ml[811,22715+10]..[811,22715+59]) ghost
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[811,22715+10]..[811,22715+11])
                                                            Pexp_ident "r" (lambda/switch.ml[811,22715+10]..[811,22715+11])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[811,22715+13]..[811,22715+15])
                                                            Pexp_ident "ir" (lambda/switch.ml[811,22715+13]..[811,22715+15])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/switch.ml[811,22715+20]..[811,22715+59])
                                                            Pexp_tuple
                                                            [
                                                              expression (lambda/switch.ml[811,22715+21]..[811,22715+22])
                                                                Pexp_ident "l" (lambda/switch.ml[811,22715+21]..[811,22715+22])
                                                              expression (lambda/switch.ml[811,22715+23]..[811,22715+24])
                                                                Pexp_ident "h" (lambda/switch.ml[811,22715+23]..[811,22715+24])
                                                              expression (lambda/switch.ml[811,22715+25]..[811,22715+58])
                                                                Pexp_apply
                                                                expression (lambda/switch.ml[811,22715+25]..[811,22715+34])
                                                                  Pexp_ident "add_index" (lambda/switch.ml[811,22715+25]..[811,22715+34])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/switch.ml[811,22715+35]..[811,22715+58])
                                                                      Pexp_apply
                                                                      expression (lambda/switch.ml[811,22715+36]..[811,22715+47])
Pexp_ident "make_switch" (lambda/switch.ml[811,22715+36]..[811,22715+47])
                                                                      [
<arg>
Nolabel
  expression (lambda/switch.ml[811,22715+48]..[811,22715+51])
    Pexp_ident "loc" (lambda/switch.ml[811,22715+48]..[811,22715+51])
<arg>
Nolabel
  expression (lambda/switch.ml[811,22715+52]..[811,22715+53])
    Pexp_ident "s" (lambda/switch.ml[811,22715+52]..[811,22715+53])
<arg>
Nolabel
  expression (lambda/switch.ml[811,22715+54]..[811,22715+55])
    Pexp_ident "i" (lambda/switch.ml[811,22715+54]..[811,22715+55])
<arg>
Nolabel
  expression (lambda/switch.ml[811,22715+56]..[811,22715+57])
    Pexp_ident "j" (lambda/switch.ml[811,22715+56]..[811,22715+57])
                                                                      ]
                                                                ]
                                                            ]
                                                      ]
                                              expression (lambda/switch.ml[813,22787+6]..[813,22787+37])
                                                Pexp_ifthenelse
                                                expression (lambda/switch.ml[813,22787+9]..[813,22787+14])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[813,22787+11]..[813,22787+12])
                                                    Pexp_ident ">" (lambda/switch.ml[813,22787+11]..[813,22787+12])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[813,22787+9]..[813,22787+10])
                                                        Pexp_ident "i" (lambda/switch.ml[813,22787+9]..[813,22787+10])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[813,22787+13]..[813,22787+14])
                                                        Pexp_constant PConst_int (0,None)
                                                  ]
                                                expression (lambda/switch.ml[813,22787+20]..[813,22787+37])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[813,22787+20]..[813,22787+24])
                                                    Pexp_ident "zyva" (lambda/switch.ml[813,22787+20]..[813,22787+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[813,22787+25]..[813,22787+30])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[813,22787+27]..[813,22787+28])
                                                          Pexp_ident "-" (lambda/switch.ml[813,22787+27]..[813,22787+28])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[813,22787+26]..[813,22787+27])
                                                              Pexp_ident "i" (lambda/switch.ml[813,22787+26]..[813,22787+27])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[813,22787+28]..[813,22787+29])
                                                              Pexp_constant PConst_int (1,None)
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[813,22787+31]..[813,22787+37])
                                                        Pexp_apply
                                                        expression (lambda/switch.ml[813,22787+34]..[813,22787+35])
                                                          Pexp_ident "-" (lambda/switch.ml[813,22787+34]..[813,22787+35])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[813,22787+32]..[813,22787+34])
                                                              Pexp_ident "ir" (lambda/switch.ml[813,22787+32]..[813,22787+34])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/switch.ml[813,22787+35]..[813,22787+36])
                                                              Pexp_constant PConst_int (1,None)
                                                        ]
                                                  ]
                                                None
                                  ]
                                  expression (lambda/switch.ml[815,22829+4]..[818,22979+32])
                                    Pexp_sequence
                                    expression (lambda/switch.ml[815,22829+4]..[815,22829+31])
                                      Pexp_apply
                                      expression (lambda/switch.ml[815,22829+4]..[815,22829+8])
                                        Pexp_ident "zyva" (lambda/switch.ml[815,22829+4]..[815,22829+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[815,22829+9]..[815,22829+16])
                                            Pexp_apply
                                            expression (lambda/switch.ml[815,22829+13]..[815,22829+14])
                                              Pexp_ident "-" (lambda/switch.ml[815,22829+13]..[815,22829+14])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[815,22829+10]..[815,22829+13])
                                                  Pexp_ident "len" (lambda/switch.ml[815,22829+10]..[815,22829+13])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[815,22829+14]..[815,22829+15])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[815,22829+17]..[815,22829+31])
                                            Pexp_apply
                                            expression (lambda/switch.ml[815,22829+28]..[815,22829+29])
                                              Pexp_ident "-" (lambda/switch.ml[815,22829+28]..[815,22829+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[815,22829+18]..[815,22829+28])
                                                  Pexp_ident "n_clusters" (lambda/switch.ml[815,22829+18]..[815,22829+28])
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[815,22829+29]..[815,22829+30])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                    expression (lambda/switch.ml[816,22863+4]..[818,22979+32])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/switch.ml[816,22863+8]..[816,22863+12])
                                            Ppat_var "acts" (lambda/switch.ml[816,22863+8]..[816,22863+12])
                                          expression (lambda/switch.ml[816,22863+15]..[816,22863+56])
                                            Pexp_apply
                                            expression (lambda/switch.ml[816,22863+15]..[816,22863+25])
                                              Pexp_ident "Array.make" (lambda/switch.ml[816,22863+15]..[816,22863+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[816,22863+26]..[816,22863+32])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[816,22863+26]..[816,22863+27])
                                                    Pexp_ident "!" (lambda/switch.ml[816,22863+26]..[816,22863+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[816,22863+27]..[816,22863+32])
                                                        Pexp_ident "index" (lambda/switch.ml[816,22863+27]..[816,22863+32])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[816,22863+33]..[816,22863+56])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lambda/switch.ml[816,22863+38]..[816,22863+39])
                                                    Ppat_any
                                                  expression (lambda/switch.ml[816,22863+43]..[816,22863+55])
                                                    Pexp_assert
                                                    expression (lambda/switch.ml[816,22863+50]..[816,22863+55])
                                                      Pexp_construct "false" (lambda/switch.ml[816,22863+50]..[816,22863+55])
                                                      None
                                            ]
                                      ]
                                      expression (lambda/switch.ml[817,22923+4]..[818,22979+32])
                                        Pexp_sequence
                                        expression (lambda/switch.ml[817,22923+4]..[817,22923+53])
                                          Pexp_apply
                                          expression (lambda/switch.ml[817,22923+4]..[817,22923+16])
                                            Pexp_ident "Hashtbl.iter" (lambda/switch.ml[817,22923+4]..[817,22923+16])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[817,22923+17]..[817,22923+51])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (lambda/switch.ml[817,22923+22]..[817,22923+23])
                                                  Ppat_any
                                                expression (lambda/switch.ml[817,22923+24]..[817,22923+50]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lambda/switch.ml[817,22923+24]..[817,22923+31])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/switch.ml[817,22923+25]..[817,22923+26])
                                                        Ppat_var "i" (lambda/switch.ml[817,22923+25]..[817,22923+26])
                                                      pattern (lambda/switch.ml[817,22923+27]..[817,22923+30])
                                                        Ppat_var "act" (lambda/switch.ml[817,22923+27]..[817,22923+30])
                                                    ]
                                                  expression (lambda/switch.ml[817,22923+35]..[817,22923+50])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[817,22923+35]..[817,22923+50]) ghost
                                                      Pexp_ident "Array.set" (lambda/switch.ml[817,22923+35]..[817,22923+50]) ghost
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[817,22923+35]..[817,22923+39])
                                                          Pexp_ident "acts" (lambda/switch.ml[817,22923+35]..[817,22923+39])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[817,22923+41]..[817,22923+42])
                                                          Pexp_ident "i" (lambda/switch.ml[817,22923+41]..[817,22923+42])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[817,22923+47]..[817,22923+50])
                                                          Pexp_ident "act" (lambda/switch.ml[817,22923+47]..[817,22923+50])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[817,22923+52]..[817,22923+53])
                                                Pexp_ident "t" (lambda/switch.ml[817,22923+52]..[817,22923+53])
                                          ]
                                        expression (lambda/switch.ml[818,22979+4]..[818,22979+32])
                                          Pexp_record
                                          [
                                            "cases" (lambda/switch.ml[818,22979+5]..[818,22979+10])
                                              expression (lambda/switch.ml[818,22979+13]..[818,22979+14])
                                                Pexp_ident "r" (lambda/switch.ml[818,22979+13]..[818,22979+14])
                                            "actions" (lambda/switch.ml[818,22979+17]..[818,22979+24])
                                              expression (lambda/switch.ml[818,22979+27]..[818,22979+31])
                                                Pexp_ident "acts" (lambda/switch.ml[818,22979+27]..[818,22979+31])
                                          ]
                                          None
              ]
            structure_item (lambda/switch.ml[822,23019+2]..[836,23483+37])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[822,23019+6]..[822,23019+13])
                    Ppat_var "do_zyva" (lambda/switch.ml[822,23019+6]..[822,23019+13])
                  expression (lambda/switch.ml[822,23019+14]..[836,23483+37]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[822,23019+14]..[822,23019+17])
                      Ppat_var "loc" (lambda/switch.ml[822,23019+14]..[822,23019+17])
                    expression (lambda/switch.ml[822,23019+18]..[836,23483+37]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[822,23019+18]..[822,23019+28])
                        Ppat_tuple
                        [
                          pattern (lambda/switch.ml[822,23019+19]..[822,23019+22])
                            Ppat_var "low" (lambda/switch.ml[822,23019+19]..[822,23019+22])
                          pattern (lambda/switch.ml[822,23019+23]..[822,23019+27])
                            Ppat_var "high" (lambda/switch.ml[822,23019+23]..[822,23019+27])
                        ]
                      expression (lambda/switch.ml[822,23019+29]..[836,23483+37]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[822,23019+29]..[822,23019+32])
                          Ppat_var "arg" (lambda/switch.ml[822,23019+29]..[822,23019+32])
                        expression (lambda/switch.ml[822,23019+33]..[836,23483+37]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/switch.ml[822,23019+33]..[822,23019+38])
                            Ppat_var "cases" (lambda/switch.ml[822,23019+33]..[822,23019+38])
                          expression (lambda/switch.ml[822,23019+39]..[836,23483+37]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/switch.ml[822,23019+39]..[822,23019+46])
                              Ppat_var "actions" (lambda/switch.ml[822,23019+39]..[822,23019+46])
                            expression (lambda/switch.ml[823,23068+4]..[836,23483+37])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/switch.ml[823,23068+8]..[823,23068+14])
                                    Ppat_var "old_ok" (lambda/switch.ml[823,23068+8]..[823,23068+14])
                                  expression (lambda/switch.ml[823,23068+17]..[823,23068+26])
                                    Pexp_apply
                                    expression (lambda/switch.ml[823,23068+17]..[823,23068+18])
                                      Pexp_ident "!" (lambda/switch.ml[823,23068+17]..[823,23068+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[823,23068+18]..[823,23068+26])
                                          Pexp_ident "ok_inter" (lambda/switch.ml[823,23068+18]..[823,23068+26])
                                    ]
                              ]
                              expression (lambda/switch.ml[824,23098+4]..[836,23483+37])
                                Pexp_sequence
                                expression (lambda/switch.ml[824,23098+4]..[824,23098+67])
                                  Pexp_apply
                                  expression (lambda/switch.ml[824,23098+13]..[824,23098+15])
                                    Pexp_ident ":=" (lambda/switch.ml[824,23098+13]..[824,23098+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[824,23098+4]..[824,23098+12])
                                        Pexp_ident "ok_inter" (lambda/switch.ml[824,23098+4]..[824,23098+12])
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[824,23098+16]..[824,23098+67])
                                        Pexp_apply
                                        expression (lambda/switch.ml[824,23098+40]..[824,23098+42])
                                          Pexp_ident "&&" (lambda/switch.ml[824,23098+40]..[824,23098+42])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[824,23098+17]..[824,23098+39])
                                              Pexp_apply
                                              expression (lambda/switch.ml[824,23098+25]..[824,23098+27])
                                                Pexp_ident "<=" (lambda/switch.ml[824,23098+25]..[824,23098+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[824,23098+17]..[824,23098+24])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[824,23098+17]..[824,23098+20])
                                                      Pexp_ident "abs" (lambda/switch.ml[824,23098+17]..[824,23098+20])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[824,23098+21]..[824,23098+24])
                                                          Pexp_ident "low" (lambda/switch.ml[824,23098+21]..[824,23098+24])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[824,23098+28]..[824,23098+39])
                                                    Pexp_ident "inter_limit" (lambda/switch.ml[824,23098+28]..[824,23098+39])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[824,23098+43]..[824,23098+66])
                                              Pexp_apply
                                              expression (lambda/switch.ml[824,23098+52]..[824,23098+54])
                                                Pexp_ident "<=" (lambda/switch.ml[824,23098+52]..[824,23098+54])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[824,23098+43]..[824,23098+51])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[824,23098+43]..[824,23098+46])
                                                      Pexp_ident "abs" (lambda/switch.ml[824,23098+43]..[824,23098+46])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[824,23098+47]..[824,23098+51])
                                                          Pexp_ident "high" (lambda/switch.ml[824,23098+47]..[824,23098+51])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[824,23098+55]..[824,23098+66])
                                                    Pexp_ident "inter_limit" (lambda/switch.ml[824,23098+55]..[824,23098+66])
                                              ]
                                        ]
                                  ]
                                expression (lambda/switch.ml[825,23168+4]..[836,23483+37])
                                  Pexp_sequence
                                  expression (lambda/switch.ml[825,23168+4]..[825,23168+47])
                                    Pexp_ifthenelse
                                    expression (lambda/switch.ml[825,23168+7]..[825,23168+26])
                                      Pexp_apply
                                      expression (lambda/switch.ml[825,23168+17]..[825,23168+19])
                                        Pexp_ident "<>" (lambda/switch.ml[825,23168+17]..[825,23168+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[825,23168+7]..[825,23168+16])
                                            Pexp_apply
                                            expression (lambda/switch.ml[825,23168+7]..[825,23168+8])
                                              Pexp_ident "!" (lambda/switch.ml[825,23168+7]..[825,23168+8])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[825,23168+8]..[825,23168+16])
                                                  Pexp_ident "ok_inter" (lambda/switch.ml[825,23168+8]..[825,23168+16])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[825,23168+20]..[825,23168+26])
                                            Pexp_ident "old_ok" (lambda/switch.ml[825,23168+20]..[825,23168+26])
                                      ]
                                    expression (lambda/switch.ml[825,23168+32]..[825,23168+47])
                                      Pexp_apply
                                      expression (lambda/switch.ml[825,23168+32]..[825,23168+45])
                                        Pexp_ident "Hashtbl.clear" (lambda/switch.ml[825,23168+32]..[825,23168+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[825,23168+46]..[825,23168+47])
                                            Pexp_ident "t" (lambda/switch.ml[825,23168+46]..[825,23168+47])
                                      ]
                                    None
                                  expression (lambda/switch.ml[827,23219+4]..[836,23483+37])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/switch.ml[827,23219+8]..[827,23219+9])
                                          Ppat_var "s" (lambda/switch.ml[827,23219+8]..[827,23219+9])
                                        expression (lambda/switch.ml[827,23219+12]..[827,23219+43])
                                          Pexp_record
                                          [
                                            "cases" (lambda/switch.ml[827,23219+13]..[827,23219+18])
                                              expression (lambda/switch.ml[827,23219+19]..[827,23219+24])
                                                Pexp_ident "cases" (lambda/switch.ml[827,23219+19]..[827,23219+24])
                                            "actions" (lambda/switch.ml[827,23219+27]..[827,23219+34])
                                              expression (lambda/switch.ml[827,23219+35]..[827,23219+42])
                                                Pexp_ident "actions" (lambda/switch.ml[827,23219+35]..[827,23219+42])
                                          ]
                                          None
                                    ]
                                    expression (lambda/switch.ml[834,23386+4]..[836,23483+37])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/switch.ml[834,23386+8]..[834,23386+20])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/switch.ml[834,23386+8]..[834,23386+18])
                                                Ppat_var "n_clusters" (lambda/switch.ml[834,23386+8]..[834,23386+18])
                                              pattern (lambda/switch.ml[834,23386+19]..[834,23386+20])
                                                Ppat_var "k" (lambda/switch.ml[834,23386+19]..[834,23386+20])
                                            ]
                                          expression (lambda/switch.ml[834,23386+23]..[834,23386+38])
                                            Pexp_apply
                                            expression (lambda/switch.ml[834,23386+23]..[834,23386+36])
                                              Pexp_ident "comp_clusters" (lambda/switch.ml[834,23386+23]..[834,23386+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/switch.ml[834,23386+37]..[834,23386+38])
                                                  Pexp_ident "s" (lambda/switch.ml[834,23386+37]..[834,23386+38])
                                            ]
                                      ]
                                      expression (lambda/switch.ml[835,23428+4]..[836,23483+37])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/switch.ml[835,23428+8]..[835,23428+16])
                                              Ppat_var "clusters" (lambda/switch.ml[835,23428+8]..[835,23428+16])
                                            expression (lambda/switch.ml[835,23428+19]..[835,23428+51])
                                              Pexp_apply
                                              expression (lambda/switch.ml[835,23428+19]..[835,23428+32])
                                                Pexp_ident "make_clusters" (lambda/switch.ml[835,23428+19]..[835,23428+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[835,23428+33]..[835,23428+36])
                                                    Pexp_ident "loc" (lambda/switch.ml[835,23428+33]..[835,23428+36])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[835,23428+37]..[835,23428+38])
                                                    Pexp_ident "s" (lambda/switch.ml[835,23428+37]..[835,23428+38])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[835,23428+39]..[835,23428+49])
                                                    Pexp_ident "n_clusters" (lambda/switch.ml[835,23428+39]..[835,23428+49])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[835,23428+50]..[835,23428+51])
                                                    Pexp_ident "k" (lambda/switch.ml[835,23428+50]..[835,23428+51])
                                              ]
                                        ]
                                        expression (lambda/switch.ml[836,23483+4]..[836,23483+37])
                                          Pexp_apply
                                          expression (lambda/switch.ml[836,23483+4]..[836,23483+10])
                                            Pexp_ident "c_test" (lambda/switch.ml[836,23483+4]..[836,23483+10])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[836,23483+11]..[836,23483+28])
                                                Pexp_record
                                                [
                                                  "arg" (lambda/switch.ml[836,23483+12]..[836,23483+15])
                                                    expression (lambda/switch.ml[836,23483+16]..[836,23483+19])
                                                      Pexp_ident "arg" (lambda/switch.ml[836,23483+16]..[836,23483+19])
                                                  "off" (lambda/switch.ml[836,23483+22]..[836,23483+25])
                                                    expression (lambda/switch.ml[836,23483+26]..[836,23483+27])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                                None
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[836,23483+29]..[836,23483+37])
                                                Pexp_ident "clusters" (lambda/switch.ml[836,23483+29]..[836,23483+37])
                                          ]
              ]
            structure_item (lambda/switch.ml[838,23522+2]..[850,23909+21])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[838,23522+6]..[838,23522+21])
                    Ppat_var "abstract_shared" (lambda/switch.ml[838,23522+6]..[838,23522+21])
                  expression (lambda/switch.ml[838,23522+22]..[850,23909+21]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[838,23522+22]..[838,23522+29])
                      Ppat_var "actions" (lambda/switch.ml[838,23522+22]..[838,23522+29])
                    expression (lambda/switch.ml[839,23554+4]..[850,23909+21])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/switch.ml[839,23554+8]..[839,23554+16])
                            Ppat_var "handlers" (lambda/switch.ml[839,23554+8]..[839,23554+16])
                          expression (lambda/switch.ml[839,23554+19]..[839,23554+35])
                            Pexp_apply
                            expression (lambda/switch.ml[839,23554+19]..[839,23554+22])
                              Pexp_ident "ref" (lambda/switch.ml[839,23554+19]..[839,23554+22])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/switch.ml[839,23554+23]..[839,23554+35])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (lambda/switch.ml[839,23554+28]..[839,23554+29])
                                    Ppat_var "x" (lambda/switch.ml[839,23554+28]..[839,23554+29])
                                  expression (lambda/switch.ml[839,23554+33]..[839,23554+34])
                                    Pexp_ident "x" (lambda/switch.ml[839,23554+33]..[839,23554+34])
                            ]
                      ]
                      expression (lambda/switch.ml[840,23593+4]..[850,23909+21])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lambda/switch.ml[840,23593+8]..[840,23593+15])
                              Ppat_var "actions" (lambda/switch.ml[840,23593+8]..[840,23593+15])
                            expression (lambda/switch.ml[841,23611+6]..[849,23890+15])
                              Pexp_apply
                              expression (lambda/switch.ml[841,23611+6]..[841,23611+15])
                                Pexp_ident "Array.map" (lambda/switch.ml[841,23611+6]..[841,23611+15])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[842,23627+8]..[848,23858+31])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lambda/switch.ml[842,23627+13]..[842,23627+16])
                                      Ppat_var "act" (lambda/switch.ml[842,23627+13]..[842,23627+16])
                                    expression (lambda/switch.ml[842,23627+20]..[848,23858+30])
                                      Pexp_match
                                      expression (lambda/switch.ml[842,23627+27]..[842,23627+30])
                                        Pexp_ident "act" (lambda/switch.ml[842,23627+27]..[842,23627+30])
                                      [
                                        <case>
                                          pattern (lambda/switch.ml[843,23663+13]..[843,23663+23])
                                            Ppat_construct "Single" (lambda/switch.ml[843,23663+13]..[843,23663+19])
                                            Some
                                              []
                                              pattern (lambda/switch.ml[843,23663+20]..[843,23663+23])
                                                Ppat_var "act" (lambda/switch.ml[843,23663+20]..[843,23663+23])
                                          expression (lambda/switch.ml[843,23663+27]..[843,23663+30])
                                            Pexp_ident "act" (lambda/switch.ml[843,23663+27]..[843,23663+30])
                                        <case>
                                          pattern (lambda/switch.ml[844,23694+13]..[844,23694+23])
                                            Ppat_construct "Shared" (lambda/switch.ml[844,23694+13]..[844,23694+19])
                                            Some
                                              []
                                              pattern (lambda/switch.ml[844,23694+20]..[844,23694+23])
                                                Ppat_var "act" (lambda/switch.ml[844,23694+20]..[844,23694+23])
                                          expression (lambda/switch.ml[845,23721+15]..[848,23858+30])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/switch.ml[845,23721+19]..[845,23721+22])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lambda/switch.ml[845,23721+19]..[845,23721+20])
                                                      Ppat_var "i" (lambda/switch.ml[845,23721+19]..[845,23721+20])
                                                    pattern (lambda/switch.ml[845,23721+21]..[845,23721+22])
                                                      Ppat_var "h" (lambda/switch.ml[845,23721+21]..[845,23721+22])
                                                  ]
                                                expression (lambda/switch.ml[845,23721+25]..[845,23721+43])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[845,23721+25]..[845,23721+39])
                                                    Pexp_ident "Arg.make_catch" (lambda/switch.ml[845,23721+25]..[845,23721+39])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[845,23721+40]..[845,23721+43])
                                                        Pexp_ident "act" (lambda/switch.ml[845,23721+40]..[845,23721+43])
                                                  ]
                                            ]
                                            expression (lambda/switch.ml[846,23768+15]..[848,23858+30])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lambda/switch.ml[846,23768+19]..[846,23768+21])
                                                    Ppat_var "oh" (lambda/switch.ml[846,23768+19]..[846,23768+21])
                                                  expression (lambda/switch.ml[846,23768+24]..[846,23768+33])
                                                    Pexp_apply
                                                    expression (lambda/switch.ml[846,23768+24]..[846,23768+25])
                                                      Pexp_ident "!" (lambda/switch.ml[846,23768+24]..[846,23768+25])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/switch.ml[846,23768+25]..[846,23768+33])
                                                          Pexp_ident "handlers" (lambda/switch.ml[846,23768+25]..[846,23768+33])
                                                    ]
                                              ]
                                              expression (lambda/switch.ml[847,23805+15]..[848,23858+30])
                                                Pexp_sequence
                                                expression (lambda/switch.ml[847,23805+15]..[847,23805+50])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[847,23805+24]..[847,23805+26])
                                                    Pexp_ident ":=" (lambda/switch.ml[847,23805+24]..[847,23805+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[847,23805+15]..[847,23805+23])
                                                        Pexp_ident "handlers" (lambda/switch.ml[847,23805+15]..[847,23805+23])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[847,23805+27]..[847,23805+50])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (lambda/switch.ml[847,23805+32]..[847,23805+35])
                                                          Ppat_var "act" (lambda/switch.ml[847,23805+32]..[847,23805+35])
                                                        expression (lambda/switch.ml[847,23805+39]..[847,23805+49])
                                                          Pexp_apply
                                                          expression (lambda/switch.ml[847,23805+39]..[847,23805+40])
                                                            Pexp_ident "h" (lambda/switch.ml[847,23805+39]..[847,23805+40])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lambda/switch.ml[847,23805+41]..[847,23805+49])
                                                                Pexp_apply
                                                                expression (lambda/switch.ml[847,23805+42]..[847,23805+44])
                                                                  Pexp_ident "oh" (lambda/switch.ml[847,23805+42]..[847,23805+44])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/switch.ml[847,23805+45]..[847,23805+48])
                                                                      Pexp_ident "act" (lambda/switch.ml[847,23805+45]..[847,23805+48])
                                                                ]
                                                          ]
                                                  ]
                                                expression (lambda/switch.ml[848,23858+15]..[848,23858+30])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[848,23858+15]..[848,23858+28])
                                                    Pexp_ident "Arg.make_exit" (lambda/switch.ml[848,23858+15]..[848,23858+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[848,23858+29]..[848,23858+30])
                                                        Pexp_ident "i" (lambda/switch.ml[848,23858+29]..[848,23858+30])
                                                  ]
                                      ]
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[849,23890+8]..[849,23890+15])
                                    Pexp_ident "actions" (lambda/switch.ml[849,23890+8]..[849,23890+15])
                              ]
                        ]
                        expression (lambda/switch.ml[850,23909+4]..[850,23909+21])
                          Pexp_tuple
                          [
                            expression (lambda/switch.ml[850,23909+4]..[850,23909+13])
                              Pexp_apply
                              expression (lambda/switch.ml[850,23909+4]..[850,23909+5])
                                Pexp_ident "!" (lambda/switch.ml[850,23909+4]..[850,23909+5])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[850,23909+5]..[850,23909+13])
                                    Pexp_ident "handlers" (lambda/switch.ml[850,23909+5]..[850,23909+13])
                              ]
                            expression (lambda/switch.ml[850,23909+14]..[850,23909+21])
                              Pexp_ident "actions" (lambda/switch.ml[850,23909+14]..[850,23909+21])
                          ]
              ]
            structure_item (lambda/switch.ml[852,23932+2]..[873,24618+35])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lambda/switch.ml[852,23932+6]..[852,23932+10])
                    Ppat_var "zyva" (lambda/switch.ml[852,23932+6]..[852,23932+10])
                  expression (lambda/switch.ml[852,23932+11]..[856,24103+41]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[852,23932+11]..[852,23932+14])
                      Ppat_var "loc" (lambda/switch.ml[852,23932+11]..[852,23932+14])
                    expression (lambda/switch.ml[852,23932+15]..[856,24103+41]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[852,23932+15]..[852,23932+17])
                        Ppat_var "lh" (lambda/switch.ml[852,23932+15]..[852,23932+17])
                      expression (lambda/switch.ml[852,23932+18]..[856,24103+41]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[852,23932+18]..[852,23932+21])
                          Ppat_var "arg" (lambda/switch.ml[852,23932+18]..[852,23932+21])
                        expression (lambda/switch.ml[852,23932+22]..[856,24103+41]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/switch.ml[852,23932+22]..[852,23932+27])
                            Ppat_var "cases" (lambda/switch.ml[852,23932+22]..[852,23932+27])
                          expression (lambda/switch.ml[852,23932+28]..[856,24103+41]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/switch.ml[852,23932+28]..[852,23932+35])
                              Ppat_var "actions" (lambda/switch.ml[852,23932+28]..[852,23932+35])
                            expression (lambda/switch.ml[853,23970+4]..[856,24103+41])
                              Pexp_sequence
                              expression (lambda/switch.ml[853,23970+4]..[853,23970+35])
                                Pexp_assert
                                expression (lambda/switch.ml[853,23970+11]..[853,23970+35])
                                  Pexp_apply
                                  expression (lambda/switch.ml[853,23970+31]..[853,23970+32])
                                    Pexp_ident ">" (lambda/switch.ml[853,23970+31]..[853,23970+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[853,23970+12]..[853,23970+30])
                                        Pexp_apply
                                        expression (lambda/switch.ml[853,23970+12]..[853,23970+24])
                                          Pexp_ident "Array.length" (lambda/switch.ml[853,23970+12]..[853,23970+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[853,23970+25]..[853,23970+30])
                                              Pexp_ident "cases" (lambda/switch.ml[853,23970+25]..[853,23970+30])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[853,23970+33]..[853,23970+34])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                              expression (lambda/switch.ml[854,24008+4]..[856,24103+41])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/switch.ml[854,24008+8]..[854,24008+15])
                                      Ppat_var "actions" (lambda/switch.ml[854,24008+8]..[854,24008+15])
                                    expression (lambda/switch.ml[854,24008+18]..[854,24008+43])
                                      Pexp_apply
                                      expression (lambda/switch.ml[854,24008+18]..[854,24008+40])
                                        Pexp_field
                                        expression (lambda/switch.ml[854,24008+18]..[854,24008+25])
                                          Pexp_ident "actions" (lambda/switch.ml[854,24008+18]..[854,24008+25])
                                        "act_get_shared" (lambda/switch.ml[854,24008+26]..[854,24008+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[854,24008+41]..[854,24008+43])
                                            Pexp_construct "()" (lambda/switch.ml[854,24008+41]..[854,24008+43])
                                            None
                                      ]
                                ]
                                expression (lambda/switch.ml[855,24055+4]..[856,24103+41])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lambda/switch.ml[855,24055+8]..[855,24055+18])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/switch.ml[855,24055+8]..[855,24055+10])
                                            Ppat_var "hs" (lambda/switch.ml[855,24055+8]..[855,24055+10])
                                          pattern (lambda/switch.ml[855,24055+11]..[855,24055+18])
                                            Ppat_var "actions" (lambda/switch.ml[855,24055+11]..[855,24055+18])
                                        ]
                                      expression (lambda/switch.ml[855,24055+21]..[855,24055+44])
                                        Pexp_apply
                                        expression (lambda/switch.ml[855,24055+21]..[855,24055+36])
                                          Pexp_ident "abstract_shared" (lambda/switch.ml[855,24055+21]..[855,24055+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[855,24055+37]..[855,24055+44])
                                              Pexp_ident "actions" (lambda/switch.ml[855,24055+37]..[855,24055+44])
                                        ]
                                  ]
                                  expression (lambda/switch.ml[856,24103+4]..[856,24103+41])
                                    Pexp_apply
                                    expression (lambda/switch.ml[856,24103+4]..[856,24103+6])
                                      Pexp_ident "hs" (lambda/switch.ml[856,24103+4]..[856,24103+6])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[856,24103+7]..[856,24103+41])
                                          Pexp_apply
                                          expression (lambda/switch.ml[856,24103+8]..[856,24103+15])
                                            Pexp_ident "do_zyva" (lambda/switch.ml[856,24103+8]..[856,24103+15])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[856,24103+16]..[856,24103+19])
                                                Pexp_ident "loc" (lambda/switch.ml[856,24103+16]..[856,24103+19])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[856,24103+20]..[856,24103+22])
                                                Pexp_ident "lh" (lambda/switch.ml[856,24103+20]..[856,24103+22])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[856,24103+23]..[856,24103+26])
                                                Pexp_ident "arg" (lambda/switch.ml[856,24103+23]..[856,24103+26])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[856,24103+27]..[856,24103+32])
                                                Pexp_ident "cases" (lambda/switch.ml[856,24103+27]..[856,24103+32])
                                            <arg>
                                            Nolabel
                                              expression (lambda/switch.ml[856,24103+33]..[856,24103+40])
                                                Pexp_ident "actions" (lambda/switch.ml[856,24103+33]..[856,24103+40])
                                          ]
                                    ]
                <def>
                  pattern (lambda/switch.ml[858,24146+6]..[858,24146+19])
                    Ppat_var "test_sequence" (lambda/switch.ml[858,24146+6]..[858,24146+19])
                  expression (lambda/switch.ml[858,24146+20]..[873,24618+35]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/switch.ml[858,24146+20]..[858,24146+23])
                      Ppat_var "arg" (lambda/switch.ml[858,24146+20]..[858,24146+23])
                    expression (lambda/switch.ml[858,24146+24]..[873,24618+35]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/switch.ml[858,24146+24]..[858,24146+29])
                        Ppat_var "cases" (lambda/switch.ml[858,24146+24]..[858,24146+29])
                      expression (lambda/switch.ml[858,24146+30]..[873,24618+35]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/switch.ml[858,24146+30]..[858,24146+37])
                          Ppat_var "actions" (lambda/switch.ml[858,24146+30]..[858,24146+37])
                        expression (lambda/switch.ml[859,24186+4]..[873,24618+35])
                          Pexp_sequence
                          expression (lambda/switch.ml[859,24186+4]..[859,24186+35])
                            Pexp_assert
                            expression (lambda/switch.ml[859,24186+11]..[859,24186+35])
                              Pexp_apply
                              expression (lambda/switch.ml[859,24186+31]..[859,24186+32])
                                Pexp_ident ">" (lambda/switch.ml[859,24186+31]..[859,24186+32])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[859,24186+12]..[859,24186+30])
                                    Pexp_apply
                                    expression (lambda/switch.ml[859,24186+12]..[859,24186+24])
                                      Pexp_ident "Array.length" (lambda/switch.ml[859,24186+12]..[859,24186+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[859,24186+25]..[859,24186+30])
                                          Pexp_ident "cases" (lambda/switch.ml[859,24186+25]..[859,24186+30])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lambda/switch.ml[859,24186+33]..[859,24186+34])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          expression (lambda/switch.ml[860,24224+4]..[873,24618+35])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/switch.ml[860,24224+8]..[860,24224+15])
                                  Ppat_var "actions" (lambda/switch.ml[860,24224+8]..[860,24224+15])
                                expression (lambda/switch.ml[860,24224+18]..[860,24224+43])
                                  Pexp_apply
                                  expression (lambda/switch.ml[860,24224+18]..[860,24224+40])
                                    Pexp_field
                                    expression (lambda/switch.ml[860,24224+18]..[860,24224+25])
                                      Pexp_ident "actions" (lambda/switch.ml[860,24224+18]..[860,24224+25])
                                    "act_get_shared" (lambda/switch.ml[860,24224+26]..[860,24224+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/switch.ml[860,24224+41]..[860,24224+43])
                                        Pexp_construct "()" (lambda/switch.ml[860,24224+41]..[860,24224+43])
                                        None
                                  ]
                            ]
                            expression (lambda/switch.ml[861,24271+4]..[873,24618+35])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lambda/switch.ml[861,24271+8]..[861,24271+18])
                                    Ppat_tuple
                                    [
                                      pattern (lambda/switch.ml[861,24271+8]..[861,24271+10])
                                        Ppat_var "hs" (lambda/switch.ml[861,24271+8]..[861,24271+10])
                                      pattern (lambda/switch.ml[861,24271+11]..[861,24271+18])
                                        Ppat_var "actions" (lambda/switch.ml[861,24271+11]..[861,24271+18])
                                    ]
                                  expression (lambda/switch.ml[861,24271+21]..[861,24271+44])
                                    Pexp_apply
                                    expression (lambda/switch.ml[861,24271+21]..[861,24271+36])
                                      Pexp_ident "abstract_shared" (lambda/switch.ml[861,24271+21]..[861,24271+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[861,24271+37]..[861,24271+44])
                                          Pexp_ident "actions" (lambda/switch.ml[861,24271+37]..[861,24271+44])
                                    ]
                              ]
                              expression (lambda/switch.ml[862,24319+4]..[873,24618+35])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lambda/switch.ml[862,24319+8]..[862,24319+14])
                                      Ppat_var "old_ok" (lambda/switch.ml[862,24319+8]..[862,24319+14])
                                    expression (lambda/switch.ml[862,24319+17]..[862,24319+26])
                                      Pexp_apply
                                      expression (lambda/switch.ml[862,24319+17]..[862,24319+18])
                                        Pexp_ident "!" (lambda/switch.ml[862,24319+17]..[862,24319+18])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/switch.ml[862,24319+18]..[862,24319+26])
                                            Pexp_ident "ok_inter" (lambda/switch.ml[862,24319+18]..[862,24319+26])
                                      ]
                                ]
                                expression (lambda/switch.ml[863,24349+4]..[873,24618+35])
                                  Pexp_sequence
                                  expression (lambda/switch.ml[863,24349+4]..[863,24349+21])
                                    Pexp_apply
                                    expression (lambda/switch.ml[863,24349+13]..[863,24349+15])
                                      Pexp_ident ":=" (lambda/switch.ml[863,24349+13]..[863,24349+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[863,24349+4]..[863,24349+12])
                                          Pexp_ident "ok_inter" (lambda/switch.ml[863,24349+4]..[863,24349+12])
                                      <arg>
                                      Nolabel
                                        expression (lambda/switch.ml[863,24349+16]..[863,24349+21])
                                          Pexp_construct "false" (lambda/switch.ml[863,24349+16]..[863,24349+21])
                                          None
                                    ]
                                  expression (lambda/switch.ml[864,24373+4]..[873,24618+35])
                                    Pexp_sequence
                                    expression (lambda/switch.ml[864,24373+4]..[864,24373+47])
                                      Pexp_ifthenelse
                                      expression (lambda/switch.ml[864,24373+7]..[864,24373+26])
                                        Pexp_apply
                                        expression (lambda/switch.ml[864,24373+17]..[864,24373+19])
                                          Pexp_ident "<>" (lambda/switch.ml[864,24373+17]..[864,24373+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[864,24373+7]..[864,24373+16])
                                              Pexp_apply
                                              expression (lambda/switch.ml[864,24373+7]..[864,24373+8])
                                                Pexp_ident "!" (lambda/switch.ml[864,24373+7]..[864,24373+8])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[864,24373+8]..[864,24373+16])
                                                    Pexp_ident "ok_inter" (lambda/switch.ml[864,24373+8]..[864,24373+16])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[864,24373+20]..[864,24373+26])
                                              Pexp_ident "old_ok" (lambda/switch.ml[864,24373+20]..[864,24373+26])
                                        ]
                                      expression (lambda/switch.ml[864,24373+32]..[864,24373+47])
                                        Pexp_apply
                                        expression (lambda/switch.ml[864,24373+32]..[864,24373+45])
                                          Pexp_ident "Hashtbl.clear" (lambda/switch.ml[864,24373+32]..[864,24373+45])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[864,24373+46]..[864,24373+47])
                                              Pexp_ident "t" (lambda/switch.ml[864,24373+46]..[864,24373+47])
                                        ]
                                      None
                                    expression (lambda/switch.ml[865,24423+4]..[873,24618+35])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/switch.ml[865,24423+8]..[865,24423+9])
                                            Ppat_var "s" (lambda/switch.ml[865,24423+8]..[865,24423+9])
                                          expression (lambda/switch.ml[866,24435+6]..[867,24456+61])
                                            Pexp_record
                                            [
                                              "cases" (lambda/switch.ml[866,24435+7]..[866,24435+12])
                                                expression (lambda/switch.ml[866,24435+13]..[866,24435+18])
                                                  Pexp_ident "cases" (lambda/switch.ml[866,24435+13]..[866,24435+18])
                                              "actions" (lambda/switch.ml[867,24456+7]..[867,24456+14])
                                                expression (lambda/switch.ml[867,24456+15]..[867,24456+60])
                                                  Pexp_apply
                                                  expression (lambda/switch.ml[867,24456+15]..[867,24456+24])
                                                    Pexp_ident "Array.map" (lambda/switch.ml[867,24456+15]..[867,24456+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[867,24456+25]..[867,24456+52])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (lambda/switch.ml[867,24456+30]..[867,24456+33])
                                                          Ppat_var "act" (lambda/switch.ml[867,24456+30]..[867,24456+33])
                                                        expression (lambda/switch.ml[867,24456+37]..[867,24456+51])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (lambda/switch.ml[867,24456+42]..[867,24456+43])
                                                            Ppat_any
                                                          expression (lambda/switch.ml[867,24456+47]..[867,24456+50])
                                                            Pexp_ident "act" (lambda/switch.ml[867,24456+47]..[867,24456+50])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/switch.ml[867,24456+53]..[867,24456+60])
                                                        Pexp_ident "actions" (lambda/switch.ml[867,24456+53]..[867,24456+60])
                                                  ]
                                            ]
                                            None
                                      ]
                                      expression (lambda/switch.ml[873,24618+4]..[873,24618+35])
                                        Pexp_apply
                                        expression (lambda/switch.ml[873,24618+4]..[873,24618+6])
                                          Pexp_ident "hs" (lambda/switch.ml[873,24618+4]..[873,24618+6])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/switch.ml[873,24618+7]..[873,24618+35])
                                              Pexp_apply
                                              expression (lambda/switch.ml[873,24618+8]..[873,24618+14])
                                                Pexp_ident "c_test" (lambda/switch.ml[873,24618+8]..[873,24618+14])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[873,24618+15]..[873,24618+32])
                                                    Pexp_record
                                                    [
                                                      "arg" (lambda/switch.ml[873,24618+16]..[873,24618+19])
                                                        expression (lambda/switch.ml[873,24618+20]..[873,24618+23])
                                                          Pexp_ident "arg" (lambda/switch.ml[873,24618+20]..[873,24618+23])
                                                      "off" (lambda/switch.ml[873,24618+26]..[873,24618+29])
                                                        expression (lambda/switch.ml[873,24618+30]..[873,24618+31])
                                                          Pexp_constant PConst_int (0,None)
                                                    ]
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (lambda/switch.ml[873,24618+33]..[873,24618+34])
                                                    Pexp_ident "s" (lambda/switch.ml[873,24618+33]..[873,24618+34])
                                              ]
                                        ]
              ]
          ]
]

