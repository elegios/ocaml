[
  structure_item (bytecomp/emitcode.ml[18,1134+0]..[18,1134+11])
    Pstr_open Fresh
    module_expr (bytecomp/emitcode.ml[18,1134+5]..[18,1134+11])
      Pmod_ident "Config" (bytecomp/emitcode.ml[18,1134+5]..[18,1134+11])
  structure_item (bytecomp/emitcode.ml[19,1146+0]..[19,1146+9])
    Pstr_open Fresh
    module_expr (bytecomp/emitcode.ml[19,1146+5]..[19,1146+9])
      Pmod_ident "Misc" (bytecomp/emitcode.ml[19,1146+5]..[19,1146+9])
  structure_item (bytecomp/emitcode.ml[20,1156+0]..[20,1156+13])
    Pstr_open Fresh
    module_expr (bytecomp/emitcode.ml[20,1156+5]..[20,1156+13])
      Pmod_ident "Asttypes" (bytecomp/emitcode.ml[20,1156+5]..[20,1156+13])
  structure_item (bytecomp/emitcode.ml[21,1170+0]..[21,1170+11])
    Pstr_open Fresh
    module_expr (bytecomp/emitcode.ml[21,1170+5]..[21,1170+11])
      Pmod_ident "Lambda" (bytecomp/emitcode.ml[21,1170+5]..[21,1170+11])
  structure_item (bytecomp/emitcode.ml[22,1182+0]..[22,1182+13])
    Pstr_open Fresh
    module_expr (bytecomp/emitcode.ml[22,1182+5]..[22,1182+13])
      Pmod_ident "Instruct" (bytecomp/emitcode.ml[22,1182+5]..[22,1182+13])
  structure_item (bytecomp/emitcode.ml[23,1196+0]..[23,1196+12])
    Pstr_open Fresh
    module_expr (bytecomp/emitcode.ml[23,1196+5]..[23,1196+12])
      Pmod_ident "Opcodes" (bytecomp/emitcode.ml[23,1196+5]..[23,1196+12])
  structure_item (bytecomp/emitcode.ml[24,1209+0]..[24,1209+15])
    Pstr_open Fresh
    module_expr (bytecomp/emitcode.ml[24,1209+5]..[24,1209+15])
      Pmod_ident "Cmo_format" (bytecomp/emitcode.ml[24,1209+5]..[24,1209+15])
  structure_item (bytecomp/emitcode.ml[25,1225+0]..[25,1225+34])
    Pstr_module
    "String" (bytecomp/emitcode.ml[25,1225+7]..[25,1225+13])
      module_expr (bytecomp/emitcode.ml[25,1225+16]..[25,1225+34])
        Pmod_ident "Misc.Stdlib.String" (bytecomp/emitcode.ml[25,1225+16]..[25,1225+34])
  structure_item (bytecomp/emitcode.ml[27,1261+0]..[27,1261+51])
    Pstr_type Rec
    [
      type_declaration "error" (bytecomp/emitcode.ml[27,1261+5]..[27,1261+10]) (bytecomp/emitcode.ml[27,1261+0]..[27,1261+51])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (bytecomp/emitcode.ml[27,1261+13]..[27,1261+51])
                "Not_compatible_32" (bytecomp/emitcode.ml[27,1261+13]..[27,1261+30])
                [
                  core_type (bytecomp/emitcode.ml[27,1261+35]..[27,1261+50])
                    Ptyp_tuple
                    [
                      core_type (bytecomp/emitcode.ml[27,1261+35]..[27,1261+41])
                        Ptyp_constr "string" (bytecomp/emitcode.ml[27,1261+35]..[27,1261+41])
                        []
                      core_type (bytecomp/emitcode.ml[27,1261+44]..[27,1261+50])
                        Ptyp_constr "string" (bytecomp/emitcode.ml[27,1261+44]..[27,1261+50])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (bytecomp/emitcode.ml[28,1313+0]..[28,1313+24])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (bytecomp/emitcode.ml[28,1313+0]..[28,1313+24])
          pext_name = "Error"
          pext_kind =
            Pext_decl
              [
                core_type (bytecomp/emitcode.ml[28,1313+19]..[28,1313+24])
                  Ptyp_constr "error" (bytecomp/emitcode.ml[28,1313+19]..[28,1313+24])
                  []
              ]
              None
  structure_item (bytecomp/emitcode.ml[31,1385+0]..[37,1609+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[31,1385+4]..[31,1385+49])
          Ppat_var "marshal_to_channel_with_possibly_32bit_compat" (bytecomp/emitcode.ml[31,1385+4]..[31,1385+49])
        expression (bytecomp/emitcode.ml[31,1385+50]..[37,1609+54]) ghost
          Pexp_fun
          Labelled "filename"
          None
          pattern (bytecomp/emitcode.ml[31,1385+51]..[31,1385+59])
            Ppat_var "filename" (bytecomp/emitcode.ml[31,1385+51]..[31,1385+59])
          expression (bytecomp/emitcode.ml[31,1385+60]..[37,1609+54]) ghost
            Pexp_fun
            Labelled "kind"
            None
            pattern (bytecomp/emitcode.ml[31,1385+61]..[31,1385+65])
              Ppat_var "kind" (bytecomp/emitcode.ml[31,1385+61]..[31,1385+65])
            expression (bytecomp/emitcode.ml[31,1385+66]..[37,1609+54]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (bytecomp/emitcode.ml[31,1385+66]..[31,1385+73])
                Ppat_var "outchan" (bytecomp/emitcode.ml[31,1385+66]..[31,1385+73])
              expression (bytecomp/emitcode.ml[31,1385+74]..[37,1609+54]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (bytecomp/emitcode.ml[31,1385+74]..[31,1385+77])
                  Ppat_var "obj" (bytecomp/emitcode.ml[31,1385+74]..[31,1385+77])
                expression (bytecomp/emitcode.ml[32,1465+2]..[37,1609+54])
                  Pexp_try
                  expression (bytecomp/emitcode.ml[33,1471+4]..[35,1548+40])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[33,1471+4]..[33,1471+22])
                      Pexp_ident "Marshal.to_channel" (bytecomp/emitcode.ml[33,1471+4]..[33,1471+22])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[33,1471+23]..[33,1471+30])
                          Pexp_ident "outchan" (bytecomp/emitcode.ml[33,1471+23]..[33,1471+30])
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[33,1471+31]..[33,1471+34])
                          Pexp_ident "obj" (bytecomp/emitcode.ml[33,1471+31]..[33,1471+34])
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[34,1506+6]..[35,1548+40])
                          Pexp_ifthenelse
                          expression (bytecomp/emitcode.ml[34,1506+10]..[34,1506+41])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[34,1506+10]..[34,1506+11])
                              Pexp_ident "!" (bytecomp/emitcode.ml[34,1506+10]..[34,1506+11])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[34,1506+11]..[34,1506+41])
                                  Pexp_ident "Clflags.bytecode_compatible_32" (bytecomp/emitcode.ml[34,1506+11]..[34,1506+41])
                            ]
                          expression (bytecomp/emitcode.ml[35,1548+12]..[35,1548+31])
                            Pexp_construct "::" (bytecomp/emitcode.ml[35,1548+13]..[35,1548+31]) ghost
                            Some
                              expression (bytecomp/emitcode.ml[35,1548+13]..[35,1548+31]) ghost
                                Pexp_tuple
                                [
                                  expression (bytecomp/emitcode.ml[35,1548+13]..[35,1548+30])
                                    Pexp_construct "Marshal.Compat_32" (bytecomp/emitcode.ml[35,1548+13]..[35,1548+30])
                                    None
                                  expression (bytecomp/emitcode.ml[35,1548+30]..[35,1548+31]) ghost
                                    Pexp_construct "[]" (bytecomp/emitcode.ml[35,1548+30]..[35,1548+31]) ghost
                                    None
                                ]
                          Some
                            expression (bytecomp/emitcode.ml[35,1548+37]..[35,1548+39])
                              Pexp_construct "[]" (bytecomp/emitcode.ml[35,1548+37]..[35,1548+39])
                              None
                    ]
                  [
                    <case>
                      pattern (bytecomp/emitcode.ml[36,1589+7]..[36,1589+16])
                        Ppat_construct "Failure" (bytecomp/emitcode.ml[36,1589+7]..[36,1589+14])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[36,1589+15]..[36,1589+16])
                            Ppat_any
                      expression (bytecomp/emitcode.ml[37,1609+4]..[37,1609+54])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[37,1609+4]..[37,1609+9])
                          Pexp_ident "raise" (bytecomp/emitcode.ml[37,1609+4]..[37,1609+9])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[37,1609+10]..[37,1609+54])
                              Pexp_construct "Error" (bytecomp/emitcode.ml[37,1609+11]..[37,1609+16])
                              Some
                                expression (bytecomp/emitcode.ml[37,1609+17]..[37,1609+53])
                                  Pexp_construct "Not_compatible_32" (bytecomp/emitcode.ml[37,1609+18]..[37,1609+35])
                                  Some
                                    expression (bytecomp/emitcode.ml[37,1609+36]..[37,1609+52])
                                      Pexp_tuple
                                      [
                                        expression (bytecomp/emitcode.ml[37,1609+37]..[37,1609+45])
                                          Pexp_ident "filename" (bytecomp/emitcode.ml[37,1609+37]..[37,1609+45])
                                        expression (bytecomp/emitcode.ml[37,1609+47]..[37,1609+51])
                                          Pexp_ident "kind" (bytecomp/emitcode.ml[37,1609+47]..[37,1609+51])
                                      ]
                        ]
                  ]
    ]
  structure_item (bytecomp/emitcode.ml[40,1666+0]..[42,1777+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[40,1666+4]..[40,1666+16])
          Ppat_var "report_error" (bytecomp/emitcode.ml[40,1666+4]..[40,1666+16])
        expression (bytecomp/emitcode.ml[40,1666+17]..[42,1777+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[40,1666+17]..[40,1666+20])
            Ppat_var "ppf" (bytecomp/emitcode.ml[40,1666+17]..[40,1666+20])
          expression (bytecomp/emitcode.ml[40,1666+21]..[42,1777+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (bytecomp/emitcode.ml[40,1666+21]..[40,1666+33])
              Ppat_tuple
              [
                pattern (bytecomp/emitcode.ml[40,1666+22]..[40,1666+26])
                  Ppat_var "file" (bytecomp/emitcode.ml[40,1666+22]..[40,1666+26])
                pattern (bytecomp/emitcode.ml[40,1666+28]..[40,1666+32])
                  Ppat_var "kind" (bytecomp/emitcode.ml[40,1666+28]..[40,1666+32])
              ]
            expression (bytecomp/emitcode.ml[41,1702+2]..[42,1777+30])
              Pexp_apply
              expression (bytecomp/emitcode.ml[41,1702+2]..[41,1702+16])
                Pexp_ident "Format.fprintf" (bytecomp/emitcode.ml[41,1702+2]..[41,1702+16])
              [
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[41,1702+17]..[41,1702+20])
                    Pexp_ident "ppf" (bytecomp/emitcode.ml[41,1702+17]..[41,1702+20])
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[41,1702+21]..[41,1702+74])
                    Pexp_constant PConst_string("Generated %s %S cannot be used on a 32-bit platform",(bytecomp/emitcode.ml[41,1702+22]..[41,1702+73]),None)
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[42,1777+21]..[42,1777+25])
                    Pexp_ident "kind" (bytecomp/emitcode.ml[42,1777+21]..[42,1777+25])
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[42,1777+26]..[42,1777+30])
                    Pexp_ident "file" (bytecomp/emitcode.ml[42,1777+26]..[42,1777+30])
              ]
    ]
  structure_item (bytecomp/emitcode.ml[43,1808+0]..[50,2000+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[43,1808+4]..[43,1808+6])
          Ppat_construct "()" (bytecomp/emitcode.ml[43,1808+4]..[43,1808+6])
          None
        expression (bytecomp/emitcode.ml[44,1817+2]..[50,2000+5])
          Pexp_apply
          expression (bytecomp/emitcode.ml[44,1817+2]..[44,1817+32])
            Pexp_ident "Location.register_error_of_exn" (bytecomp/emitcode.ml[44,1817+2]..[44,1817+32])
          [
            <arg>
            Nolabel
              expression (bytecomp/emitcode.ml[45,1850+4]..[50,2000+5])
                Pexp_function
                [
                  <case>
                    pattern (bytecomp/emitcode.ml[46,1864+8]..[46,1864+38])
                      Ppat_construct "Error" (bytecomp/emitcode.ml[46,1864+8]..[46,1864+13])
                      Some
                        []
                        pattern (bytecomp/emitcode.ml[46,1864+14]..[46,1864+38])
                          Ppat_construct "Not_compatible_32" (bytecomp/emitcode.ml[46,1864+15]..[46,1864+32])
                          Some
                            []
                            pattern (bytecomp/emitcode.ml[46,1864+33]..[46,1864+37])
                              Ppat_var "info" (bytecomp/emitcode.ml[46,1864+33]..[46,1864+37])
                    expression (bytecomp/emitcode.ml[47,1906+10]..[47,1906+65])
                      Pexp_construct "Some" (bytecomp/emitcode.ml[47,1906+10]..[47,1906+14])
                      Some
                        expression (bytecomp/emitcode.ml[47,1906+15]..[47,1906+65])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[47,1906+16]..[47,1906+46])
                            Pexp_ident "Location.error_of_printer_file" (bytecomp/emitcode.ml[47,1906+16]..[47,1906+46])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[47,1906+47]..[47,1906+59])
                                Pexp_ident "report_error" (bytecomp/emitcode.ml[47,1906+47]..[47,1906+59])
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[47,1906+60]..[47,1906+64])
                                Pexp_ident "info" (bytecomp/emitcode.ml[47,1906+60]..[47,1906+64])
                          ]
                  <case>
                    pattern (bytecomp/emitcode.ml[48,1972+8]..[48,1972+9])
                      Ppat_any
                    expression (bytecomp/emitcode.ml[49,1985+10]..[49,1985+14])
                      Pexp_construct "None" (bytecomp/emitcode.ml[49,1985+10]..[49,1985+14])
                      None
                ]
          ]
    ]
  structure_item (bytecomp/emitcode.ml[54,2036+0]..[55,2081+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[54,2036+4]..[54,2036+14])
          Ppat_var "out_buffer" (bytecomp/emitcode.ml[54,2036+4]..[54,2036+14])
        expression (bytecomp/emitcode.ml[54,2036+17]..[54,2036+44])
          Pexp_apply
          expression (bytecomp/emitcode.ml[54,2036+17]..[54,2036+20])
            Pexp_ident "ref" (bytecomp/emitcode.ml[54,2036+17]..[54,2036+20])
          [
            <arg>
            Nolabel
              expression (bytecomp/emitcode.ml[54,2036+20]..[54,2036+44])
                Pexp_apply
                expression (bytecomp/emitcode.ml[54,2036+21]..[54,2036+38])
                  Pexp_ident "LongString.create" (bytecomp/emitcode.ml[54,2036+21]..[54,2036+38])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[54,2036+39]..[54,2036+43])
                      Pexp_constant PConst_int (1024,None)
                ]
          ]
      <def>
        pattern (bytecomp/emitcode.ml[55,2081+4]..[55,2081+16])
          Ppat_var "out_position" (bytecomp/emitcode.ml[55,2081+4]..[55,2081+16])
        expression (bytecomp/emitcode.ml[55,2081+19]..[55,2081+24])
          Pexp_apply
          expression (bytecomp/emitcode.ml[55,2081+19]..[55,2081+22])
            Pexp_ident "ref" (bytecomp/emitcode.ml[55,2081+19]..[55,2081+22])
          [
            <arg>
            Nolabel
              expression (bytecomp/emitcode.ml[55,2081+23]..[55,2081+24])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (bytecomp/emitcode.ml[57,2107+0]..[69,2623+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[57,2107+4]..[57,2107+12])
          Ppat_var "out_word" (bytecomp/emitcode.ml[57,2107+4]..[57,2107+12])
        expression (bytecomp/emitcode.ml[57,2107+13]..[69,2623+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[57,2107+13]..[57,2107+15])
            Ppat_var "b1" (bytecomp/emitcode.ml[57,2107+13]..[57,2107+15])
          expression (bytecomp/emitcode.ml[57,2107+16]..[69,2623+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (bytecomp/emitcode.ml[57,2107+16]..[57,2107+18])
              Ppat_var "b2" (bytecomp/emitcode.ml[57,2107+16]..[57,2107+18])
            expression (bytecomp/emitcode.ml[57,2107+19]..[69,2623+23]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (bytecomp/emitcode.ml[57,2107+19]..[57,2107+21])
                Ppat_var "b3" (bytecomp/emitcode.ml[57,2107+19]..[57,2107+21])
              expression (bytecomp/emitcode.ml[57,2107+22]..[69,2623+23]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (bytecomp/emitcode.ml[57,2107+22]..[57,2107+24])
                  Ppat_var "b4" (bytecomp/emitcode.ml[57,2107+22]..[57,2107+24])
                expression (bytecomp/emitcode.ml[58,2134+2]..[69,2623+23])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (bytecomp/emitcode.ml[58,2134+6]..[58,2134+7])
                        Ppat_var "p" (bytecomp/emitcode.ml[58,2134+6]..[58,2134+7])
                      expression (bytecomp/emitcode.ml[58,2134+10]..[58,2134+23])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[58,2134+10]..[58,2134+11])
                          Pexp_ident "!" (bytecomp/emitcode.ml[58,2134+10]..[58,2134+11])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[58,2134+11]..[58,2134+23])
                              Pexp_ident "out_position" (bytecomp/emitcode.ml[58,2134+11]..[58,2134+23])
                        ]
                  ]
                  expression (bytecomp/emitcode.ml[59,2161+2]..[69,2623+23])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[59,2161+2]..[64,2392+5])
                      Pexp_ifthenelse
                      expression (bytecomp/emitcode.ml[59,2161+5]..[59,2161+39])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[59,2161+7]..[59,2161+9])
                          Pexp_ident ">=" (bytecomp/emitcode.ml[59,2161+7]..[59,2161+9])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[59,2161+5]..[59,2161+6])
                              Pexp_ident "p" (bytecomp/emitcode.ml[59,2161+5]..[59,2161+6])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[59,2161+10]..[59,2161+39])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[59,2161+10]..[59,2161+27])
                                Pexp_ident "LongString.length" (bytecomp/emitcode.ml[59,2161+10]..[59,2161+27])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[59,2161+28]..[59,2161+39])
                                    Pexp_apply
                                    expression (bytecomp/emitcode.ml[59,2161+28]..[59,2161+29])
                                      Pexp_ident "!" (bytecomp/emitcode.ml[59,2161+28]..[59,2161+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[59,2161+29]..[59,2161+39])
                                          Pexp_ident "out_buffer" (bytecomp/emitcode.ml[59,2161+29]..[59,2161+39])
                                    ]
                              ]
                        ]
                      expression (bytecomp/emitcode.ml[59,2161+45]..[64,2392+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (bytecomp/emitcode.ml[60,2212+8]..[60,2212+11])
                              Ppat_var "len" (bytecomp/emitcode.ml[60,2212+8]..[60,2212+11])
                            expression (bytecomp/emitcode.ml[60,2212+14]..[60,2212+43])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[60,2212+14]..[60,2212+31])
                                Pexp_ident "LongString.length" (bytecomp/emitcode.ml[60,2212+14]..[60,2212+31])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[60,2212+32]..[60,2212+43])
                                    Pexp_apply
                                    expression (bytecomp/emitcode.ml[60,2212+32]..[60,2212+33])
                                      Pexp_ident "!" (bytecomp/emitcode.ml[60,2212+32]..[60,2212+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[60,2212+33]..[60,2212+43])
                                          Pexp_ident "out_buffer" (bytecomp/emitcode.ml[60,2212+33]..[60,2212+43])
                                    ]
                              ]
                        ]
                        expression (bytecomp/emitcode.ml[61,2259+4]..[63,2363+28])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (bytecomp/emitcode.ml[61,2259+8]..[61,2259+18])
                                Ppat_var "new_buffer" (bytecomp/emitcode.ml[61,2259+8]..[61,2259+18])
                              expression (bytecomp/emitcode.ml[61,2259+21]..[61,2259+48])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[61,2259+21]..[61,2259+38])
                                  Pexp_ident "LongString.create" (bytecomp/emitcode.ml[61,2259+21]..[61,2259+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[61,2259+39]..[61,2259+48])
                                      Pexp_apply
                                      expression (bytecomp/emitcode.ml[61,2259+42]..[61,2259+43])
                                        Pexp_ident "*" (bytecomp/emitcode.ml[61,2259+42]..[61,2259+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (bytecomp/emitcode.ml[61,2259+40]..[61,2259+41])
                                            Pexp_constant PConst_int (2,None)
                                        <arg>
                                        Nolabel
                                          expression (bytecomp/emitcode.ml[61,2259+44]..[61,2259+47])
                                            Pexp_ident "len" (bytecomp/emitcode.ml[61,2259+44]..[61,2259+47])
                                      ]
                                ]
                          ]
                          expression (bytecomp/emitcode.ml[62,2311+4]..[63,2363+28])
                            Pexp_sequence
                            expression (bytecomp/emitcode.ml[62,2311+4]..[62,2311+50])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[62,2311+4]..[62,2311+19])
                                Pexp_ident "LongString.blit" (bytecomp/emitcode.ml[62,2311+4]..[62,2311+19])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[62,2311+20]..[62,2311+31])
                                    Pexp_apply
                                    expression (bytecomp/emitcode.ml[62,2311+20]..[62,2311+21])
                                      Pexp_ident "!" (bytecomp/emitcode.ml[62,2311+20]..[62,2311+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[62,2311+21]..[62,2311+31])
                                          Pexp_ident "out_buffer" (bytecomp/emitcode.ml[62,2311+21]..[62,2311+31])
                                    ]
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[62,2311+32]..[62,2311+33])
                                    Pexp_constant PConst_int (0,None)
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[62,2311+34]..[62,2311+44])
                                    Pexp_ident "new_buffer" (bytecomp/emitcode.ml[62,2311+34]..[62,2311+44])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[62,2311+45]..[62,2311+46])
                                    Pexp_constant PConst_int (0,None)
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[62,2311+47]..[62,2311+50])
                                    Pexp_ident "len" (bytecomp/emitcode.ml[62,2311+47]..[62,2311+50])
                              ]
                            expression (bytecomp/emitcode.ml[63,2363+4]..[63,2363+28])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[63,2363+15]..[63,2363+17])
                                Pexp_ident ":=" (bytecomp/emitcode.ml[63,2363+15]..[63,2363+17])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[63,2363+4]..[63,2363+14])
                                    Pexp_ident "out_buffer" (bytecomp/emitcode.ml[63,2363+4]..[63,2363+14])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[63,2363+18]..[63,2363+28])
                                    Pexp_ident "new_buffer" (bytecomp/emitcode.ml[63,2363+18]..[63,2363+28])
                              ]
                      None
                    expression (bytecomp/emitcode.ml[65,2399+2]..[69,2623+23])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[65,2399+2]..[65,2399+51])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[65,2399+2]..[65,2399+16])
                          Pexp_ident "LongString.set" (bytecomp/emitcode.ml[65,2399+2]..[65,2399+16])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[65,2399+17]..[65,2399+28])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[65,2399+17]..[65,2399+18])
                                Pexp_ident "!" (bytecomp/emitcode.ml[65,2399+17]..[65,2399+18])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[65,2399+18]..[65,2399+28])
                                    Pexp_ident "out_buffer" (bytecomp/emitcode.ml[65,2399+18]..[65,2399+28])
                              ]
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[65,2399+29]..[65,2399+30])
                              Pexp_ident "p" (bytecomp/emitcode.ml[65,2399+29]..[65,2399+30])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[65,2399+31]..[65,2399+51])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[65,2399+32]..[65,2399+47])
                                Pexp_ident "Char.unsafe_chr" (bytecomp/emitcode.ml[65,2399+32]..[65,2399+47])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[65,2399+48]..[65,2399+50])
                                    Pexp_ident "b1" (bytecomp/emitcode.ml[65,2399+48]..[65,2399+50])
                              ]
                        ]
                      expression (bytecomp/emitcode.ml[66,2452+2]..[69,2623+23])
                        Pexp_sequence
                        expression (bytecomp/emitcode.ml[66,2452+2]..[66,2452+55])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[66,2452+2]..[66,2452+16])
                            Pexp_ident "LongString.set" (bytecomp/emitcode.ml[66,2452+2]..[66,2452+16])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[66,2452+17]..[66,2452+28])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[66,2452+17]..[66,2452+18])
                                  Pexp_ident "!" (bytecomp/emitcode.ml[66,2452+17]..[66,2452+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[66,2452+18]..[66,2452+28])
                                      Pexp_ident "out_buffer" (bytecomp/emitcode.ml[66,2452+18]..[66,2452+28])
                                ]
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[66,2452+29]..[66,2452+34])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[66,2452+31]..[66,2452+32])
                                  Pexp_ident "+" (bytecomp/emitcode.ml[66,2452+31]..[66,2452+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[66,2452+30]..[66,2452+31])
                                      Pexp_ident "p" (bytecomp/emitcode.ml[66,2452+30]..[66,2452+31])
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[66,2452+32]..[66,2452+33])
                                      Pexp_constant PConst_int (1,None)
                                ]
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[66,2452+35]..[66,2452+55])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[66,2452+36]..[66,2452+51])
                                  Pexp_ident "Char.unsafe_chr" (bytecomp/emitcode.ml[66,2452+36]..[66,2452+51])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[66,2452+52]..[66,2452+54])
                                      Pexp_ident "b2" (bytecomp/emitcode.ml[66,2452+52]..[66,2452+54])
                                ]
                          ]
                        expression (bytecomp/emitcode.ml[67,2509+2]..[69,2623+23])
                          Pexp_sequence
                          expression (bytecomp/emitcode.ml[67,2509+2]..[67,2509+55])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[67,2509+2]..[67,2509+16])
                              Pexp_ident "LongString.set" (bytecomp/emitcode.ml[67,2509+2]..[67,2509+16])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[67,2509+17]..[67,2509+28])
                                  Pexp_apply
                                  expression (bytecomp/emitcode.ml[67,2509+17]..[67,2509+18])
                                    Pexp_ident "!" (bytecomp/emitcode.ml[67,2509+17]..[67,2509+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[67,2509+18]..[67,2509+28])
                                        Pexp_ident "out_buffer" (bytecomp/emitcode.ml[67,2509+18]..[67,2509+28])
                                  ]
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[67,2509+29]..[67,2509+34])
                                  Pexp_apply
                                  expression (bytecomp/emitcode.ml[67,2509+31]..[67,2509+32])
                                    Pexp_ident "+" (bytecomp/emitcode.ml[67,2509+31]..[67,2509+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[67,2509+30]..[67,2509+31])
                                        Pexp_ident "p" (bytecomp/emitcode.ml[67,2509+30]..[67,2509+31])
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[67,2509+32]..[67,2509+33])
                                        Pexp_constant PConst_int (2,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[67,2509+35]..[67,2509+55])
                                  Pexp_apply
                                  expression (bytecomp/emitcode.ml[67,2509+36]..[67,2509+51])
                                    Pexp_ident "Char.unsafe_chr" (bytecomp/emitcode.ml[67,2509+36]..[67,2509+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[67,2509+52]..[67,2509+54])
                                        Pexp_ident "b3" (bytecomp/emitcode.ml[67,2509+52]..[67,2509+54])
                                  ]
                            ]
                          expression (bytecomp/emitcode.ml[68,2566+2]..[69,2623+23])
                            Pexp_sequence
                            expression (bytecomp/emitcode.ml[68,2566+2]..[68,2566+55])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[68,2566+2]..[68,2566+16])
                                Pexp_ident "LongString.set" (bytecomp/emitcode.ml[68,2566+2]..[68,2566+16])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[68,2566+17]..[68,2566+28])
                                    Pexp_apply
                                    expression (bytecomp/emitcode.ml[68,2566+17]..[68,2566+18])
                                      Pexp_ident "!" (bytecomp/emitcode.ml[68,2566+17]..[68,2566+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[68,2566+18]..[68,2566+28])
                                          Pexp_ident "out_buffer" (bytecomp/emitcode.ml[68,2566+18]..[68,2566+28])
                                    ]
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[68,2566+29]..[68,2566+34])
                                    Pexp_apply
                                    expression (bytecomp/emitcode.ml[68,2566+31]..[68,2566+32])
                                      Pexp_ident "+" (bytecomp/emitcode.ml[68,2566+31]..[68,2566+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[68,2566+30]..[68,2566+31])
                                          Pexp_ident "p" (bytecomp/emitcode.ml[68,2566+30]..[68,2566+31])
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[68,2566+32]..[68,2566+33])
                                          Pexp_constant PConst_int (3,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[68,2566+35]..[68,2566+55])
                                    Pexp_apply
                                    expression (bytecomp/emitcode.ml[68,2566+36]..[68,2566+51])
                                      Pexp_ident "Char.unsafe_chr" (bytecomp/emitcode.ml[68,2566+36]..[68,2566+51])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[68,2566+52]..[68,2566+54])
                                          Pexp_ident "b4" (bytecomp/emitcode.ml[68,2566+52]..[68,2566+54])
                                    ]
                              ]
                            expression (bytecomp/emitcode.ml[69,2623+2]..[69,2623+23])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[69,2623+15]..[69,2623+17])
                                Pexp_ident ":=" (bytecomp/emitcode.ml[69,2623+15]..[69,2623+17])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[69,2623+2]..[69,2623+14])
                                    Pexp_ident "out_position" (bytecomp/emitcode.ml[69,2623+2]..[69,2623+14])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[69,2623+18]..[69,2623+23])
                                    Pexp_apply
                                    expression (bytecomp/emitcode.ml[69,2623+20]..[69,2623+21])
                                      Pexp_ident "+" (bytecomp/emitcode.ml[69,2623+20]..[69,2623+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[69,2623+18]..[69,2623+19])
                                          Pexp_ident "p" (bytecomp/emitcode.ml[69,2623+18]..[69,2623+19])
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[69,2623+22]..[69,2623+23])
                                          Pexp_constant PConst_int (4,None)
                                    ]
                              ]
    ]
  structure_item (bytecomp/emitcode.ml[71,2648+0]..[72,2665+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[71,2648+4]..[71,2648+7])
          Ppat_var "out" (bytecomp/emitcode.ml[71,2648+4]..[71,2648+7])
        expression (bytecomp/emitcode.ml[71,2648+8]..[72,2665+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[71,2648+8]..[71,2648+14])
            Ppat_var "opcode" (bytecomp/emitcode.ml[71,2648+8]..[71,2648+14])
          expression (bytecomp/emitcode.ml[72,2665+2]..[72,2665+23])
            Pexp_apply
            expression (bytecomp/emitcode.ml[72,2665+2]..[72,2665+10])
              Pexp_ident "out_word" (bytecomp/emitcode.ml[72,2665+2]..[72,2665+10])
            [
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[72,2665+11]..[72,2665+17])
                  Pexp_ident "opcode" (bytecomp/emitcode.ml[72,2665+11]..[72,2665+17])
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[72,2665+18]..[72,2665+19])
                  Pexp_constant PConst_int (0,None)
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[72,2665+20]..[72,2665+21])
                  Pexp_constant PConst_int (0,None)
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[72,2665+22]..[72,2665+23])
                  Pexp_constant PConst_int (0,None)
            ]
    ]
  structure_item (bytecomp/emitcode.ml[75,2691+0]..[75,2691+15])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (bytecomp/emitcode.ml[75,2691+0]..[75,2691+15])
          pext_name = "AsInt"
          pext_kind =
            Pext_decl
              []
              None
  structure_item (bytecomp/emitcode.ml[77,2708+0]..[80,2813+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[77,2708+4]..[77,2708+16])
          Ppat_var "const_as_int" (bytecomp/emitcode.ml[77,2708+4]..[77,2708+16])
        expression (bytecomp/emitcode.ml[77,2708+19]..[80,2813+20])
          Pexp_function
          [
            <case>
              pattern (bytecomp/emitcode.ml[78,2736+4]..[78,2736+27])
                Ppat_construct "Const_base" (bytecomp/emitcode.ml[78,2736+4]..[78,2736+14])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[78,2736+14]..[78,2736+27])
                    Ppat_construct "Const_int" (bytecomp/emitcode.ml[78,2736+15]..[78,2736+24])
                    Some
                      []
                      pattern (bytecomp/emitcode.ml[78,2736+25]..[78,2736+26])
                        Ppat_var "i" (bytecomp/emitcode.ml[78,2736+25]..[78,2736+26])
              expression (bytecomp/emitcode.ml[78,2736+31]..[78,2736+32])
                Pexp_ident "i" (bytecomp/emitcode.ml[78,2736+31]..[78,2736+32])
            <case>
              pattern (bytecomp/emitcode.ml[79,2769+4]..[79,2769+28])
                Ppat_construct "Const_base" (bytecomp/emitcode.ml[79,2769+4]..[79,2769+14])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[79,2769+14]..[79,2769+28])
                    Ppat_construct "Const_char" (bytecomp/emitcode.ml[79,2769+15]..[79,2769+25])
                    Some
                      []
                      pattern (bytecomp/emitcode.ml[79,2769+26]..[79,2769+27])
                        Ppat_var "c" (bytecomp/emitcode.ml[79,2769+26]..[79,2769+27])
              expression (bytecomp/emitcode.ml[79,2769+32]..[79,2769+43])
                Pexp_apply
                expression (bytecomp/emitcode.ml[79,2769+32]..[79,2769+41])
                  Pexp_ident "Char.code" (bytecomp/emitcode.ml[79,2769+32]..[79,2769+41])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[79,2769+42]..[79,2769+43])
                      Pexp_ident "c" (bytecomp/emitcode.ml[79,2769+42]..[79,2769+43])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[80,2813+4]..[80,2813+5])
                Ppat_any
              expression (bytecomp/emitcode.ml[80,2813+9]..[80,2813+20])
                Pexp_apply
                expression (bytecomp/emitcode.ml[80,2813+9]..[80,2813+14])
                  Pexp_ident "raise" (bytecomp/emitcode.ml[80,2813+9]..[80,2813+14])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[80,2813+15]..[80,2813+20])
                      Pexp_construct "AsInt" (bytecomp/emitcode.ml[80,2813+15]..[80,2813+20])
                      None
                ]
          ]
    ]
  structure_item (bytecomp/emitcode.ml[82,2835+0]..[82,2835+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[82,2835+4]..[82,2835+12])
          Ppat_var "is_immed" (bytecomp/emitcode.ml[82,2835+4]..[82,2835+12])
        expression (bytecomp/emitcode.ml[82,2835+13]..[82,2835+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[82,2835+13]..[82,2835+14])
            Ppat_var "i" (bytecomp/emitcode.ml[82,2835+13]..[82,2835+14])
          expression (bytecomp/emitcode.ml[82,2835+17]..[82,2835+49])
            Pexp_apply
            expression (bytecomp/emitcode.ml[82,2835+32]..[82,2835+34])
              Pexp_ident "&&" (bytecomp/emitcode.ml[82,2835+32]..[82,2835+34])
            [
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[82,2835+17]..[82,2835+31])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[82,2835+27]..[82,2835+29])
                    Pexp_ident "<=" (bytecomp/emitcode.ml[82,2835+27]..[82,2835+29])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[82,2835+17]..[82,2835+26])
                        Pexp_ident "immed_min" (bytecomp/emitcode.ml[82,2835+17]..[82,2835+26])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[82,2835+30]..[82,2835+31])
                        Pexp_ident "i" (bytecomp/emitcode.ml[82,2835+30]..[82,2835+31])
                  ]
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[82,2835+35]..[82,2835+49])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[82,2835+37]..[82,2835+39])
                    Pexp_ident "<=" (bytecomp/emitcode.ml[82,2835+37]..[82,2835+39])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[82,2835+35]..[82,2835+36])
                        Pexp_ident "i" (bytecomp/emitcode.ml[82,2835+35]..[82,2835+36])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[82,2835+40]..[82,2835+49])
                        Pexp_ident "immed_max" (bytecomp/emitcode.ml[82,2835+40]..[82,2835+49])
                  ]
            ]
    ]
  structure_item (bytecomp/emitcode.ml[83,2885+0]..[87,2951+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[83,2885+4]..[83,2885+18])
          Ppat_var "is_immed_const" (bytecomp/emitcode.ml[83,2885+4]..[83,2885+18])
        expression (bytecomp/emitcode.ml[83,2885+19]..[87,2951+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[83,2885+19]..[83,2885+20])
            Ppat_var "k" (bytecomp/emitcode.ml[83,2885+19]..[83,2885+20])
          expression (bytecomp/emitcode.ml[84,2908+2]..[87,2951+18])
            Pexp_try
            expression (bytecomp/emitcode.ml[85,2914+4]..[85,2914+29])
              Pexp_apply
              expression (bytecomp/emitcode.ml[85,2914+4]..[85,2914+12])
                Pexp_ident "is_immed" (bytecomp/emitcode.ml[85,2914+4]..[85,2914+12])
              [
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[85,2914+13]..[85,2914+29])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[85,2914+14]..[85,2914+26])
                      Pexp_ident "const_as_int" (bytecomp/emitcode.ml[85,2914+14]..[85,2914+26])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[85,2914+27]..[85,2914+28])
                          Pexp_ident "k" (bytecomp/emitcode.ml[85,2914+27]..[85,2914+28])
                    ]
              ]
            [
              <case>
                pattern (bytecomp/emitcode.ml[87,2951+4]..[87,2951+9])
                  Ppat_construct "AsInt" (bytecomp/emitcode.ml[87,2951+4]..[87,2951+9])
                  None
                expression (bytecomp/emitcode.ml[87,2951+13]..[87,2951+18])
                  Pexp_construct "false" (bytecomp/emitcode.ml[87,2951+13]..[87,2951+18])
                  None
            ]
    ]
  structure_item (bytecomp/emitcode.ml[90,2972+0]..[91,2988+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[90,2972+4]..[90,2972+11])
          Ppat_var "out_int" (bytecomp/emitcode.ml[90,2972+4]..[90,2972+11])
        expression (bytecomp/emitcode.ml[90,2972+12]..[91,2988+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[90,2972+12]..[90,2972+13])
            Ppat_var "n" (bytecomp/emitcode.ml[90,2972+12]..[90,2972+13])
          expression (bytecomp/emitcode.ml[91,2988+2]..[91,2988+44])
            Pexp_apply
            expression (bytecomp/emitcode.ml[91,2988+2]..[91,2988+10])
              Pexp_ident "out_word" (bytecomp/emitcode.ml[91,2988+2]..[91,2988+10])
            [
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[91,2988+11]..[91,2988+12])
                  Pexp_ident "n" (bytecomp/emitcode.ml[91,2988+11]..[91,2988+12])
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[91,2988+13]..[91,2988+22])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[91,2988+16]..[91,2988+19])
                    Pexp_ident "asr" (bytecomp/emitcode.ml[91,2988+16]..[91,2988+19])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[91,2988+14]..[91,2988+15])
                        Pexp_ident "n" (bytecomp/emitcode.ml[91,2988+14]..[91,2988+15])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[91,2988+20]..[91,2988+21])
                        Pexp_constant PConst_int (8,None)
                  ]
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[91,2988+23]..[91,2988+33])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[91,2988+26]..[91,2988+29])
                    Pexp_ident "asr" (bytecomp/emitcode.ml[91,2988+26]..[91,2988+29])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[91,2988+24]..[91,2988+25])
                        Pexp_ident "n" (bytecomp/emitcode.ml[91,2988+24]..[91,2988+25])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[91,2988+30]..[91,2988+32])
                        Pexp_constant PConst_int (16,None)
                  ]
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[91,2988+34]..[91,2988+44])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[91,2988+37]..[91,2988+40])
                    Pexp_ident "asr" (bytecomp/emitcode.ml[91,2988+37]..[91,2988+40])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[91,2988+35]..[91,2988+36])
                        Pexp_ident "n" (bytecomp/emitcode.ml[91,2988+35]..[91,2988+36])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[91,2988+41]..[91,2988+43])
                        Pexp_constant PConst_int (24,None)
                  ]
            ]
    ]
  structure_item (bytecomp/emitcode.ml[93,3034+0]..[97,3094+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[93,3034+4]..[93,3034+13])
          Ppat_var "out_const" (bytecomp/emitcode.ml[93,3034+4]..[93,3034+13])
        expression (bytecomp/emitcode.ml[93,3034+14]..[97,3094+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[93,3034+14]..[93,3034+15])
            Ppat_var "c" (bytecomp/emitcode.ml[93,3034+14]..[93,3034+15])
          expression (bytecomp/emitcode.ml[94,3052+2]..[97,3094+53])
            Pexp_try
            expression (bytecomp/emitcode.ml[95,3058+4]..[95,3058+28])
              Pexp_apply
              expression (bytecomp/emitcode.ml[95,3058+4]..[95,3058+11])
                Pexp_ident "out_int" (bytecomp/emitcode.ml[95,3058+4]..[95,3058+11])
              [
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[95,3058+12]..[95,3058+28])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[95,3058+13]..[95,3058+25])
                      Pexp_ident "const_as_int" (bytecomp/emitcode.ml[95,3058+13]..[95,3058+25])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[95,3058+26]..[95,3058+27])
                          Pexp_ident "c" (bytecomp/emitcode.ml[95,3058+26]..[95,3058+27])
                    ]
              ]
            [
              <case>
                pattern (bytecomp/emitcode.ml[97,3094+4]..[97,3094+9])
                  Ppat_construct "AsInt" (bytecomp/emitcode.ml[97,3094+4]..[97,3094+9])
                  None
                expression (bytecomp/emitcode.ml[97,3094+13]..[97,3094+53])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[97,3094+13]..[97,3094+29])
                    Pexp_ident "Misc.fatal_error" (bytecomp/emitcode.ml[97,3094+13]..[97,3094+29])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[97,3094+30]..[97,3094+53])
                        Pexp_constant PConst_string("Emitcode.const_as_int",(bytecomp/emitcode.ml[97,3094+31]..[97,3094+52]),None)
                  ]
            ]
    ]
  structure_item (bytecomp/emitcode.ml[102,3199+0]..[104,3248+39])
    Pstr_type Rec
    [
      type_declaration "label_definition" (bytecomp/emitcode.ml[102,3199+5]..[102,3199+21]) (bytecomp/emitcode.ml[102,3199+0]..[104,3248+39])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (bytecomp/emitcode.ml[103,3223+4]..[103,3223+24])
                "Label_defined" (bytecomp/emitcode.ml[103,3223+4]..[103,3223+17])
                [
                  core_type (bytecomp/emitcode.ml[103,3223+21]..[103,3223+24])
                    Ptyp_constr "int" (bytecomp/emitcode.ml[103,3223+21]..[103,3223+24])
                    []
                ]
                None
              (bytecomp/emitcode.ml[104,3248+2]..[104,3248+39])
                "Label_undefined" (bytecomp/emitcode.ml[104,3248+4]..[104,3248+19])
                [
                  core_type (bytecomp/emitcode.ml[104,3248+23]..[104,3248+39])
                    Ptyp_constr "list" (bytecomp/emitcode.ml[104,3248+35]..[104,3248+39])
                    [
                      core_type (bytecomp/emitcode.ml[104,3248+24]..[104,3248+33])
                        Ptyp_tuple
                        [
                          core_type (bytecomp/emitcode.ml[104,3248+24]..[104,3248+27])
                            Ptyp_constr "int" (bytecomp/emitcode.ml[104,3248+24]..[104,3248+27])
                            []
                          core_type (bytecomp/emitcode.ml[104,3248+30]..[104,3248+33])
                            Ptyp_constr "int" (bytecomp/emitcode.ml[104,3248+30]..[104,3248+33])
                            []
                        ]
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (bytecomp/emitcode.ml[106,3289+0]..[106,3289+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[106,3289+4]..[106,3289+15])
          Ppat_var "label_table" (bytecomp/emitcode.ml[106,3289+4]..[106,3289+15])
        expression (bytecomp/emitcode.ml[106,3289+19]..[106,3289+55])
          Pexp_apply
          expression (bytecomp/emitcode.ml[106,3289+19]..[106,3289+22])
            Pexp_ident "ref" (bytecomp/emitcode.ml[106,3289+19]..[106,3289+22])
          [
            <arg>
            Nolabel
              expression (bytecomp/emitcode.ml[106,3289+23]..[106,3289+55])
                Pexp_constraint
                expression (bytecomp/emitcode.ml[106,3289+24]..[106,3289+29])
                  Pexp_array
                  []
                core_type (bytecomp/emitcode.ml[106,3289+32]..[106,3289+54])
                  Ptyp_constr "array" (bytecomp/emitcode.ml[106,3289+49]..[106,3289+54])
                  [
                    core_type (bytecomp/emitcode.ml[106,3289+32]..[106,3289+48])
                      Ptyp_constr "label_definition" (bytecomp/emitcode.ml[106,3289+32]..[106,3289+48])
                      []
                  ]
          ]
    ]
  structure_item (bytecomp/emitcode.ml[108,3346+0]..[113,3624+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[108,3346+4]..[108,3346+22])
          Ppat_var "extend_label_table" (bytecomp/emitcode.ml[108,3346+4]..[108,3346+22])
        expression (bytecomp/emitcode.ml[108,3346+23]..[113,3624+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[108,3346+23]..[108,3346+29])
            Ppat_var "needed" (bytecomp/emitcode.ml[108,3346+23]..[108,3346+29])
          expression (bytecomp/emitcode.ml[109,3378+2]..[113,3624+26])
            Pexp_let Nonrec
            [
              <def>
                pattern (bytecomp/emitcode.ml[109,3378+6]..[109,3378+14])
                  Ppat_var "new_size" (bytecomp/emitcode.ml[109,3378+6]..[109,3378+14])
                expression (bytecomp/emitcode.ml[109,3378+17]..[109,3378+47])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[109,3378+17]..[109,3378+20])
                    Pexp_ident "ref" (bytecomp/emitcode.ml[109,3378+17]..[109,3378+20])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[109,3378+20]..[109,3378+47])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[109,3378+21]..[109,3378+33])
                          Pexp_ident "Array.length" (bytecomp/emitcode.ml[109,3378+21]..[109,3378+33])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[109,3378+34]..[109,3378+46])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[109,3378+34]..[109,3378+35])
                                Pexp_ident "!" (bytecomp/emitcode.ml[109,3378+34]..[109,3378+35])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[109,3378+35]..[109,3378+46])
                                    Pexp_ident "label_table" (bytecomp/emitcode.ml[109,3378+35]..[109,3378+46])
                              ]
                        ]
                  ]
            ]
            expression (bytecomp/emitcode.ml[110,3429+2]..[113,3624+26])
              Pexp_sequence
              expression (bytecomp/emitcode.ml[110,3429+2]..[110,3429+61])
                Pexp_while
                expression (bytecomp/emitcode.ml[110,3429+8]..[110,3429+27])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[110,3429+15]..[110,3429+17])
                    Pexp_ident ">=" (bytecomp/emitcode.ml[110,3429+15]..[110,3429+17])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[110,3429+8]..[110,3429+14])
                        Pexp_ident "needed" (bytecomp/emitcode.ml[110,3429+8]..[110,3429+14])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[110,3429+18]..[110,3429+27])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[110,3429+18]..[110,3429+19])
                          Pexp_ident "!" (bytecomp/emitcode.ml[110,3429+18]..[110,3429+19])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[110,3429+19]..[110,3429+27])
                              Pexp_ident "new_size" (bytecomp/emitcode.ml[110,3429+19]..[110,3429+27])
                        ]
                  ]
                expression (bytecomp/emitcode.ml[110,3429+31]..[110,3429+56])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[110,3429+40]..[110,3429+42])
                    Pexp_ident ":=" (bytecomp/emitcode.ml[110,3429+40]..[110,3429+42])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[110,3429+31]..[110,3429+39])
                        Pexp_ident "new_size" (bytecomp/emitcode.ml[110,3429+31]..[110,3429+39])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[110,3429+43]..[110,3429+56])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[110,3429+45]..[110,3429+46])
                          Pexp_ident "*" (bytecomp/emitcode.ml[110,3429+45]..[110,3429+46])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[110,3429+43]..[110,3429+44])
                              Pexp_constant PConst_int (2,None)
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[110,3429+47]..[110,3429+56])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[110,3429+47]..[110,3429+48])
                                Pexp_ident "!" (bytecomp/emitcode.ml[110,3429+47]..[110,3429+48])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[110,3429+48]..[110,3429+56])
                                    Pexp_ident "new_size" (bytecomp/emitcode.ml[110,3429+48]..[110,3429+56])
                              ]
                        ]
                  ]
              expression (bytecomp/emitcode.ml[111,3492+2]..[113,3624+26])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (bytecomp/emitcode.ml[111,3492+6]..[111,3492+15])
                      Ppat_var "new_table" (bytecomp/emitcode.ml[111,3492+6]..[111,3492+15])
                    expression (bytecomp/emitcode.ml[111,3492+18]..[111,3492+59])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[111,3492+18]..[111,3492+28])
                        Pexp_ident "Array.make" (bytecomp/emitcode.ml[111,3492+18]..[111,3492+28])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[111,3492+29]..[111,3492+38])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[111,3492+29]..[111,3492+30])
                              Pexp_ident "!" (bytecomp/emitcode.ml[111,3492+29]..[111,3492+30])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[111,3492+30]..[111,3492+38])
                                  Pexp_ident "new_size" (bytecomp/emitcode.ml[111,3492+30]..[111,3492+38])
                            ]
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[111,3492+39]..[111,3492+59])
                            Pexp_construct "Label_undefined" (bytecomp/emitcode.ml[111,3492+40]..[111,3492+55])
                            Some
                              expression (bytecomp/emitcode.ml[111,3492+56]..[111,3492+58])
                                Pexp_construct "[]" (bytecomp/emitcode.ml[111,3492+56]..[111,3492+58])
                                None
                      ]
                ]
                expression (bytecomp/emitcode.ml[112,3555+2]..[113,3624+26])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[112,3555+2]..[112,3555+67])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[112,3555+2]..[112,3555+12])
                      Pexp_ident "Array.blit" (bytecomp/emitcode.ml[112,3555+2]..[112,3555+12])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[112,3555+13]..[112,3555+25])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[112,3555+13]..[112,3555+14])
                            Pexp_ident "!" (bytecomp/emitcode.ml[112,3555+13]..[112,3555+14])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[112,3555+14]..[112,3555+25])
                                Pexp_ident "label_table" (bytecomp/emitcode.ml[112,3555+14]..[112,3555+25])
                          ]
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[112,3555+26]..[112,3555+27])
                          Pexp_constant PConst_int (0,None)
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[112,3555+28]..[112,3555+37])
                          Pexp_ident "new_table" (bytecomp/emitcode.ml[112,3555+28]..[112,3555+37])
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[112,3555+38]..[112,3555+39])
                          Pexp_constant PConst_int (0,None)
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[112,3555+40]..[112,3555+67])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[112,3555+41]..[112,3555+53])
                            Pexp_ident "Array.length" (bytecomp/emitcode.ml[112,3555+41]..[112,3555+53])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[112,3555+54]..[112,3555+66])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[112,3555+54]..[112,3555+55])
                                  Pexp_ident "!" (bytecomp/emitcode.ml[112,3555+54]..[112,3555+55])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[112,3555+55]..[112,3555+66])
                                      Pexp_ident "label_table" (bytecomp/emitcode.ml[112,3555+55]..[112,3555+66])
                                ]
                          ]
                    ]
                  expression (bytecomp/emitcode.ml[113,3624+2]..[113,3624+26])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[113,3624+14]..[113,3624+16])
                      Pexp_ident ":=" (bytecomp/emitcode.ml[113,3624+14]..[113,3624+16])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[113,3624+2]..[113,3624+13])
                          Pexp_ident "label_table" (bytecomp/emitcode.ml[113,3624+2]..[113,3624+13])
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[113,3624+17]..[113,3624+26])
                          Pexp_ident "new_table" (bytecomp/emitcode.ml[113,3624+17]..[113,3624+26])
                    ]
    ]
  structure_item (bytecomp/emitcode.ml[115,3652+0]..[120,3925+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[115,3652+4]..[115,3652+13])
          Ppat_var "backpatch" (bytecomp/emitcode.ml[115,3652+4]..[115,3652+13])
        expression (bytecomp/emitcode.ml[115,3652+14]..[120,3925+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[115,3652+14]..[115,3652+25])
            Ppat_tuple
            [
              pattern (bytecomp/emitcode.ml[115,3652+15]..[115,3652+18])
                Ppat_var "pos" (bytecomp/emitcode.ml[115,3652+15]..[115,3652+18])
              pattern (bytecomp/emitcode.ml[115,3652+20]..[115,3652+24])
                Ppat_var "orig" (bytecomp/emitcode.ml[115,3652+20]..[115,3652+24])
            ]
          expression (bytecomp/emitcode.ml[116,3680+2]..[120,3925+69])
            Pexp_let Nonrec
            [
              <def>
                pattern (bytecomp/emitcode.ml[116,3680+6]..[116,3680+11])
                  Ppat_var "displ" (bytecomp/emitcode.ml[116,3680+6]..[116,3680+11])
                expression (bytecomp/emitcode.ml[116,3680+14]..[116,3680+42])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[116,3680+37]..[116,3680+40])
                    Pexp_ident "asr" (bytecomp/emitcode.ml[116,3680+37]..[116,3680+40])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[116,3680+14]..[116,3680+36])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[116,3680+29]..[116,3680+30])
                          Pexp_ident "-" (bytecomp/emitcode.ml[116,3680+29]..[116,3680+30])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[116,3680+15]..[116,3680+28])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[116,3680+15]..[116,3680+16])
                                Pexp_ident "!" (bytecomp/emitcode.ml[116,3680+15]..[116,3680+16])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[116,3680+16]..[116,3680+28])
                                    Pexp_ident "out_position" (bytecomp/emitcode.ml[116,3680+16]..[116,3680+28])
                              ]
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[116,3680+31]..[116,3680+35])
                              Pexp_ident "orig" (bytecomp/emitcode.ml[116,3680+31]..[116,3680+35])
                        ]
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[116,3680+41]..[116,3680+42])
                        Pexp_constant PConst_int (2,None)
                  ]
            ]
            expression (bytecomp/emitcode.ml[117,3726+2]..[120,3925+69])
              Pexp_sequence
              expression (bytecomp/emitcode.ml[117,3726+2]..[117,3726+56])
                Pexp_apply
                expression (bytecomp/emitcode.ml[117,3726+2]..[117,3726+16])
                  Pexp_ident "LongString.set" (bytecomp/emitcode.ml[117,3726+2]..[117,3726+16])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[117,3726+17]..[117,3726+28])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[117,3726+17]..[117,3726+18])
                        Pexp_ident "!" (bytecomp/emitcode.ml[117,3726+17]..[117,3726+18])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[117,3726+18]..[117,3726+28])
                            Pexp_ident "out_buffer" (bytecomp/emitcode.ml[117,3726+18]..[117,3726+28])
                      ]
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[117,3726+29]..[117,3726+32])
                      Pexp_ident "pos" (bytecomp/emitcode.ml[117,3726+29]..[117,3726+32])
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[117,3726+33]..[117,3726+56])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[117,3726+34]..[117,3726+49])
                        Pexp_ident "Char.unsafe_chr" (bytecomp/emitcode.ml[117,3726+34]..[117,3726+49])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[117,3726+50]..[117,3726+55])
                            Pexp_ident "displ" (bytecomp/emitcode.ml[117,3726+50]..[117,3726+55])
                      ]
                ]
              expression (bytecomp/emitcode.ml[118,3784+2]..[120,3925+69])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[118,3784+2]..[118,3784+68])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[118,3784+2]..[118,3784+16])
                    Pexp_ident "LongString.set" (bytecomp/emitcode.ml[118,3784+2]..[118,3784+16])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[118,3784+17]..[118,3784+28])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[118,3784+17]..[118,3784+18])
                          Pexp_ident "!" (bytecomp/emitcode.ml[118,3784+17]..[118,3784+18])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[118,3784+18]..[118,3784+28])
                              Pexp_ident "out_buffer" (bytecomp/emitcode.ml[118,3784+18]..[118,3784+28])
                        ]
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[118,3784+29]..[118,3784+36])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[118,3784+33]..[118,3784+34])
                          Pexp_ident "+" (bytecomp/emitcode.ml[118,3784+33]..[118,3784+34])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[118,3784+30]..[118,3784+33])
                              Pexp_ident "pos" (bytecomp/emitcode.ml[118,3784+30]..[118,3784+33])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[118,3784+34]..[118,3784+35])
                              Pexp_constant PConst_int (1,None)
                        ]
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[118,3784+37]..[118,3784+68])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[118,3784+38]..[118,3784+53])
                          Pexp_ident "Char.unsafe_chr" (bytecomp/emitcode.ml[118,3784+38]..[118,3784+53])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[118,3784+54]..[118,3784+67])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[118,3784+61]..[118,3784+64])
                                Pexp_ident "asr" (bytecomp/emitcode.ml[118,3784+61]..[118,3784+64])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[118,3784+55]..[118,3784+60])
                                    Pexp_ident "displ" (bytecomp/emitcode.ml[118,3784+55]..[118,3784+60])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[118,3784+65]..[118,3784+66])
                                    Pexp_constant PConst_int (8,None)
                              ]
                        ]
                  ]
                expression (bytecomp/emitcode.ml[119,3854+2]..[120,3925+69])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[119,3854+2]..[119,3854+69])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[119,3854+2]..[119,3854+16])
                      Pexp_ident "LongString.set" (bytecomp/emitcode.ml[119,3854+2]..[119,3854+16])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[119,3854+17]..[119,3854+28])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[119,3854+17]..[119,3854+18])
                            Pexp_ident "!" (bytecomp/emitcode.ml[119,3854+17]..[119,3854+18])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[119,3854+18]..[119,3854+28])
                                Pexp_ident "out_buffer" (bytecomp/emitcode.ml[119,3854+18]..[119,3854+28])
                          ]
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[119,3854+29]..[119,3854+36])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[119,3854+33]..[119,3854+34])
                            Pexp_ident "+" (bytecomp/emitcode.ml[119,3854+33]..[119,3854+34])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[119,3854+30]..[119,3854+33])
                                Pexp_ident "pos" (bytecomp/emitcode.ml[119,3854+30]..[119,3854+33])
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[119,3854+34]..[119,3854+35])
                                Pexp_constant PConst_int (2,None)
                          ]
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[119,3854+37]..[119,3854+69])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[119,3854+38]..[119,3854+53])
                            Pexp_ident "Char.unsafe_chr" (bytecomp/emitcode.ml[119,3854+38]..[119,3854+53])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[119,3854+54]..[119,3854+68])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[119,3854+61]..[119,3854+64])
                                  Pexp_ident "asr" (bytecomp/emitcode.ml[119,3854+61]..[119,3854+64])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[119,3854+55]..[119,3854+60])
                                      Pexp_ident "displ" (bytecomp/emitcode.ml[119,3854+55]..[119,3854+60])
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[119,3854+65]..[119,3854+67])
                                      Pexp_constant PConst_int (16,None)
                                ]
                          ]
                    ]
                  expression (bytecomp/emitcode.ml[120,3925+2]..[120,3925+69])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[120,3925+2]..[120,3925+16])
                      Pexp_ident "LongString.set" (bytecomp/emitcode.ml[120,3925+2]..[120,3925+16])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[120,3925+17]..[120,3925+28])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[120,3925+17]..[120,3925+18])
                            Pexp_ident "!" (bytecomp/emitcode.ml[120,3925+17]..[120,3925+18])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[120,3925+18]..[120,3925+28])
                                Pexp_ident "out_buffer" (bytecomp/emitcode.ml[120,3925+18]..[120,3925+28])
                          ]
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[120,3925+29]..[120,3925+36])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[120,3925+33]..[120,3925+34])
                            Pexp_ident "+" (bytecomp/emitcode.ml[120,3925+33]..[120,3925+34])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[120,3925+30]..[120,3925+33])
                                Pexp_ident "pos" (bytecomp/emitcode.ml[120,3925+30]..[120,3925+33])
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[120,3925+34]..[120,3925+35])
                                Pexp_constant PConst_int (3,None)
                          ]
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[120,3925+37]..[120,3925+69])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[120,3925+38]..[120,3925+53])
                            Pexp_ident "Char.unsafe_chr" (bytecomp/emitcode.ml[120,3925+38]..[120,3925+53])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[120,3925+54]..[120,3925+68])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[120,3925+61]..[120,3925+64])
                                  Pexp_ident "asr" (bytecomp/emitcode.ml[120,3925+61]..[120,3925+64])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[120,3925+55]..[120,3925+60])
                                      Pexp_ident "displ" (bytecomp/emitcode.ml[120,3925+55]..[120,3925+60])
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[120,3925+65]..[120,3925+67])
                                      Pexp_constant PConst_int (24,None)
                                ]
                          ]
                    ]
    ]
  structure_item (bytecomp/emitcode.ml[122,3996+0]..[129,4255+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[122,3996+4]..[122,3996+16])
          Ppat_var "define_label" (bytecomp/emitcode.ml[122,3996+4]..[122,3996+16])
        expression (bytecomp/emitcode.ml[122,3996+17]..[129,4255+57]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[122,3996+17]..[122,3996+20])
            Ppat_var "lbl" (bytecomp/emitcode.ml[122,3996+17]..[122,3996+20])
          expression (bytecomp/emitcode.ml[123,4019+2]..[129,4255+57])
            Pexp_sequence
            expression (bytecomp/emitcode.ml[123,4019+2]..[123,4019+65])
              Pexp_ifthenelse
              expression (bytecomp/emitcode.ml[123,4019+5]..[123,4019+37])
                Pexp_apply
                expression (bytecomp/emitcode.ml[123,4019+9]..[123,4019+11])
                  Pexp_ident ">=" (bytecomp/emitcode.ml[123,4019+9]..[123,4019+11])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[123,4019+5]..[123,4019+8])
                      Pexp_ident "lbl" (bytecomp/emitcode.ml[123,4019+5]..[123,4019+8])
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[123,4019+12]..[123,4019+37])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[123,4019+12]..[123,4019+24])
                        Pexp_ident "Array.length" (bytecomp/emitcode.ml[123,4019+12]..[123,4019+24])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[123,4019+25]..[123,4019+37])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[123,4019+25]..[123,4019+26])
                              Pexp_ident "!" (bytecomp/emitcode.ml[123,4019+25]..[123,4019+26])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[123,4019+26]..[123,4019+37])
                                  Pexp_ident "label_table" (bytecomp/emitcode.ml[123,4019+26]..[123,4019+37])
                            ]
                      ]
                ]
              expression (bytecomp/emitcode.ml[123,4019+43]..[123,4019+65])
                Pexp_apply
                expression (bytecomp/emitcode.ml[123,4019+43]..[123,4019+61])
                  Pexp_ident "extend_label_table" (bytecomp/emitcode.ml[123,4019+43]..[123,4019+61])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[123,4019+62]..[123,4019+65])
                      Pexp_ident "lbl" (bytecomp/emitcode.ml[123,4019+62]..[123,4019+65])
                ]
              None
            expression (bytecomp/emitcode.ml[124,4086+2]..[129,4255+57])
              Pexp_match
              expression (bytecomp/emitcode.ml[124,4086+8]..[124,4086+28])
                Pexp_apply
                expression (bytecomp/emitcode.ml[124,4086+8]..[124,4086+28]) ghost
                  Pexp_ident "Array.get" (bytecomp/emitcode.ml[124,4086+8]..[124,4086+28]) ghost
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[124,4086+8]..[124,4086+22])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[124,4086+9]..[124,4086+10])
                        Pexp_ident "!" (bytecomp/emitcode.ml[124,4086+9]..[124,4086+10])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[124,4086+10]..[124,4086+21])
                            Pexp_ident "label_table" (bytecomp/emitcode.ml[124,4086+10]..[124,4086+21])
                      ]
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[124,4086+24]..[124,4086+27])
                      Pexp_ident "lbl" (bytecomp/emitcode.ml[124,4086+24]..[124,4086+27])
                ]
              [
                <case>
                  pattern (bytecomp/emitcode.ml[125,4120+4]..[125,4120+19])
                    Ppat_construct "Label_defined" (bytecomp/emitcode.ml[125,4120+4]..[125,4120+17])
                    Some
                      []
                      pattern (bytecomp/emitcode.ml[125,4120+18]..[125,4120+19])
                        Ppat_any
                  expression (bytecomp/emitcode.ml[126,4143+6]..[126,4143+41])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[126,4143+6]..[126,4143+17])
                      Pexp_ident "fatal_error" (bytecomp/emitcode.ml[126,4143+6]..[126,4143+17])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[126,4143+18]..[126,4143+41])
                          Pexp_constant PConst_string("Emitcode.define_label",(bytecomp/emitcode.ml[126,4143+19]..[126,4143+40]),None)
                    ]
                <case>
                  pattern (bytecomp/emitcode.ml[127,4185+4]..[127,4185+29])
                    Ppat_construct "Label_undefined" (bytecomp/emitcode.ml[127,4185+4]..[127,4185+19])
                    Some
                      []
                      pattern (bytecomp/emitcode.ml[127,4185+20]..[127,4185+29])
                        Ppat_var "patchlist" (bytecomp/emitcode.ml[127,4185+20]..[127,4185+29])
                  expression (bytecomp/emitcode.ml[128,4218+6]..[129,4255+57])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[128,4218+6]..[128,4218+35])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[128,4218+6]..[128,4218+15])
                        Pexp_ident "List.iter" (bytecomp/emitcode.ml[128,4218+6]..[128,4218+15])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[128,4218+16]..[128,4218+25])
                            Pexp_ident "backpatch" (bytecomp/emitcode.ml[128,4218+16]..[128,4218+25])
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[128,4218+26]..[128,4218+35])
                            Pexp_ident "patchlist" (bytecomp/emitcode.ml[128,4218+26]..[128,4218+35])
                      ]
                    expression (bytecomp/emitcode.ml[129,4255+6]..[129,4255+57])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[129,4255+6]..[129,4255+57]) ghost
                        Pexp_ident "Array.set" (bytecomp/emitcode.ml[129,4255+6]..[129,4255+57]) ghost
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[129,4255+6]..[129,4255+20])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[129,4255+7]..[129,4255+8])
                              Pexp_ident "!" (bytecomp/emitcode.ml[129,4255+7]..[129,4255+8])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[129,4255+8]..[129,4255+19])
                                  Pexp_ident "label_table" (bytecomp/emitcode.ml[129,4255+8]..[129,4255+19])
                            ]
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[129,4255+22]..[129,4255+25])
                            Pexp_ident "lbl" (bytecomp/emitcode.ml[129,4255+22]..[129,4255+25])
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[129,4255+30]..[129,4255+57])
                            Pexp_construct "Label_defined" (bytecomp/emitcode.ml[129,4255+30]..[129,4255+43])
                            Some
                              expression (bytecomp/emitcode.ml[129,4255+44]..[129,4255+57])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[129,4255+44]..[129,4255+45])
                                  Pexp_ident "!" (bytecomp/emitcode.ml[129,4255+44]..[129,4255+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[129,4255+45]..[129,4255+57])
                                      Pexp_ident "out_position" (bytecomp/emitcode.ml[129,4255+45]..[129,4255+57])
                                ]
                      ]
              ]
    ]
  structure_item (bytecomp/emitcode.ml[131,4314+0]..[139,4634+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[131,4314+4]..[131,4314+23])
          Ppat_var "out_label_with_orig" (bytecomp/emitcode.ml[131,4314+4]..[131,4314+23])
        expression (bytecomp/emitcode.ml[131,4314+24]..[139,4634+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[131,4314+24]..[131,4314+28])
            Ppat_var "orig" (bytecomp/emitcode.ml[131,4314+24]..[131,4314+28])
          expression (bytecomp/emitcode.ml[131,4314+29]..[139,4634+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (bytecomp/emitcode.ml[131,4314+29]..[131,4314+32])
              Ppat_var "lbl" (bytecomp/emitcode.ml[131,4314+29]..[131,4314+32])
            expression (bytecomp/emitcode.ml[132,4349+2]..[139,4634+15])
              Pexp_sequence
              expression (bytecomp/emitcode.ml[132,4349+2]..[132,4349+65])
                Pexp_ifthenelse
                expression (bytecomp/emitcode.ml[132,4349+5]..[132,4349+37])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[132,4349+9]..[132,4349+11])
                    Pexp_ident ">=" (bytecomp/emitcode.ml[132,4349+9]..[132,4349+11])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[132,4349+5]..[132,4349+8])
                        Pexp_ident "lbl" (bytecomp/emitcode.ml[132,4349+5]..[132,4349+8])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[132,4349+12]..[132,4349+37])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[132,4349+12]..[132,4349+24])
                          Pexp_ident "Array.length" (bytecomp/emitcode.ml[132,4349+12]..[132,4349+24])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[132,4349+25]..[132,4349+37])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[132,4349+25]..[132,4349+26])
                                Pexp_ident "!" (bytecomp/emitcode.ml[132,4349+25]..[132,4349+26])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[132,4349+26]..[132,4349+37])
                                    Pexp_ident "label_table" (bytecomp/emitcode.ml[132,4349+26]..[132,4349+37])
                              ]
                        ]
                  ]
                expression (bytecomp/emitcode.ml[132,4349+43]..[132,4349+65])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[132,4349+43]..[132,4349+61])
                    Pexp_ident "extend_label_table" (bytecomp/emitcode.ml[132,4349+43]..[132,4349+61])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[132,4349+62]..[132,4349+65])
                        Pexp_ident "lbl" (bytecomp/emitcode.ml[132,4349+62]..[132,4349+65])
                  ]
                None
              expression (bytecomp/emitcode.ml[133,4416+2]..[139,4634+15])
                Pexp_match
                expression (bytecomp/emitcode.ml[133,4416+8]..[133,4416+28])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[133,4416+8]..[133,4416+28]) ghost
                    Pexp_ident "Array.get" (bytecomp/emitcode.ml[133,4416+8]..[133,4416+28]) ghost
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[133,4416+8]..[133,4416+22])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[133,4416+9]..[133,4416+10])
                          Pexp_ident "!" (bytecomp/emitcode.ml[133,4416+9]..[133,4416+10])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[133,4416+10]..[133,4416+21])
                              Pexp_ident "label_table" (bytecomp/emitcode.ml[133,4416+10]..[133,4416+21])
                        ]
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[133,4416+24]..[133,4416+27])
                        Pexp_ident "lbl" (bytecomp/emitcode.ml[133,4416+24]..[133,4416+27])
                  ]
                [
                  <case>
                    pattern (bytecomp/emitcode.ml[134,4450+4]..[134,4450+21])
                      Ppat_construct "Label_defined" (bytecomp/emitcode.ml[134,4450+4]..[134,4450+17])
                      Some
                        []
                        pattern (bytecomp/emitcode.ml[134,4450+18]..[134,4450+21])
                          Ppat_var "def" (bytecomp/emitcode.ml[134,4450+18]..[134,4450+21])
                    expression (bytecomp/emitcode.ml[135,4475+6]..[135,4475+33])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[135,4475+6]..[135,4475+13])
                        Pexp_ident "out_int" (bytecomp/emitcode.ml[135,4475+6]..[135,4475+13])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[135,4475+13]..[135,4475+33])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[135,4475+27]..[135,4475+30])
                              Pexp_ident "asr" (bytecomp/emitcode.ml[135,4475+27]..[135,4475+30])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[135,4475+14]..[135,4475+26])
                                  Pexp_apply
                                  expression (bytecomp/emitcode.ml[135,4475+19]..[135,4475+20])
                                    Pexp_ident "-" (bytecomp/emitcode.ml[135,4475+19]..[135,4475+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[135,4475+15]..[135,4475+18])
                                        Pexp_ident "def" (bytecomp/emitcode.ml[135,4475+15]..[135,4475+18])
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[135,4475+21]..[135,4475+25])
                                        Pexp_ident "orig" (bytecomp/emitcode.ml[135,4475+21]..[135,4475+25])
                                  ]
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[135,4475+31]..[135,4475+32])
                                  Pexp_constant PConst_int (2,None)
                            ]
                      ]
                  <case>
                    pattern (bytecomp/emitcode.ml[136,4509+4]..[136,4509+29])
                      Ppat_construct "Label_undefined" (bytecomp/emitcode.ml[136,4509+4]..[136,4509+19])
                      Some
                        []
                        pattern (bytecomp/emitcode.ml[136,4509+20]..[136,4509+29])
                          Ppat_var "patchlist" (bytecomp/emitcode.ml[136,4509+20]..[136,4509+29])
                    expression (bytecomp/emitcode.ml[137,4542+6]..[139,4634+15])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[137,4542+6]..[138,4572+60])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[137,4542+6]..[138,4572+60]) ghost
                          Pexp_ident "Array.set" (bytecomp/emitcode.ml[137,4542+6]..[138,4572+60]) ghost
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[137,4542+6]..[137,4542+20])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[137,4542+7]..[137,4542+8])
                                Pexp_ident "!" (bytecomp/emitcode.ml[137,4542+7]..[137,4542+8])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[137,4542+8]..[137,4542+19])
                                    Pexp_ident "label_table" (bytecomp/emitcode.ml[137,4542+8]..[137,4542+19])
                              ]
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[137,4542+22]..[137,4542+25])
                              Pexp_ident "lbl" (bytecomp/emitcode.ml[137,4542+22]..[137,4542+25])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[138,4572+9]..[138,4572+60])
                              Pexp_construct "Label_undefined" (bytecomp/emitcode.ml[138,4572+9]..[138,4572+24])
                              Some
                                expression (bytecomp/emitcode.ml[138,4572+24]..[138,4572+60])
                                  Pexp_construct "::" (bytecomp/emitcode.ml[138,4572+47]..[138,4572+49])
                                  Some
                                    expression (bytecomp/emitcode.ml[138,4572+25]..[138,4572+59]) ghost
                                      Pexp_tuple
                                      [
                                        expression (bytecomp/emitcode.ml[138,4572+25]..[138,4572+46])
                                          Pexp_tuple
                                          [
                                            expression (bytecomp/emitcode.ml[138,4572+26]..[138,4572+39])
                                              Pexp_apply
                                              expression (bytecomp/emitcode.ml[138,4572+26]..[138,4572+27])
                                                Pexp_ident "!" (bytecomp/emitcode.ml[138,4572+26]..[138,4572+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (bytecomp/emitcode.ml[138,4572+27]..[138,4572+39])
                                                    Pexp_ident "out_position" (bytecomp/emitcode.ml[138,4572+27]..[138,4572+39])
                                              ]
                                            expression (bytecomp/emitcode.ml[138,4572+41]..[138,4572+45])
                                              Pexp_ident "orig" (bytecomp/emitcode.ml[138,4572+41]..[138,4572+45])
                                          ]
                                        expression (bytecomp/emitcode.ml[138,4572+50]..[138,4572+59])
                                          Pexp_ident "patchlist" (bytecomp/emitcode.ml[138,4572+50]..[138,4572+59])
                                      ]
                        ]
                      expression (bytecomp/emitcode.ml[139,4634+6]..[139,4634+15])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[139,4634+6]..[139,4634+13])
                          Pexp_ident "out_int" (bytecomp/emitcode.ml[139,4634+6]..[139,4634+13])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[139,4634+14]..[139,4634+15])
                              Pexp_constant PConst_int (0,None)
                        ]
                ]
    ]
  structure_item (bytecomp/emitcode.ml[141,4651+0]..[141,4651+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[141,4651+4]..[141,4651+13])
          Ppat_var "out_label" (bytecomp/emitcode.ml[141,4651+4]..[141,4651+13])
        expression (bytecomp/emitcode.ml[141,4651+14]..[141,4651+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[141,4651+14]..[141,4651+15])
            Ppat_var "l" (bytecomp/emitcode.ml[141,4651+14]..[141,4651+15])
          expression (bytecomp/emitcode.ml[141,4651+18]..[141,4651+53])
            Pexp_apply
            expression (bytecomp/emitcode.ml[141,4651+18]..[141,4651+37])
              Pexp_ident "out_label_with_orig" (bytecomp/emitcode.ml[141,4651+18]..[141,4651+37])
            [
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[141,4651+38]..[141,4651+51])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[141,4651+38]..[141,4651+39])
                    Pexp_ident "!" (bytecomp/emitcode.ml[141,4651+38]..[141,4651+39])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[141,4651+39]..[141,4651+51])
                        Pexp_ident "out_position" (bytecomp/emitcode.ml[141,4651+39]..[141,4651+51])
                  ]
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[141,4651+52]..[141,4651+53])
                  Pexp_ident "l" (bytecomp/emitcode.ml[141,4651+52]..[141,4651+53])
            ]
    ]
  structure_item (bytecomp/emitcode.ml[145,4736+0]..[145,4736+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[145,4736+4]..[145,4736+14])
          Ppat_var "reloc_info" (bytecomp/emitcode.ml[145,4736+4]..[145,4736+14])
        expression (bytecomp/emitcode.ml[145,4736+17]..[145,4736+51])
          Pexp_apply
          expression (bytecomp/emitcode.ml[145,4736+17]..[145,4736+20])
            Pexp_ident "ref" (bytecomp/emitcode.ml[145,4736+17]..[145,4736+20])
          [
            <arg>
            Nolabel
              expression (bytecomp/emitcode.ml[145,4736+21]..[145,4736+51])
                Pexp_constraint
                expression (bytecomp/emitcode.ml[145,4736+22]..[145,4736+24])
                  Pexp_construct "[]" (bytecomp/emitcode.ml[145,4736+22]..[145,4736+24])
                  None
                core_type (bytecomp/emitcode.ml[145,4736+27]..[145,4736+50])
                  Ptyp_constr "list" (bytecomp/emitcode.ml[145,4736+46]..[145,4736+50])
                  [
                    core_type (bytecomp/emitcode.ml[145,4736+28]..[145,4736+44])
                      Ptyp_tuple
                      [
                        core_type (bytecomp/emitcode.ml[145,4736+28]..[145,4736+38])
                          Ptyp_constr "reloc_info" (bytecomp/emitcode.ml[145,4736+28]..[145,4736+38])
                          []
                        core_type (bytecomp/emitcode.ml[145,4736+41]..[145,4736+44])
                          Ptyp_constr "int" (bytecomp/emitcode.ml[145,4736+41]..[145,4736+44])
                          []
                      ]
                  ]
          ]
    ]
  structure_item (bytecomp/emitcode.ml[147,4789+0]..[148,4806+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[147,4789+4]..[147,4789+9])
          Ppat_var "enter" (bytecomp/emitcode.ml[147,4789+4]..[147,4789+9])
        expression (bytecomp/emitcode.ml[147,4789+10]..[148,4806+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[147,4789+10]..[147,4789+14])
            Ppat_var "info" (bytecomp/emitcode.ml[147,4789+10]..[147,4789+14])
          expression (bytecomp/emitcode.ml[148,4806+2]..[148,4806+52])
            Pexp_apply
            expression (bytecomp/emitcode.ml[148,4806+13]..[148,4806+15])
              Pexp_ident ":=" (bytecomp/emitcode.ml[148,4806+13]..[148,4806+15])
            [
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[148,4806+2]..[148,4806+12])
                  Pexp_ident "reloc_info" (bytecomp/emitcode.ml[148,4806+2]..[148,4806+12])
              <arg>
              Nolabel
                expression (bytecomp/emitcode.ml[148,4806+16]..[148,4806+52])
                  Pexp_construct "::" (bytecomp/emitcode.ml[148,4806+38]..[148,4806+40])
                  Some
                    expression (bytecomp/emitcode.ml[148,4806+16]..[148,4806+52]) ghost
                      Pexp_tuple
                      [
                        expression (bytecomp/emitcode.ml[148,4806+16]..[148,4806+37])
                          Pexp_tuple
                          [
                            expression (bytecomp/emitcode.ml[148,4806+17]..[148,4806+21])
                              Pexp_ident "info" (bytecomp/emitcode.ml[148,4806+17]..[148,4806+21])
                            expression (bytecomp/emitcode.ml[148,4806+23]..[148,4806+36])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[148,4806+23]..[148,4806+24])
                                Pexp_ident "!" (bytecomp/emitcode.ml[148,4806+23]..[148,4806+24])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[148,4806+24]..[148,4806+36])
                                    Pexp_ident "out_position" (bytecomp/emitcode.ml[148,4806+24]..[148,4806+36])
                              ]
                          ]
                        expression (bytecomp/emitcode.ml[148,4806+41]..[148,4806+52])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[148,4806+41]..[148,4806+42])
                            Pexp_ident "!" (bytecomp/emitcode.ml[148,4806+41]..[148,4806+42])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[148,4806+42]..[148,4806+52])
                                Pexp_ident "reloc_info" (bytecomp/emitcode.ml[148,4806+42]..[148,4806+52])
                          ]
                      ]
            ]
    ]
  structure_item (bytecomp/emitcode.ml[150,4860+0]..[161,5125+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[150,4860+4]..[150,4860+20])
          Ppat_var "slot_for_literal" (bytecomp/emitcode.ml[150,4860+4]..[150,4860+20])
        expression (bytecomp/emitcode.ml[150,4860+21]..[152,4914+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[150,4860+21]..[150,4860+23])
            Ppat_var "sc" (bytecomp/emitcode.ml[150,4860+21]..[150,4860+23])
          expression (bytecomp/emitcode.ml[151,4886+2]..[152,4914+11])
            Pexp_sequence
            expression (bytecomp/emitcode.ml[151,4886+2]..[151,4886+26])
              Pexp_apply
              expression (bytecomp/emitcode.ml[151,4886+2]..[151,4886+7])
                Pexp_ident "enter" (bytecomp/emitcode.ml[151,4886+2]..[151,4886+7])
              [
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[151,4886+8]..[151,4886+26])
                    Pexp_construct "Reloc_literal" (bytecomp/emitcode.ml[151,4886+9]..[151,4886+22])
                    Some
                      expression (bytecomp/emitcode.ml[151,4886+23]..[151,4886+25])
                        Pexp_ident "sc" (bytecomp/emitcode.ml[151,4886+23]..[151,4886+25])
              ]
            expression (bytecomp/emitcode.ml[152,4914+2]..[152,4914+11])
              Pexp_apply
              expression (bytecomp/emitcode.ml[152,4914+2]..[152,4914+9])
                Pexp_ident "out_int" (bytecomp/emitcode.ml[152,4914+2]..[152,4914+9])
              [
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[152,4914+10]..[152,4914+11])
                    Pexp_constant PConst_int (0,None)
              ]
      <def>
        pattern (bytecomp/emitcode.ml[153,4926+4]..[153,4926+22])
          Ppat_var "slot_for_getglobal" (bytecomp/emitcode.ml[153,4926+4]..[153,4926+22])
        expression (bytecomp/emitcode.ml[153,4926+23]..[155,4984+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[153,4926+23]..[153,4926+25])
            Ppat_var "id" (bytecomp/emitcode.ml[153,4926+23]..[153,4926+25])
          expression (bytecomp/emitcode.ml[154,4954+2]..[155,4984+11])
            Pexp_sequence
            expression (bytecomp/emitcode.ml[154,4954+2]..[154,4954+28])
              Pexp_apply
              expression (bytecomp/emitcode.ml[154,4954+2]..[154,4954+7])
                Pexp_ident "enter" (bytecomp/emitcode.ml[154,4954+2]..[154,4954+7])
              [
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[154,4954+8]..[154,4954+28])
                    Pexp_construct "Reloc_getglobal" (bytecomp/emitcode.ml[154,4954+9]..[154,4954+24])
                    Some
                      expression (bytecomp/emitcode.ml[154,4954+25]..[154,4954+27])
                        Pexp_ident "id" (bytecomp/emitcode.ml[154,4954+25]..[154,4954+27])
              ]
            expression (bytecomp/emitcode.ml[155,4984+2]..[155,4984+11])
              Pexp_apply
              expression (bytecomp/emitcode.ml[155,4984+2]..[155,4984+9])
                Pexp_ident "out_int" (bytecomp/emitcode.ml[155,4984+2]..[155,4984+9])
              [
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[155,4984+10]..[155,4984+11])
                    Pexp_constant PConst_int (0,None)
              ]
      <def>
        pattern (bytecomp/emitcode.ml[156,4996+4]..[156,4996+22])
          Ppat_var "slot_for_setglobal" (bytecomp/emitcode.ml[156,4996+4]..[156,4996+22])
        expression (bytecomp/emitcode.ml[156,4996+23]..[158,5054+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[156,4996+23]..[156,4996+25])
            Ppat_var "id" (bytecomp/emitcode.ml[156,4996+23]..[156,4996+25])
          expression (bytecomp/emitcode.ml[157,5024+2]..[158,5054+11])
            Pexp_sequence
            expression (bytecomp/emitcode.ml[157,5024+2]..[157,5024+28])
              Pexp_apply
              expression (bytecomp/emitcode.ml[157,5024+2]..[157,5024+7])
                Pexp_ident "enter" (bytecomp/emitcode.ml[157,5024+2]..[157,5024+7])
              [
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[157,5024+8]..[157,5024+28])
                    Pexp_construct "Reloc_setglobal" (bytecomp/emitcode.ml[157,5024+9]..[157,5024+24])
                    Some
                      expression (bytecomp/emitcode.ml[157,5024+25]..[157,5024+27])
                        Pexp_ident "id" (bytecomp/emitcode.ml[157,5024+25]..[157,5024+27])
              ]
            expression (bytecomp/emitcode.ml[158,5054+2]..[158,5054+11])
              Pexp_apply
              expression (bytecomp/emitcode.ml[158,5054+2]..[158,5054+9])
                Pexp_ident "out_int" (bytecomp/emitcode.ml[158,5054+2]..[158,5054+9])
              [
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[158,5054+10]..[158,5054+11])
                    Pexp_constant PConst_int (0,None)
              ]
      <def>
        pattern (bytecomp/emitcode.ml[159,5066+4]..[159,5066+19])
          Ppat_var "slot_for_c_prim" (bytecomp/emitcode.ml[159,5066+4]..[159,5066+19])
        expression (bytecomp/emitcode.ml[159,5066+20]..[161,5125+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[159,5066+20]..[159,5066+24])
            Ppat_var "name" (bytecomp/emitcode.ml[159,5066+20]..[159,5066+24])
          expression (bytecomp/emitcode.ml[160,5093+2]..[161,5125+11])
            Pexp_sequence
            expression (bytecomp/emitcode.ml[160,5093+2]..[160,5093+30])
              Pexp_apply
              expression (bytecomp/emitcode.ml[160,5093+2]..[160,5093+7])
                Pexp_ident "enter" (bytecomp/emitcode.ml[160,5093+2]..[160,5093+7])
              [
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[160,5093+8]..[160,5093+30])
                    Pexp_construct "Reloc_primitive" (bytecomp/emitcode.ml[160,5093+9]..[160,5093+24])
                    Some
                      expression (bytecomp/emitcode.ml[160,5093+25]..[160,5093+29])
                        Pexp_ident "name" (bytecomp/emitcode.ml[160,5093+25]..[160,5093+29])
              ]
            expression (bytecomp/emitcode.ml[161,5125+2]..[161,5125+11])
              Pexp_apply
              expression (bytecomp/emitcode.ml[161,5125+2]..[161,5125+9])
                Pexp_ident "out_int" (bytecomp/emitcode.ml[161,5125+2]..[161,5125+9])
              [
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[161,5125+10]..[161,5125+11])
                    Pexp_constant PConst_int (0,None)
              ]
    ]
  structure_item (bytecomp/emitcode.ml[165,5162+0]..[165,5162+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[165,5162+4]..[165,5162+10])
          Ppat_var "events" (bytecomp/emitcode.ml[165,5162+4]..[165,5162+10])
        expression (bytecomp/emitcode.ml[165,5162+13]..[165,5162+40])
          Pexp_apply
          expression (bytecomp/emitcode.ml[165,5162+13]..[165,5162+16])
            Pexp_ident "ref" (bytecomp/emitcode.ml[165,5162+13]..[165,5162+16])
          [
            <arg>
            Nolabel
              expression (bytecomp/emitcode.ml[165,5162+17]..[165,5162+40])
                Pexp_constraint
                expression (bytecomp/emitcode.ml[165,5162+18]..[165,5162+20])
                  Pexp_construct "[]" (bytecomp/emitcode.ml[165,5162+18]..[165,5162+20])
                  None
                core_type (bytecomp/emitcode.ml[165,5162+23]..[165,5162+39])
                  Ptyp_constr "list" (bytecomp/emitcode.ml[165,5162+35]..[165,5162+39])
                  [
                    core_type (bytecomp/emitcode.ml[165,5162+23]..[165,5162+34])
                      Ptyp_constr "debug_event" (bytecomp/emitcode.ml[165,5162+23]..[165,5162+34])
                      []
                  ]
          ]
    ]
  structure_item (bytecomp/emitcode.ml[166,5203+0]..[166,5203+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[166,5203+4]..[166,5203+14])
          Ppat_var "debug_dirs" (bytecomp/emitcode.ml[166,5203+4]..[166,5203+14])
        expression (bytecomp/emitcode.ml[166,5203+17]..[166,5203+37])
          Pexp_apply
          expression (bytecomp/emitcode.ml[166,5203+17]..[166,5203+20])
            Pexp_ident "ref" (bytecomp/emitcode.ml[166,5203+17]..[166,5203+20])
          [
            <arg>
            Nolabel
              expression (bytecomp/emitcode.ml[166,5203+21]..[166,5203+37])
                Pexp_ident "String.Set.empty" (bytecomp/emitcode.ml[166,5203+21]..[166,5203+37])
          ]
    ]
  structure_item (bytecomp/emitcode.ml[168,5242+0]..[177,5637+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[168,5242+4]..[168,5242+16])
          Ppat_var "record_event" (bytecomp/emitcode.ml[168,5242+4]..[168,5242+16])
        expression (bytecomp/emitcode.ml[168,5242+17]..[177,5637+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[168,5242+17]..[168,5242+19])
            Ppat_var "ev" (bytecomp/emitcode.ml[168,5242+17]..[168,5242+19])
          expression (bytecomp/emitcode.ml[169,5264+2]..[177,5637+25])
            Pexp_let Nonrec
            [
              <def>
                pattern (bytecomp/emitcode.ml[169,5264+6]..[169,5264+10])
                  Ppat_var "path" (bytecomp/emitcode.ml[169,5264+6]..[169,5264+10])
                expression (bytecomp/emitcode.ml[169,5264+13]..[169,5264+58])
                  Pexp_field
                  expression (bytecomp/emitcode.ml[169,5264+13]..[169,5264+41])
                    Pexp_field
                    expression (bytecomp/emitcode.ml[169,5264+13]..[169,5264+22])
                      Pexp_field
                      expression (bytecomp/emitcode.ml[169,5264+13]..[169,5264+15])
                        Pexp_ident "ev" (bytecomp/emitcode.ml[169,5264+13]..[169,5264+15])
                      "ev_loc" (bytecomp/emitcode.ml[169,5264+16]..[169,5264+22])
                    "Location.loc_start" (bytecomp/emitcode.ml[169,5264+23]..[169,5264+41])
                  "Lexing.pos_fname" (bytecomp/emitcode.ml[169,5264+42]..[169,5264+58])
            ]
            expression (bytecomp/emitcode.ml[170,5326+2]..[177,5637+25])
              Pexp_let Nonrec
              [
                <def>
                  pattern (bytecomp/emitcode.ml[170,5326+6]..[170,5326+13])
                    Ppat_var "abspath" (bytecomp/emitcode.ml[170,5326+6]..[170,5326+13])
                  expression (bytecomp/emitcode.ml[170,5326+16]..[170,5326+43])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[170,5326+16]..[170,5326+38])
                      Pexp_ident "Location.absolute_path" (bytecomp/emitcode.ml[170,5326+16]..[170,5326+38])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[170,5326+39]..[170,5326+43])
                          Pexp_ident "path" (bytecomp/emitcode.ml[170,5326+39]..[170,5326+43])
                    ]
              ]
              expression (bytecomp/emitcode.ml[171,5373+2]..[177,5637+25])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[171,5373+2]..[171,5373+69])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[171,5373+13]..[171,5373+15])
                    Pexp_ident ":=" (bytecomp/emitcode.ml[171,5373+13]..[171,5373+15])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[171,5373+2]..[171,5373+12])
                        Pexp_ident "debug_dirs" (bytecomp/emitcode.ml[171,5373+2]..[171,5373+12])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[171,5373+16]..[171,5373+69])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[171,5373+16]..[171,5373+30])
                          Pexp_ident "String.Set.add" (bytecomp/emitcode.ml[171,5373+16]..[171,5373+30])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[171,5373+31]..[171,5373+57])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[171,5373+32]..[171,5373+48])
                                Pexp_ident "Filename.dirname" (bytecomp/emitcode.ml[171,5373+32]..[171,5373+48])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[171,5373+49]..[171,5373+56])
                                    Pexp_ident "abspath" (bytecomp/emitcode.ml[171,5373+49]..[171,5373+56])
                              ]
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[171,5373+58]..[171,5373+69])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[171,5373+58]..[171,5373+59])
                                Pexp_ident "!" (bytecomp/emitcode.ml[171,5373+58]..[171,5373+59])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[171,5373+59]..[171,5373+69])
                                    Pexp_ident "debug_dirs" (bytecomp/emitcode.ml[171,5373+59]..[171,5373+69])
                              ]
                        ]
                  ]
                expression (bytecomp/emitcode.ml[172,5444+2]..[177,5637+25])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[172,5444+2]..[175,5600+5])
                    Pexp_ifthenelse
                    expression (bytecomp/emitcode.ml[172,5444+5]..[172,5444+30])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[172,5444+5]..[172,5444+25])
                        Pexp_ident "Filename.is_relative" (bytecomp/emitcode.ml[172,5444+5]..[172,5444+25])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[172,5444+26]..[172,5444+30])
                            Pexp_ident "path" (bytecomp/emitcode.ml[172,5444+26]..[172,5444+30])
                      ]
                    expression (bytecomp/emitcode.ml[172,5444+36]..[175,5600+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (bytecomp/emitcode.ml[173,5486+8]..[173,5486+11])
                            Ppat_var "cwd" (bytecomp/emitcode.ml[173,5486+8]..[173,5486+11])
                          expression (bytecomp/emitcode.ml[173,5486+14]..[173,5486+60])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[173,5486+14]..[173,5486+44])
                              Pexp_ident "Location.rewrite_absolute_path" (bytecomp/emitcode.ml[173,5486+14]..[173,5486+44])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[173,5486+45]..[173,5486+60])
                                  Pexp_apply
                                  expression (bytecomp/emitcode.ml[173,5486+46]..[173,5486+56])
                                    Pexp_ident "Sys.getcwd" (bytecomp/emitcode.ml[173,5486+46]..[173,5486+56])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[173,5486+57]..[173,5486+59])
                                        Pexp_construct "()" (bytecomp/emitcode.ml[173,5486+57]..[173,5486+59])
                                        None
                                  ]
                            ]
                      ]
                      expression (bytecomp/emitcode.ml[174,5550+4]..[174,5550+48])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[174,5550+15]..[174,5550+17])
                          Pexp_ident ":=" (bytecomp/emitcode.ml[174,5550+15]..[174,5550+17])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[174,5550+4]..[174,5550+14])
                              Pexp_ident "debug_dirs" (bytecomp/emitcode.ml[174,5550+4]..[174,5550+14])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[174,5550+18]..[174,5550+48])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[174,5550+18]..[174,5550+32])
                                Pexp_ident "String.Set.add" (bytecomp/emitcode.ml[174,5550+18]..[174,5550+32])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[174,5550+33]..[174,5550+36])
                                    Pexp_ident "cwd" (bytecomp/emitcode.ml[174,5550+33]..[174,5550+36])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[174,5550+37]..[174,5550+48])
                                    Pexp_apply
                                    expression (bytecomp/emitcode.ml[174,5550+37]..[174,5550+38])
                                      Pexp_ident "!" (bytecomp/emitcode.ml[174,5550+37]..[174,5550+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[174,5550+38]..[174,5550+48])
                                          Pexp_ident "debug_dirs" (bytecomp/emitcode.ml[174,5550+38]..[174,5550+48])
                                    ]
                              ]
                        ]
                    None
                  expression (bytecomp/emitcode.ml[176,5607+2]..[177,5637+25])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[176,5607+2]..[176,5607+28])
                      Pexp_setfield
                      expression (bytecomp/emitcode.ml[176,5607+2]..[176,5607+4])
                        Pexp_ident "ev" (bytecomp/emitcode.ml[176,5607+2]..[176,5607+4])
                      "ev_pos" (bytecomp/emitcode.ml[176,5607+5]..[176,5607+11])
                      expression (bytecomp/emitcode.ml[176,5607+15]..[176,5607+28])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[176,5607+15]..[176,5607+16])
                          Pexp_ident "!" (bytecomp/emitcode.ml[176,5607+15]..[176,5607+16])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[176,5607+16]..[176,5607+28])
                              Pexp_ident "out_position" (bytecomp/emitcode.ml[176,5607+16]..[176,5607+28])
                        ]
                    expression (bytecomp/emitcode.ml[177,5637+2]..[177,5637+25])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[177,5637+9]..[177,5637+11])
                        Pexp_ident ":=" (bytecomp/emitcode.ml[177,5637+9]..[177,5637+11])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[177,5637+2]..[177,5637+8])
                            Pexp_ident "events" (bytecomp/emitcode.ml[177,5637+2]..[177,5637+8])
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[177,5637+12]..[177,5637+25])
                            Pexp_construct "::" (bytecomp/emitcode.ml[177,5637+15]..[177,5637+17])
                            Some
                              expression (bytecomp/emitcode.ml[177,5637+12]..[177,5637+25]) ghost
                                Pexp_tuple
                                [
                                  expression (bytecomp/emitcode.ml[177,5637+12]..[177,5637+14])
                                    Pexp_ident "ev" (bytecomp/emitcode.ml[177,5637+12]..[177,5637+14])
                                  expression (bytecomp/emitcode.ml[177,5637+18]..[177,5637+25])
                                    Pexp_apply
                                    expression (bytecomp/emitcode.ml[177,5637+18]..[177,5637+19])
                                      Pexp_ident "!" (bytecomp/emitcode.ml[177,5637+18]..[177,5637+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[177,5637+19]..[177,5637+25])
                                          Pexp_ident "events" (bytecomp/emitcode.ml[177,5637+19]..[177,5637+25])
                                    ]
                                ]
                      ]
    ]
  structure_item (bytecomp/emitcode.ml[181,5686+0]..[186,5828+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[181,5686+4]..[181,5686+8])
          Ppat_var "init" (bytecomp/emitcode.ml[181,5686+4]..[181,5686+8])
        expression (bytecomp/emitcode.ml[181,5686+9]..[186,5828+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[181,5686+9]..[181,5686+11])
            Ppat_construct "()" (bytecomp/emitcode.ml[181,5686+9]..[181,5686+11])
            None
          expression (bytecomp/emitcode.ml[182,5700+2]..[186,5828+14])
            Pexp_sequence
            expression (bytecomp/emitcode.ml[182,5700+2]..[182,5700+19])
              Pexp_apply
              expression (bytecomp/emitcode.ml[182,5700+15]..[182,5700+17])
                Pexp_ident ":=" (bytecomp/emitcode.ml[182,5700+15]..[182,5700+17])
              [
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[182,5700+2]..[182,5700+14])
                    Pexp_ident "out_position" (bytecomp/emitcode.ml[182,5700+2]..[182,5700+14])
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[182,5700+18]..[182,5700+19])
                    Pexp_constant PConst_int (0,None)
              ]
            expression (bytecomp/emitcode.ml[183,5721+2]..[186,5828+14])
              Pexp_sequence
              expression (bytecomp/emitcode.ml[183,5721+2]..[183,5721+51])
                Pexp_apply
                expression (bytecomp/emitcode.ml[183,5721+14]..[183,5721+16])
                  Pexp_ident ":=" (bytecomp/emitcode.ml[183,5721+14]..[183,5721+16])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[183,5721+2]..[183,5721+13])
                      Pexp_ident "label_table" (bytecomp/emitcode.ml[183,5721+2]..[183,5721+13])
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[183,5721+17]..[183,5721+51])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[183,5721+17]..[183,5721+27])
                        Pexp_ident "Array.make" (bytecomp/emitcode.ml[183,5721+17]..[183,5721+27])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[183,5721+28]..[183,5721+30])
                            Pexp_constant PConst_int (16,None)
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[183,5721+31]..[183,5721+51])
                            Pexp_construct "Label_undefined" (bytecomp/emitcode.ml[183,5721+32]..[183,5721+47])
                            Some
                              expression (bytecomp/emitcode.ml[183,5721+48]..[183,5721+50])
                                Pexp_construct "[]" (bytecomp/emitcode.ml[183,5721+48]..[183,5721+50])
                                None
                      ]
                ]
              expression (bytecomp/emitcode.ml[184,5774+2]..[186,5828+14])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[184,5774+2]..[184,5774+18])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[184,5774+13]..[184,5774+15])
                    Pexp_ident ":=" (bytecomp/emitcode.ml[184,5774+13]..[184,5774+15])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[184,5774+2]..[184,5774+12])
                        Pexp_ident "reloc_info" (bytecomp/emitcode.ml[184,5774+2]..[184,5774+12])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[184,5774+16]..[184,5774+18])
                        Pexp_construct "[]" (bytecomp/emitcode.ml[184,5774+16]..[184,5774+18])
                        None
                  ]
                expression (bytecomp/emitcode.ml[185,5794+2]..[186,5828+14])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[185,5794+2]..[185,5794+32])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[185,5794+13]..[185,5794+15])
                      Pexp_ident ":=" (bytecomp/emitcode.ml[185,5794+13]..[185,5794+15])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[185,5794+2]..[185,5794+12])
                          Pexp_ident "debug_dirs" (bytecomp/emitcode.ml[185,5794+2]..[185,5794+12])
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[185,5794+16]..[185,5794+32])
                          Pexp_ident "String.Set.empty" (bytecomp/emitcode.ml[185,5794+16]..[185,5794+32])
                    ]
                  expression (bytecomp/emitcode.ml[186,5828+2]..[186,5828+14])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[186,5828+9]..[186,5828+11])
                      Pexp_ident ":=" (bytecomp/emitcode.ml[186,5828+9]..[186,5828+11])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[186,5828+2]..[186,5828+8])
                          Pexp_ident "events" (bytecomp/emitcode.ml[186,5828+2]..[186,5828+8])
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[186,5828+12]..[186,5828+14])
                          Pexp_construct "[]" (bytecomp/emitcode.ml[186,5828+12]..[186,5828+14])
                          None
                    ]
    ]
  structure_item (bytecomp/emitcode.ml[190,5879+0]..[198,6147+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[190,5879+4]..[190,5879+13])
          Ppat_var "emit_comp" (bytecomp/emitcode.ml[190,5879+4]..[190,5879+13])
        expression (bytecomp/emitcode.ml[190,5879+16]..[193,5986+41])
          Pexp_function
          [
            <case>
              pattern (bytecomp/emitcode.ml[191,5904+2]..[191,5904+5])
                Ppat_construct "Ceq" (bytecomp/emitcode.ml[191,5904+2]..[191,5904+5])
                None
              expression (bytecomp/emitcode.ml[191,5904+9]..[191,5904+17])
                Pexp_apply
                expression (bytecomp/emitcode.ml[191,5904+9]..[191,5904+12])
                  Pexp_ident "out" (bytecomp/emitcode.ml[191,5904+9]..[191,5904+12])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[191,5904+13]..[191,5904+17])
                      Pexp_ident "opEQ" (bytecomp/emitcode.ml[191,5904+13]..[191,5904+17])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[191,5904+23]..[191,5904+26])
                Ppat_construct "Cne" (bytecomp/emitcode.ml[191,5904+23]..[191,5904+26])
                None
              expression (bytecomp/emitcode.ml[191,5904+30]..[191,5904+39])
                Pexp_apply
                expression (bytecomp/emitcode.ml[191,5904+30]..[191,5904+33])
                  Pexp_ident "out" (bytecomp/emitcode.ml[191,5904+30]..[191,5904+33])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[191,5904+34]..[191,5904+39])
                      Pexp_ident "opNEQ" (bytecomp/emitcode.ml[191,5904+34]..[191,5904+39])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[192,5944+2]..[192,5944+5])
                Ppat_construct "Clt" (bytecomp/emitcode.ml[192,5944+2]..[192,5944+5])
                None
              expression (bytecomp/emitcode.ml[192,5944+9]..[192,5944+20])
                Pexp_apply
                expression (bytecomp/emitcode.ml[192,5944+9]..[192,5944+12])
                  Pexp_ident "out" (bytecomp/emitcode.ml[192,5944+9]..[192,5944+12])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[192,5944+13]..[192,5944+20])
                      Pexp_ident "opLTINT" (bytecomp/emitcode.ml[192,5944+13]..[192,5944+20])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[192,5944+23]..[192,5944+26])
                Ppat_construct "Cle" (bytecomp/emitcode.ml[192,5944+23]..[192,5944+26])
                None
              expression (bytecomp/emitcode.ml[192,5944+30]..[192,5944+41])
                Pexp_apply
                expression (bytecomp/emitcode.ml[192,5944+30]..[192,5944+33])
                  Pexp_ident "out" (bytecomp/emitcode.ml[192,5944+30]..[192,5944+33])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[192,5944+34]..[192,5944+41])
                      Pexp_ident "opLEINT" (bytecomp/emitcode.ml[192,5944+34]..[192,5944+41])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[193,5986+2]..[193,5986+5])
                Ppat_construct "Cgt" (bytecomp/emitcode.ml[193,5986+2]..[193,5986+5])
                None
              expression (bytecomp/emitcode.ml[193,5986+9]..[193,5986+20])
                Pexp_apply
                expression (bytecomp/emitcode.ml[193,5986+9]..[193,5986+12])
                  Pexp_ident "out" (bytecomp/emitcode.ml[193,5986+9]..[193,5986+12])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[193,5986+13]..[193,5986+20])
                      Pexp_ident "opGTINT" (bytecomp/emitcode.ml[193,5986+13]..[193,5986+20])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[193,5986+23]..[193,5986+26])
                Ppat_construct "Cge" (bytecomp/emitcode.ml[193,5986+23]..[193,5986+26])
                None
              expression (bytecomp/emitcode.ml[193,5986+30]..[193,5986+41])
                Pexp_apply
                expression (bytecomp/emitcode.ml[193,5986+30]..[193,5986+33])
                  Pexp_ident "out" (bytecomp/emitcode.ml[193,5986+30]..[193,5986+33])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[193,5986+34]..[193,5986+41])
                      Pexp_ident "opGEINT" (bytecomp/emitcode.ml[193,5986+34]..[193,5986+41])
                ]
          ]
      <def>
        pattern (bytecomp/emitcode.ml[195,6029+4]..[195,6029+20])
          Ppat_var "emit_branch_comp" (bytecomp/emitcode.ml[195,6029+4]..[195,6029+20])
        expression (bytecomp/emitcode.ml[195,6029+23]..[198,6147+43])
          Pexp_function
          [
            <case>
              pattern (bytecomp/emitcode.ml[196,6061+2]..[196,6061+5])
                Ppat_construct "Ceq" (bytecomp/emitcode.ml[196,6061+2]..[196,6061+5])
                None
              expression (bytecomp/emitcode.ml[196,6061+9]..[196,6061+18])
                Pexp_apply
                expression (bytecomp/emitcode.ml[196,6061+9]..[196,6061+12])
                  Pexp_ident "out" (bytecomp/emitcode.ml[196,6061+9]..[196,6061+12])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[196,6061+13]..[196,6061+18])
                      Pexp_ident "opBEQ" (bytecomp/emitcode.ml[196,6061+13]..[196,6061+18])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[196,6061+24]..[196,6061+27])
                Ppat_construct "Cne" (bytecomp/emitcode.ml[196,6061+24]..[196,6061+27])
                None
              expression (bytecomp/emitcode.ml[196,6061+31]..[196,6061+41])
                Pexp_apply
                expression (bytecomp/emitcode.ml[196,6061+31]..[196,6061+34])
                  Pexp_ident "out" (bytecomp/emitcode.ml[196,6061+31]..[196,6061+34])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[196,6061+35]..[196,6061+41])
                      Pexp_ident "opBNEQ" (bytecomp/emitcode.ml[196,6061+35]..[196,6061+41])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[197,6103+2]..[197,6103+5])
                Ppat_construct "Clt" (bytecomp/emitcode.ml[197,6103+2]..[197,6103+5])
                None
              expression (bytecomp/emitcode.ml[197,6103+9]..[197,6103+21])
                Pexp_apply
                expression (bytecomp/emitcode.ml[197,6103+9]..[197,6103+12])
                  Pexp_ident "out" (bytecomp/emitcode.ml[197,6103+9]..[197,6103+12])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[197,6103+13]..[197,6103+21])
                      Pexp_ident "opBLTINT" (bytecomp/emitcode.ml[197,6103+13]..[197,6103+21])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[197,6103+24]..[197,6103+27])
                Ppat_construct "Cle" (bytecomp/emitcode.ml[197,6103+24]..[197,6103+27])
                None
              expression (bytecomp/emitcode.ml[197,6103+31]..[197,6103+43])
                Pexp_apply
                expression (bytecomp/emitcode.ml[197,6103+31]..[197,6103+34])
                  Pexp_ident "out" (bytecomp/emitcode.ml[197,6103+31]..[197,6103+34])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[197,6103+35]..[197,6103+43])
                      Pexp_ident "opBLEINT" (bytecomp/emitcode.ml[197,6103+35]..[197,6103+43])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[198,6147+2]..[198,6147+5])
                Ppat_construct "Cgt" (bytecomp/emitcode.ml[198,6147+2]..[198,6147+5])
                None
              expression (bytecomp/emitcode.ml[198,6147+9]..[198,6147+21])
                Pexp_apply
                expression (bytecomp/emitcode.ml[198,6147+9]..[198,6147+12])
                  Pexp_ident "out" (bytecomp/emitcode.ml[198,6147+9]..[198,6147+12])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[198,6147+13]..[198,6147+21])
                      Pexp_ident "opBGTINT" (bytecomp/emitcode.ml[198,6147+13]..[198,6147+21])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[198,6147+24]..[198,6147+27])
                Ppat_construct "Cge" (bytecomp/emitcode.ml[198,6147+24]..[198,6147+27])
                None
              expression (bytecomp/emitcode.ml[198,6147+31]..[198,6147+43])
                Pexp_apply
                expression (bytecomp/emitcode.ml[198,6147+31]..[198,6147+34])
                  Pexp_ident "out" (bytecomp/emitcode.ml[198,6147+31]..[198,6147+34])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[198,6147+35]..[198,6147+43])
                      Pexp_ident "opBGEINT" (bytecomp/emitcode.ml[198,6147+35]..[198,6147+43])
                ]
          ]
    ]
  structure_item (bytecomp/emitcode.ml[200,6192+0]..[303,10419+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[200,6192+4]..[200,6192+14])
          Ppat_var "emit_instr" (bytecomp/emitcode.ml[200,6192+4]..[200,6192+14])
        expression (bytecomp/emitcode.ml[200,6192+17]..[303,10419+23])
          Pexp_function
          [
            <case>
              pattern (bytecomp/emitcode.ml[201,6218+4]..[201,6218+14])
                Ppat_construct "Klabel" (bytecomp/emitcode.ml[201,6218+4]..[201,6218+10])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[201,6218+11]..[201,6218+14])
                    Ppat_var "lbl" (bytecomp/emitcode.ml[201,6218+11]..[201,6218+14])
              expression (bytecomp/emitcode.ml[201,6218+18]..[201,6218+34])
                Pexp_apply
                expression (bytecomp/emitcode.ml[201,6218+18]..[201,6218+30])
                  Pexp_ident "define_label" (bytecomp/emitcode.ml[201,6218+18]..[201,6218+30])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[201,6218+31]..[201,6218+34])
                      Pexp_ident "lbl" (bytecomp/emitcode.ml[201,6218+31]..[201,6218+34])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[202,6253+4]..[202,6253+10])
                Ppat_construct "Kacc" (bytecomp/emitcode.ml[202,6253+4]..[202,6253+8])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[202,6253+9]..[202,6253+10])
                    Ppat_var "n" (bytecomp/emitcode.ml[202,6253+9]..[202,6253+10])
              expression (bytecomp/emitcode.ml[203,6267+6]..[203,6267+63])
                Pexp_ifthenelse
                expression (bytecomp/emitcode.ml[203,6267+9]..[203,6267+14])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[203,6267+11]..[203,6267+12])
                    Pexp_ident "<" (bytecomp/emitcode.ml[203,6267+11]..[203,6267+12])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[203,6267+9]..[203,6267+10])
                        Pexp_ident "n" (bytecomp/emitcode.ml[203,6267+9]..[203,6267+10])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[203,6267+13]..[203,6267+14])
                        Pexp_constant PConst_int (8,None)
                  ]
                expression (bytecomp/emitcode.ml[203,6267+20]..[203,6267+35])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[203,6267+20]..[203,6267+23])
                    Pexp_ident "out" (bytecomp/emitcode.ml[203,6267+20]..[203,6267+23])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[203,6267+23]..[203,6267+35])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[203,6267+31]..[203,6267+32])
                          Pexp_ident "+" (bytecomp/emitcode.ml[203,6267+31]..[203,6267+32])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[203,6267+24]..[203,6267+30])
                              Pexp_ident "opACC0" (bytecomp/emitcode.ml[203,6267+24]..[203,6267+30])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[203,6267+33]..[203,6267+34])
                              Pexp_ident "n" (bytecomp/emitcode.ml[203,6267+33]..[203,6267+34])
                        ]
                  ]
                Some
                  expression (bytecomp/emitcode.ml[203,6267+41]..[203,6267+63])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[203,6267+42]..[203,6267+51])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[203,6267+42]..[203,6267+45])
                        Pexp_ident "out" (bytecomp/emitcode.ml[203,6267+42]..[203,6267+45])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[203,6267+46]..[203,6267+51])
                            Pexp_ident "opACC" (bytecomp/emitcode.ml[203,6267+46]..[203,6267+51])
                      ]
                    expression (bytecomp/emitcode.ml[203,6267+53]..[203,6267+62])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[203,6267+53]..[203,6267+60])
                        Pexp_ident "out_int" (bytecomp/emitcode.ml[203,6267+53]..[203,6267+60])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[203,6267+61]..[203,6267+62])
                            Pexp_ident "n" (bytecomp/emitcode.ml[203,6267+61]..[203,6267+62])
                      ]
            <case>
              pattern (bytecomp/emitcode.ml[204,6331+4]..[204,6331+13])
                Ppat_construct "Kenvacc" (bytecomp/emitcode.ml[204,6331+4]..[204,6331+11])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[204,6331+12]..[204,6331+13])
                    Ppat_var "n" (bytecomp/emitcode.ml[204,6331+12]..[204,6331+13])
              expression (bytecomp/emitcode.ml[205,6348+6]..[207,6408+36])
                Pexp_ifthenelse
                expression (bytecomp/emitcode.ml[205,6348+9]..[205,6348+25])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[205,6348+16]..[205,6348+18])
                    Pexp_ident "&&" (bytecomp/emitcode.ml[205,6348+16]..[205,6348+18])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[205,6348+9]..[205,6348+15])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[205,6348+11]..[205,6348+13])
                          Pexp_ident ">=" (bytecomp/emitcode.ml[205,6348+11]..[205,6348+13])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[205,6348+9]..[205,6348+10])
                              Pexp_ident "n" (bytecomp/emitcode.ml[205,6348+9]..[205,6348+10])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[205,6348+14]..[205,6348+15])
                              Pexp_constant PConst_int (1,None)
                        ]
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[205,6348+19]..[205,6348+25])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[205,6348+21]..[205,6348+23])
                          Pexp_ident "<=" (bytecomp/emitcode.ml[205,6348+21]..[205,6348+23])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[205,6348+19]..[205,6348+20])
                              Pexp_ident "n" (bytecomp/emitcode.ml[205,6348+19]..[205,6348+20])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[205,6348+24]..[205,6348+25])
                              Pexp_constant PConst_int (4,None)
                        ]
                  ]
                expression (bytecomp/emitcode.ml[206,6374+11]..[206,6374+33])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[206,6374+11]..[206,6374+14])
                    Pexp_ident "out" (bytecomp/emitcode.ml[206,6374+11]..[206,6374+14])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[206,6374+14]..[206,6374+33])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[206,6374+29]..[206,6374+30])
                          Pexp_ident "-" (bytecomp/emitcode.ml[206,6374+29]..[206,6374+30])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[206,6374+15]..[206,6374+28])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[206,6374+25]..[206,6374+26])
                                Pexp_ident "+" (bytecomp/emitcode.ml[206,6374+25]..[206,6374+26])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[206,6374+15]..[206,6374+24])
                                    Pexp_ident "opENVACC1" (bytecomp/emitcode.ml[206,6374+15]..[206,6374+24])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[206,6374+27]..[206,6374+28])
                                    Pexp_ident "n" (bytecomp/emitcode.ml[206,6374+27]..[206,6374+28])
                              ]
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[206,6374+31]..[206,6374+32])
                              Pexp_constant PConst_int (1,None)
                        ]
                  ]
                Some
                  expression (bytecomp/emitcode.ml[207,6408+11]..[207,6408+36])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[207,6408+12]..[207,6408+24])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[207,6408+12]..[207,6408+15])
                        Pexp_ident "out" (bytecomp/emitcode.ml[207,6408+12]..[207,6408+15])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[207,6408+16]..[207,6408+24])
                            Pexp_ident "opENVACC" (bytecomp/emitcode.ml[207,6408+16]..[207,6408+24])
                      ]
                    expression (bytecomp/emitcode.ml[207,6408+26]..[207,6408+35])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[207,6408+26]..[207,6408+33])
                        Pexp_ident "out_int" (bytecomp/emitcode.ml[207,6408+26]..[207,6408+33])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[207,6408+34]..[207,6408+35])
                            Pexp_ident "n" (bytecomp/emitcode.ml[207,6408+34]..[207,6408+35])
                      ]
            <case>
              pattern (bytecomp/emitcode.ml[208,6445+4]..[208,6445+9])
                Ppat_construct "Kpush" (bytecomp/emitcode.ml[208,6445+4]..[208,6445+9])
                None
              expression (bytecomp/emitcode.ml[209,6458+6]..[209,6458+16])
                Pexp_apply
                expression (bytecomp/emitcode.ml[209,6458+6]..[209,6458+9])
                  Pexp_ident "out" (bytecomp/emitcode.ml[209,6458+6]..[209,6458+9])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[209,6458+10]..[209,6458+16])
                      Pexp_ident "opPUSH" (bytecomp/emitcode.ml[209,6458+10]..[209,6458+16])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[210,6475+4]..[210,6475+10])
                Ppat_construct "Kpop" (bytecomp/emitcode.ml[210,6475+4]..[210,6475+8])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[210,6475+9]..[210,6475+10])
                    Ppat_var "n" (bytecomp/emitcode.ml[210,6475+9]..[210,6475+10])
              expression (bytecomp/emitcode.ml[211,6489+6]..[211,6489+26])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[211,6489+6]..[211,6489+15])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[211,6489+6]..[211,6489+9])
                    Pexp_ident "out" (bytecomp/emitcode.ml[211,6489+6]..[211,6489+9])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[211,6489+10]..[211,6489+15])
                        Pexp_ident "opPOP" (bytecomp/emitcode.ml[211,6489+10]..[211,6489+15])
                  ]
                expression (bytecomp/emitcode.ml[211,6489+17]..[211,6489+26])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[211,6489+17]..[211,6489+24])
                    Pexp_ident "out_int" (bytecomp/emitcode.ml[211,6489+17]..[211,6489+24])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[211,6489+25]..[211,6489+26])
                        Pexp_ident "n" (bytecomp/emitcode.ml[211,6489+25]..[211,6489+26])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[212,6516+4]..[212,6516+13])
                Ppat_construct "Kassign" (bytecomp/emitcode.ml[212,6516+4]..[212,6516+11])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[212,6516+12]..[212,6516+13])
                    Ppat_var "n" (bytecomp/emitcode.ml[212,6516+12]..[212,6516+13])
              expression (bytecomp/emitcode.ml[213,6533+6]..[213,6533+29])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[213,6533+6]..[213,6533+18])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[213,6533+6]..[213,6533+9])
                    Pexp_ident "out" (bytecomp/emitcode.ml[213,6533+6]..[213,6533+9])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[213,6533+10]..[213,6533+18])
                        Pexp_ident "opASSIGN" (bytecomp/emitcode.ml[213,6533+10]..[213,6533+18])
                  ]
                expression (bytecomp/emitcode.ml[213,6533+20]..[213,6533+29])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[213,6533+20]..[213,6533+27])
                    Pexp_ident "out_int" (bytecomp/emitcode.ml[213,6533+20]..[213,6533+27])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[213,6533+28]..[213,6533+29])
                        Pexp_ident "n" (bytecomp/emitcode.ml[213,6533+28]..[213,6533+29])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[214,6563+4]..[214,6563+21])
                Ppat_construct "Kpush_retaddr" (bytecomp/emitcode.ml[214,6563+4]..[214,6563+17])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[214,6563+18]..[214,6563+21])
                    Ppat_var "lbl" (bytecomp/emitcode.ml[214,6563+18]..[214,6563+21])
              expression (bytecomp/emitcode.ml[214,6563+25]..[214,6563+58])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[214,6563+25]..[214,6563+43])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[214,6563+25]..[214,6563+28])
                    Pexp_ident "out" (bytecomp/emitcode.ml[214,6563+25]..[214,6563+28])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[214,6563+29]..[214,6563+43])
                        Pexp_ident "opPUSH_RETADDR" (bytecomp/emitcode.ml[214,6563+29]..[214,6563+43])
                  ]
                expression (bytecomp/emitcode.ml[214,6563+45]..[214,6563+58])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[214,6563+45]..[214,6563+54])
                    Pexp_ident "out_label" (bytecomp/emitcode.ml[214,6563+45]..[214,6563+54])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[214,6563+55]..[214,6563+58])
                        Pexp_ident "lbl" (bytecomp/emitcode.ml[214,6563+55]..[214,6563+58])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[215,6622+4]..[215,6622+12])
                Ppat_construct "Kapply" (bytecomp/emitcode.ml[215,6622+4]..[215,6622+10])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[215,6622+11]..[215,6622+12])
                    Ppat_var "n" (bytecomp/emitcode.ml[215,6622+11]..[215,6622+12])
              expression (bytecomp/emitcode.ml[216,6638+6]..[216,6638+71])
                Pexp_ifthenelse
                expression (bytecomp/emitcode.ml[216,6638+9]..[216,6638+14])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[216,6638+11]..[216,6638+12])
                    Pexp_ident "<" (bytecomp/emitcode.ml[216,6638+11]..[216,6638+12])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[216,6638+9]..[216,6638+10])
                        Pexp_ident "n" (bytecomp/emitcode.ml[216,6638+9]..[216,6638+10])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[216,6638+13]..[216,6638+14])
                        Pexp_constant PConst_int (4,None)
                  ]
                expression (bytecomp/emitcode.ml[216,6638+20]..[216,6638+41])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[216,6638+20]..[216,6638+23])
                    Pexp_ident "out" (bytecomp/emitcode.ml[216,6638+20]..[216,6638+23])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[216,6638+23]..[216,6638+41])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[216,6638+37]..[216,6638+38])
                          Pexp_ident "-" (bytecomp/emitcode.ml[216,6638+37]..[216,6638+38])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[216,6638+24]..[216,6638+36])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[216,6638+33]..[216,6638+34])
                                Pexp_ident "+" (bytecomp/emitcode.ml[216,6638+33]..[216,6638+34])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[216,6638+24]..[216,6638+32])
                                    Pexp_ident "opAPPLY1" (bytecomp/emitcode.ml[216,6638+24]..[216,6638+32])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[216,6638+35]..[216,6638+36])
                                    Pexp_ident "n" (bytecomp/emitcode.ml[216,6638+35]..[216,6638+36])
                              ]
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[216,6638+39]..[216,6638+40])
                              Pexp_constant PConst_int (1,None)
                        ]
                  ]
                Some
                  expression (bytecomp/emitcode.ml[216,6638+47]..[216,6638+71])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[216,6638+48]..[216,6638+59])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[216,6638+48]..[216,6638+51])
                        Pexp_ident "out" (bytecomp/emitcode.ml[216,6638+48]..[216,6638+51])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[216,6638+52]..[216,6638+59])
                            Pexp_ident "opAPPLY" (bytecomp/emitcode.ml[216,6638+52]..[216,6638+59])
                      ]
                    expression (bytecomp/emitcode.ml[216,6638+61]..[216,6638+70])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[216,6638+61]..[216,6638+68])
                        Pexp_ident "out_int" (bytecomp/emitcode.ml[216,6638+61]..[216,6638+68])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[216,6638+69]..[216,6638+70])
                            Pexp_ident "n" (bytecomp/emitcode.ml[216,6638+69]..[216,6638+70])
                      ]
            <case>
              pattern (bytecomp/emitcode.ml[217,6710+4]..[217,6710+19])
                Ppat_construct "Kappterm" (bytecomp/emitcode.ml[217,6710+4]..[217,6710+12])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[217,6710+12]..[217,6710+19])
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[217,6710+13]..[217,6710+14])
                        Ppat_var "n" (bytecomp/emitcode.ml[217,6710+13]..[217,6710+14])
                      pattern (bytecomp/emitcode.ml[217,6710+16]..[217,6710+18])
                        Ppat_var "sz" (bytecomp/emitcode.ml[217,6710+16]..[217,6710+18])
                    ]
              expression (bytecomp/emitcode.ml[218,6733+6]..[219,6791+58])
                Pexp_ifthenelse
                expression (bytecomp/emitcode.ml[218,6733+9]..[218,6733+14])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[218,6733+11]..[218,6733+12])
                    Pexp_ident "<" (bytecomp/emitcode.ml[218,6733+11]..[218,6733+12])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[218,6733+9]..[218,6733+10])
                        Pexp_ident "n" (bytecomp/emitcode.ml[218,6733+9]..[218,6733+10])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[218,6733+13]..[218,6733+14])
                        Pexp_constant PConst_int (4,None)
                  ]
                expression (bytecomp/emitcode.ml[218,6733+20]..[218,6733+57])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[218,6733+21]..[218,6733+44])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[218,6733+21]..[218,6733+24])
                      Pexp_ident "out" (bytecomp/emitcode.ml[218,6733+21]..[218,6733+24])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[218,6733+24]..[218,6733+44])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[218,6733+40]..[218,6733+41])
                            Pexp_ident "-" (bytecomp/emitcode.ml[218,6733+40]..[218,6733+41])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[218,6733+25]..[218,6733+39])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[218,6733+36]..[218,6733+37])
                                  Pexp_ident "+" (bytecomp/emitcode.ml[218,6733+36]..[218,6733+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[218,6733+25]..[218,6733+35])
                                      Pexp_ident "opAPPTERM1" (bytecomp/emitcode.ml[218,6733+25]..[218,6733+35])
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[218,6733+38]..[218,6733+39])
                                      Pexp_ident "n" (bytecomp/emitcode.ml[218,6733+38]..[218,6733+39])
                                ]
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[218,6733+42]..[218,6733+43])
                                Pexp_constant PConst_int (1,None)
                          ]
                    ]
                  expression (bytecomp/emitcode.ml[218,6733+46]..[218,6733+56])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[218,6733+46]..[218,6733+53])
                      Pexp_ident "out_int" (bytecomp/emitcode.ml[218,6733+46]..[218,6733+53])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[218,6733+54]..[218,6733+56])
                          Pexp_ident "sz" (bytecomp/emitcode.ml[218,6733+54]..[218,6733+56])
                    ]
                Some
                  expression (bytecomp/emitcode.ml[219,6791+20]..[219,6791+58])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[219,6791+21]..[219,6791+34])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[219,6791+21]..[219,6791+24])
                        Pexp_ident "out" (bytecomp/emitcode.ml[219,6791+21]..[219,6791+24])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[219,6791+25]..[219,6791+34])
                            Pexp_ident "opAPPTERM" (bytecomp/emitcode.ml[219,6791+25]..[219,6791+34])
                      ]
                    expression (bytecomp/emitcode.ml[219,6791+36]..[219,6791+57])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[219,6791+36]..[219,6791+45])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[219,6791+36]..[219,6791+43])
                          Pexp_ident "out_int" (bytecomp/emitcode.ml[219,6791+36]..[219,6791+43])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[219,6791+44]..[219,6791+45])
                              Pexp_ident "n" (bytecomp/emitcode.ml[219,6791+44]..[219,6791+45])
                        ]
                      expression (bytecomp/emitcode.ml[219,6791+47]..[219,6791+57])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[219,6791+47]..[219,6791+54])
                          Pexp_ident "out_int" (bytecomp/emitcode.ml[219,6791+47]..[219,6791+54])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[219,6791+55]..[219,6791+57])
                              Pexp_ident "sz" (bytecomp/emitcode.ml[219,6791+55]..[219,6791+57])
                        ]
            <case>
              pattern (bytecomp/emitcode.ml[220,6850+4]..[220,6850+13])
                Ppat_construct "Kreturn" (bytecomp/emitcode.ml[220,6850+4]..[220,6850+11])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[220,6850+12]..[220,6850+13])
                    Ppat_var "n" (bytecomp/emitcode.ml[220,6850+12]..[220,6850+13])
              expression (bytecomp/emitcode.ml[220,6850+17]..[220,6850+40])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[220,6850+17]..[220,6850+29])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[220,6850+17]..[220,6850+20])
                    Pexp_ident "out" (bytecomp/emitcode.ml[220,6850+17]..[220,6850+20])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[220,6850+21]..[220,6850+29])
                        Pexp_ident "opRETURN" (bytecomp/emitcode.ml[220,6850+21]..[220,6850+29])
                  ]
                expression (bytecomp/emitcode.ml[220,6850+31]..[220,6850+40])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[220,6850+31]..[220,6850+38])
                    Pexp_ident "out_int" (bytecomp/emitcode.ml[220,6850+31]..[220,6850+38])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[220,6850+39]..[220,6850+40])
                        Pexp_ident "n" (bytecomp/emitcode.ml[220,6850+39]..[220,6850+40])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[221,6891+4]..[221,6891+12])
                Ppat_construct "Krestart" (bytecomp/emitcode.ml[221,6891+4]..[221,6891+12])
                None
              expression (bytecomp/emitcode.ml[221,6891+16]..[221,6891+29])
                Pexp_apply
                expression (bytecomp/emitcode.ml[221,6891+16]..[221,6891+19])
                  Pexp_ident "out" (bytecomp/emitcode.ml[221,6891+16]..[221,6891+19])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[221,6891+20]..[221,6891+29])
                      Pexp_ident "opRESTART" (bytecomp/emitcode.ml[221,6891+20]..[221,6891+29])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[222,6921+4]..[222,6921+11])
                Ppat_construct "Kgrab" (bytecomp/emitcode.ml[222,6921+4]..[222,6921+9])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[222,6921+10]..[222,6921+11])
                    Ppat_var "n" (bytecomp/emitcode.ml[222,6921+10]..[222,6921+11])
              expression (bytecomp/emitcode.ml[222,6921+15]..[222,6921+36])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[222,6921+15]..[222,6921+25])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[222,6921+15]..[222,6921+18])
                    Pexp_ident "out" (bytecomp/emitcode.ml[222,6921+15]..[222,6921+18])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[222,6921+19]..[222,6921+25])
                        Pexp_ident "opGRAB" (bytecomp/emitcode.ml[222,6921+19]..[222,6921+25])
                  ]
                expression (bytecomp/emitcode.ml[222,6921+27]..[222,6921+36])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[222,6921+27]..[222,6921+34])
                    Pexp_ident "out_int" (bytecomp/emitcode.ml[222,6921+27]..[222,6921+34])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[222,6921+35]..[222,6921+36])
                        Pexp_ident "n" (bytecomp/emitcode.ml[222,6921+35]..[222,6921+36])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[223,6958+4]..[223,6958+20])
                Ppat_construct "Kclosure" (bytecomp/emitcode.ml[223,6958+4]..[223,6958+12])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[223,6958+12]..[223,6958+20])
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[223,6958+13]..[223,6958+16])
                        Ppat_var "lbl" (bytecomp/emitcode.ml[223,6958+13]..[223,6958+16])
                      pattern (bytecomp/emitcode.ml[223,6958+18]..[223,6958+19])
                        Ppat_var "n" (bytecomp/emitcode.ml[223,6958+18]..[223,6958+19])
                    ]
              expression (bytecomp/emitcode.ml[223,6958+24]..[223,6958+63])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[223,6958+24]..[223,6958+37])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[223,6958+24]..[223,6958+27])
                    Pexp_ident "out" (bytecomp/emitcode.ml[223,6958+24]..[223,6958+27])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[223,6958+28]..[223,6958+37])
                        Pexp_ident "opCLOSURE" (bytecomp/emitcode.ml[223,6958+28]..[223,6958+37])
                  ]
                expression (bytecomp/emitcode.ml[223,6958+39]..[223,6958+63])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[223,6958+39]..[223,6958+48])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[223,6958+39]..[223,6958+46])
                      Pexp_ident "out_int" (bytecomp/emitcode.ml[223,6958+39]..[223,6958+46])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[223,6958+47]..[223,6958+48])
                          Pexp_ident "n" (bytecomp/emitcode.ml[223,6958+47]..[223,6958+48])
                    ]
                  expression (bytecomp/emitcode.ml[223,6958+50]..[223,6958+63])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[223,6958+50]..[223,6958+59])
                      Pexp_ident "out_label" (bytecomp/emitcode.ml[223,6958+50]..[223,6958+59])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[223,6958+60]..[223,6958+63])
                          Pexp_ident "lbl" (bytecomp/emitcode.ml[223,6958+60]..[223,6958+63])
                    ]
            <case>
              pattern (bytecomp/emitcode.ml[224,7022+4]..[224,7022+24])
                Ppat_construct "Kclosurerec" (bytecomp/emitcode.ml[224,7022+4]..[224,7022+15])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[224,7022+15]..[224,7022+24])
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[224,7022+16]..[224,7022+20])
                        Ppat_var "lbls" (bytecomp/emitcode.ml[224,7022+16]..[224,7022+20])
                      pattern (bytecomp/emitcode.ml[224,7022+22]..[224,7022+23])
                        Ppat_var "n" (bytecomp/emitcode.ml[224,7022+22]..[224,7022+23])
                    ]
              expression (bytecomp/emitcode.ml[225,7050+6]..[227,7146+46])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[225,7050+6]..[225,7050+22])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[225,7050+6]..[225,7050+9])
                    Pexp_ident "out" (bytecomp/emitcode.ml[225,7050+6]..[225,7050+9])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[225,7050+10]..[225,7050+22])
                        Pexp_ident "opCLOSUREREC" (bytecomp/emitcode.ml[225,7050+10]..[225,7050+22])
                  ]
                expression (bytecomp/emitcode.ml[225,7050+24]..[227,7146+46])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[225,7050+24]..[225,7050+50])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[225,7050+24]..[225,7050+31])
                      Pexp_ident "out_int" (bytecomp/emitcode.ml[225,7050+24]..[225,7050+31])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[225,7050+32]..[225,7050+50])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[225,7050+33]..[225,7050+44])
                            Pexp_ident "List.length" (bytecomp/emitcode.ml[225,7050+33]..[225,7050+44])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[225,7050+45]..[225,7050+49])
                                Pexp_ident "lbls" (bytecomp/emitcode.ml[225,7050+45]..[225,7050+49])
                          ]
                    ]
                  expression (bytecomp/emitcode.ml[225,7050+52]..[227,7146+46])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[225,7050+52]..[225,7050+61])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[225,7050+52]..[225,7050+59])
                        Pexp_ident "out_int" (bytecomp/emitcode.ml[225,7050+52]..[225,7050+59])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[225,7050+60]..[225,7050+61])
                            Pexp_ident "n" (bytecomp/emitcode.ml[225,7050+60]..[225,7050+61])
                      ]
                    expression (bytecomp/emitcode.ml[226,7113+6]..[227,7146+46])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (bytecomp/emitcode.ml[226,7113+10]..[226,7113+13])
                            Ppat_var "org" (bytecomp/emitcode.ml[226,7113+10]..[226,7113+13])
                          expression (bytecomp/emitcode.ml[226,7113+16]..[226,7113+29])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[226,7113+16]..[226,7113+17])
                              Pexp_ident "!" (bytecomp/emitcode.ml[226,7113+16]..[226,7113+17])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[226,7113+17]..[226,7113+29])
                                  Pexp_ident "out_position" (bytecomp/emitcode.ml[226,7113+17]..[226,7113+29])
                            ]
                      ]
                      expression (bytecomp/emitcode.ml[227,7146+6]..[227,7146+46])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[227,7146+6]..[227,7146+15])
                          Pexp_ident "List.iter" (bytecomp/emitcode.ml[227,7146+6]..[227,7146+15])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[227,7146+16]..[227,7146+41])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[227,7146+17]..[227,7146+36])
                                Pexp_ident "out_label_with_orig" (bytecomp/emitcode.ml[227,7146+17]..[227,7146+36])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[227,7146+37]..[227,7146+40])
                                    Pexp_ident "org" (bytecomp/emitcode.ml[227,7146+37]..[227,7146+40])
                              ]
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[227,7146+42]..[227,7146+46])
                              Pexp_ident "lbls" (bytecomp/emitcode.ml[227,7146+42]..[227,7146+46])
                        ]
            <case>
              pattern (bytecomp/emitcode.ml[228,7193+4]..[228,7193+22])
                Ppat_construct "Koffsetclosure" (bytecomp/emitcode.ml[228,7193+4]..[228,7193+18])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[228,7193+19]..[228,7193+22])
                    Ppat_var "ofs" (bytecomp/emitcode.ml[228,7193+19]..[228,7193+22])
              expression (bytecomp/emitcode.ml[229,7219+6]..[231,7303+45])
                Pexp_ifthenelse
                expression (bytecomp/emitcode.ml[229,7219+9]..[229,7219+39])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[229,7219+18]..[229,7219+20])
                    Pexp_ident "||" (bytecomp/emitcode.ml[229,7219+18]..[229,7219+20])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[229,7219+9]..[229,7219+17])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[229,7219+13]..[229,7219+14])
                          Pexp_ident "=" (bytecomp/emitcode.ml[229,7219+13]..[229,7219+14])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[229,7219+9]..[229,7219+12])
                              Pexp_ident "ofs" (bytecomp/emitcode.ml[229,7219+9]..[229,7219+12])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[229,7219+15]..[229,7219+17])
                              Pexp_constant PConst_int (-3,None)
                        ]
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[229,7219+21]..[229,7219+39])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[229,7219+29]..[229,7219+31])
                          Pexp_ident "||" (bytecomp/emitcode.ml[229,7219+29]..[229,7219+31])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[229,7219+21]..[229,7219+28])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[229,7219+25]..[229,7219+26])
                                Pexp_ident "=" (bytecomp/emitcode.ml[229,7219+25]..[229,7219+26])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[229,7219+21]..[229,7219+24])
                                    Pexp_ident "ofs" (bytecomp/emitcode.ml[229,7219+21]..[229,7219+24])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[229,7219+27]..[229,7219+28])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[229,7219+32]..[229,7219+39])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[229,7219+36]..[229,7219+37])
                                Pexp_ident "=" (bytecomp/emitcode.ml[229,7219+36]..[229,7219+37])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[229,7219+32]..[229,7219+35])
                                    Pexp_ident "ofs" (bytecomp/emitcode.ml[229,7219+32]..[229,7219+35])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[229,7219+38]..[229,7219+39])
                                    Pexp_constant PConst_int (3,None)
                              ]
                        ]
                  ]
                expression (bytecomp/emitcode.ml[230,7259+11]..[230,7259+43])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[230,7259+11]..[230,7259+14])
                    Pexp_ident "out" (bytecomp/emitcode.ml[230,7259+11]..[230,7259+14])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[230,7259+15]..[230,7259+43])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[230,7259+33]..[230,7259+34])
                          Pexp_ident "+" (bytecomp/emitcode.ml[230,7259+33]..[230,7259+34])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[230,7259+16]..[230,7259+32])
                              Pexp_ident "opOFFSETCLOSURE0" (bytecomp/emitcode.ml[230,7259+16]..[230,7259+32])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[230,7259+35]..[230,7259+42])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[230,7259+39]..[230,7259+40])
                                Pexp_ident "/" (bytecomp/emitcode.ml[230,7259+39]..[230,7259+40])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[230,7259+35]..[230,7259+38])
                                    Pexp_ident "ofs" (bytecomp/emitcode.ml[230,7259+35]..[230,7259+38])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[230,7259+41]..[230,7259+42])
                                    Pexp_constant PConst_int (3,None)
                              ]
                        ]
                  ]
                Some
                  expression (bytecomp/emitcode.ml[231,7303+11]..[231,7303+45])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[231,7303+12]..[231,7303+31])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[231,7303+12]..[231,7303+15])
                        Pexp_ident "out" (bytecomp/emitcode.ml[231,7303+12]..[231,7303+15])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[231,7303+16]..[231,7303+31])
                            Pexp_ident "opOFFSETCLOSURE" (bytecomp/emitcode.ml[231,7303+16]..[231,7303+31])
                      ]
                    expression (bytecomp/emitcode.ml[231,7303+33]..[231,7303+44])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[231,7303+33]..[231,7303+40])
                        Pexp_ident "out_int" (bytecomp/emitcode.ml[231,7303+33]..[231,7303+40])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[231,7303+41]..[231,7303+44])
                            Pexp_ident "ofs" (bytecomp/emitcode.ml[231,7303+41]..[231,7303+44])
                      ]
            <case>
              pattern (bytecomp/emitcode.ml[232,7349+4]..[232,7349+16])
                Ppat_construct "Kgetglobal" (bytecomp/emitcode.ml[232,7349+4]..[232,7349+14])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[232,7349+15]..[232,7349+16])
                    Ppat_var "q" (bytecomp/emitcode.ml[232,7349+15]..[232,7349+16])
              expression (bytecomp/emitcode.ml[232,7349+20]..[232,7349+57])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[232,7349+20]..[232,7349+35])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[232,7349+20]..[232,7349+23])
                    Pexp_ident "out" (bytecomp/emitcode.ml[232,7349+20]..[232,7349+23])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[232,7349+24]..[232,7349+35])
                        Pexp_ident "opGETGLOBAL" (bytecomp/emitcode.ml[232,7349+24]..[232,7349+35])
                  ]
                expression (bytecomp/emitcode.ml[232,7349+37]..[232,7349+57])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[232,7349+37]..[232,7349+55])
                    Pexp_ident "slot_for_getglobal" (bytecomp/emitcode.ml[232,7349+37]..[232,7349+55])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[232,7349+56]..[232,7349+57])
                        Pexp_ident "q" (bytecomp/emitcode.ml[232,7349+56]..[232,7349+57])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[233,7407+4]..[233,7407+16])
                Ppat_construct "Ksetglobal" (bytecomp/emitcode.ml[233,7407+4]..[233,7407+14])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[233,7407+15]..[233,7407+16])
                    Ppat_var "q" (bytecomp/emitcode.ml[233,7407+15]..[233,7407+16])
              expression (bytecomp/emitcode.ml[233,7407+20]..[233,7407+57])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[233,7407+20]..[233,7407+35])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[233,7407+20]..[233,7407+23])
                    Pexp_ident "out" (bytecomp/emitcode.ml[233,7407+20]..[233,7407+23])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[233,7407+24]..[233,7407+35])
                        Pexp_ident "opSETGLOBAL" (bytecomp/emitcode.ml[233,7407+24]..[233,7407+35])
                  ]
                expression (bytecomp/emitcode.ml[233,7407+37]..[233,7407+57])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[233,7407+37]..[233,7407+55])
                    Pexp_ident "slot_for_setglobal" (bytecomp/emitcode.ml[233,7407+37]..[233,7407+55])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[233,7407+56]..[233,7407+57])
                        Pexp_ident "q" (bytecomp/emitcode.ml[233,7407+56]..[233,7407+57])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[234,7465+4]..[234,7465+13])
                Ppat_construct "Kconst" (bytecomp/emitcode.ml[234,7465+4]..[234,7465+10])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[234,7465+11]..[234,7465+13])
                    Ppat_var "sc" (bytecomp/emitcode.ml[234,7465+11]..[234,7465+13])
              expression (bytecomp/emitcode.ml[235,7482+6]..[246,7905+9])
                Pexp_match
                expression (bytecomp/emitcode.ml[235,7482+18]..[235,7482+20])
                  Pexp_ident "sc" (bytecomp/emitcode.ml[235,7482+18]..[235,7482+20])
                [
                  <case>
                    pattern (bytecomp/emitcode.ml[236,7508+8]..[236,7508+31])
                      Ppat_construct "Const_base" (bytecomp/emitcode.ml[236,7508+8]..[236,7508+18])
                      Some
                        []
                        pattern (bytecomp/emitcode.ml[236,7508+18]..[236,7508+31])
                          Ppat_construct "Const_int" (bytecomp/emitcode.ml[236,7508+19]..[236,7508+28])
                          Some
                            []
                            pattern (bytecomp/emitcode.ml[236,7508+29]..[236,7508+30])
                              Ppat_var "i" (bytecomp/emitcode.ml[236,7508+29]..[236,7508+30])
                    <when>
                      expression (bytecomp/emitcode.ml[236,7508+37]..[236,7508+47])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[236,7508+37]..[236,7508+45])
                          Pexp_ident "is_immed" (bytecomp/emitcode.ml[236,7508+37]..[236,7508+45])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[236,7508+46]..[236,7508+47])
                              Pexp_ident "i" (bytecomp/emitcode.ml[236,7508+46]..[236,7508+47])
                        ]
                    expression (bytecomp/emitcode.ml[237,7559+10]..[239,7623+42])
                      Pexp_ifthenelse
                      expression (bytecomp/emitcode.ml[237,7559+13]..[237,7559+29])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[237,7559+20]..[237,7559+22])
                          Pexp_ident "&&" (bytecomp/emitcode.ml[237,7559+20]..[237,7559+22])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[237,7559+13]..[237,7559+19])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[237,7559+15]..[237,7559+17])
                                Pexp_ident ">=" (bytecomp/emitcode.ml[237,7559+15]..[237,7559+17])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[237,7559+13]..[237,7559+14])
                                    Pexp_ident "i" (bytecomp/emitcode.ml[237,7559+13]..[237,7559+14])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[237,7559+18]..[237,7559+19])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[237,7559+23]..[237,7559+29])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[237,7559+25]..[237,7559+27])
                                Pexp_ident "<=" (bytecomp/emitcode.ml[237,7559+25]..[237,7559+27])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[237,7559+23]..[237,7559+24])
                                    Pexp_ident "i" (bytecomp/emitcode.ml[237,7559+23]..[237,7559+24])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[237,7559+28]..[237,7559+29])
                                    Pexp_constant PConst_int (3,None)
                              ]
                        ]
                      expression (bytecomp/emitcode.ml[238,7589+15]..[238,7589+33])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[238,7589+15]..[238,7589+18])
                          Pexp_ident "out" (bytecomp/emitcode.ml[238,7589+15]..[238,7589+18])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[238,7589+19]..[238,7589+33])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[238,7589+29]..[238,7589+30])
                                Pexp_ident "+" (bytecomp/emitcode.ml[238,7589+29]..[238,7589+30])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[238,7589+20]..[238,7589+28])
                                    Pexp_ident "opCONST0" (bytecomp/emitcode.ml[238,7589+20]..[238,7589+28])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[238,7589+31]..[238,7589+32])
                                    Pexp_ident "i" (bytecomp/emitcode.ml[238,7589+31]..[238,7589+32])
                              ]
                        ]
                      Some
                        expression (bytecomp/emitcode.ml[239,7623+15]..[239,7623+42])
                          Pexp_sequence
                          expression (bytecomp/emitcode.ml[239,7623+16]..[239,7623+30])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[239,7623+16]..[239,7623+19])
                              Pexp_ident "out" (bytecomp/emitcode.ml[239,7623+16]..[239,7623+19])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[239,7623+20]..[239,7623+30])
                                  Pexp_ident "opCONSTINT" (bytecomp/emitcode.ml[239,7623+20]..[239,7623+30])
                            ]
                          expression (bytecomp/emitcode.ml[239,7623+32]..[239,7623+41])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[239,7623+32]..[239,7623+39])
                              Pexp_ident "out_int" (bytecomp/emitcode.ml[239,7623+32]..[239,7623+39])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[239,7623+40]..[239,7623+41])
                                  Pexp_ident "i" (bytecomp/emitcode.ml[239,7623+40]..[239,7623+41])
                            ]
                  <case>
                    pattern (bytecomp/emitcode.ml[240,7666+8]..[240,7666+32])
                      Ppat_construct "Const_base" (bytecomp/emitcode.ml[240,7666+8]..[240,7666+18])
                      Some
                        []
                        pattern (bytecomp/emitcode.ml[240,7666+18]..[240,7666+32])
                          Ppat_construct "Const_char" (bytecomp/emitcode.ml[240,7666+19]..[240,7666+29])
                          Some
                            []
                            pattern (bytecomp/emitcode.ml[240,7666+30]..[240,7666+31])
                              Ppat_var "c" (bytecomp/emitcode.ml[240,7666+30]..[240,7666+31])
                    expression (bytecomp/emitcode.ml[241,7702+10]..[241,7702+47])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[241,7702+10]..[241,7702+24])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[241,7702+10]..[241,7702+13])
                          Pexp_ident "out" (bytecomp/emitcode.ml[241,7702+10]..[241,7702+13])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[241,7702+14]..[241,7702+24])
                              Pexp_ident "opCONSTINT" (bytecomp/emitcode.ml[241,7702+14]..[241,7702+24])
                        ]
                      expression (bytecomp/emitcode.ml[241,7702+26]..[241,7702+47])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[241,7702+26]..[241,7702+33])
                          Pexp_ident "out_int" (bytecomp/emitcode.ml[241,7702+26]..[241,7702+33])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[241,7702+34]..[241,7702+47])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[241,7702+35]..[241,7702+44])
                                Pexp_ident "Char.code" (bytecomp/emitcode.ml[241,7702+35]..[241,7702+44])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[241,7702+45]..[241,7702+46])
                                    Pexp_ident "c" (bytecomp/emitcode.ml[241,7702+45]..[241,7702+46])
                              ]
                        ]
                  <case>
                    pattern (bytecomp/emitcode.ml[242,7750+8]..[242,7750+26])
                      Ppat_construct "Const_block" (bytecomp/emitcode.ml[242,7750+8]..[242,7750+19])
                      Some
                        []
                        pattern (bytecomp/emitcode.ml[242,7750+19]..[242,7750+26])
                          Ppat_tuple
                          [
                            pattern (bytecomp/emitcode.ml[242,7750+20]..[242,7750+21])
                              Ppat_var "t" (bytecomp/emitcode.ml[242,7750+20]..[242,7750+21])
                            pattern (bytecomp/emitcode.ml[242,7750+23]..[242,7750+25])
                              Ppat_construct "[]" (bytecomp/emitcode.ml[242,7750+23]..[242,7750+25])
                              None
                          ]
                    expression (bytecomp/emitcode.ml[243,7780+10]..[243,7780+64])
                      Pexp_ifthenelse
                      expression (bytecomp/emitcode.ml[243,7780+13]..[243,7780+18])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[243,7780+15]..[243,7780+16])
                          Pexp_ident "=" (bytecomp/emitcode.ml[243,7780+15]..[243,7780+16])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[243,7780+13]..[243,7780+14])
                              Pexp_ident "t" (bytecomp/emitcode.ml[243,7780+13]..[243,7780+14])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[243,7780+17]..[243,7780+18])
                              Pexp_constant PConst_int (0,None)
                        ]
                      expression (bytecomp/emitcode.ml[243,7780+24]..[243,7780+35])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[243,7780+24]..[243,7780+27])
                          Pexp_ident "out" (bytecomp/emitcode.ml[243,7780+24]..[243,7780+27])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[243,7780+28]..[243,7780+35])
                              Pexp_ident "opATOM0" (bytecomp/emitcode.ml[243,7780+28]..[243,7780+35])
                        ]
                      Some
                        expression (bytecomp/emitcode.ml[243,7780+41]..[243,7780+64])
                          Pexp_sequence
                          expression (bytecomp/emitcode.ml[243,7780+42]..[243,7780+52])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[243,7780+42]..[243,7780+45])
                              Pexp_ident "out" (bytecomp/emitcode.ml[243,7780+42]..[243,7780+45])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[243,7780+46]..[243,7780+52])
                                  Pexp_ident "opATOM" (bytecomp/emitcode.ml[243,7780+46]..[243,7780+52])
                            ]
                          expression (bytecomp/emitcode.ml[243,7780+54]..[243,7780+63])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[243,7780+54]..[243,7780+61])
                              Pexp_ident "out_int" (bytecomp/emitcode.ml[243,7780+54]..[243,7780+61])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[243,7780+62]..[243,7780+63])
                                  Pexp_ident "t" (bytecomp/emitcode.ml[243,7780+62]..[243,7780+63])
                            ]
                  <case>
                    pattern (bytecomp/emitcode.ml[244,7845+8]..[244,7845+9])
                      Ppat_any
                    expression (bytecomp/emitcode.ml[245,7858+10]..[245,7858+46])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[245,7858+10]..[245,7858+25])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[245,7858+10]..[245,7858+13])
                          Pexp_ident "out" (bytecomp/emitcode.ml[245,7858+10]..[245,7858+13])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[245,7858+14]..[245,7858+25])
                              Pexp_ident "opGETGLOBAL" (bytecomp/emitcode.ml[245,7858+14]..[245,7858+25])
                        ]
                      expression (bytecomp/emitcode.ml[245,7858+27]..[245,7858+46])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[245,7858+27]..[245,7858+43])
                          Pexp_ident "slot_for_literal" (bytecomp/emitcode.ml[245,7858+27]..[245,7858+43])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[245,7858+44]..[245,7858+46])
                              Pexp_ident "sc" (bytecomp/emitcode.ml[245,7858+44]..[245,7858+46])
                        ]
                ]
            <case>
              pattern (bytecomp/emitcode.ml[247,7915+4]..[247,7915+20])
                Ppat_construct "Kmakeblock" (bytecomp/emitcode.ml[247,7915+4]..[247,7915+14])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[247,7915+14]..[247,7915+20])
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[247,7915+15]..[247,7915+16])
                        Ppat_var "n" (bytecomp/emitcode.ml[247,7915+15]..[247,7915+16])
                      pattern (bytecomp/emitcode.ml[247,7915+18]..[247,7915+19])
                        Ppat_var "t" (bytecomp/emitcode.ml[247,7915+18]..[247,7915+19])
                    ]
              expression (bytecomp/emitcode.ml[248,7939+6]..[251,8086+50])
                Pexp_ifthenelse
                expression (bytecomp/emitcode.ml[248,7939+9]..[248,7939+14])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[248,7939+11]..[248,7939+12])
                    Pexp_ident "=" (bytecomp/emitcode.ml[248,7939+11]..[248,7939+12])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[248,7939+9]..[248,7939+10])
                        Pexp_ident "n" (bytecomp/emitcode.ml[248,7939+9]..[248,7939+10])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[248,7939+13]..[248,7939+14])
                        Pexp_constant PConst_int (0,None)
                  ]
                expression (bytecomp/emitcode.ml[249,7959+8]..[249,7959+62])
                  Pexp_ifthenelse
                  expression (bytecomp/emitcode.ml[249,7959+11]..[249,7959+16])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[249,7959+13]..[249,7959+14])
                      Pexp_ident "=" (bytecomp/emitcode.ml[249,7959+13]..[249,7959+14])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[249,7959+11]..[249,7959+12])
                          Pexp_ident "t" (bytecomp/emitcode.ml[249,7959+11]..[249,7959+12])
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[249,7959+15]..[249,7959+16])
                          Pexp_constant PConst_int (0,None)
                    ]
                  expression (bytecomp/emitcode.ml[249,7959+22]..[249,7959+33])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[249,7959+22]..[249,7959+25])
                      Pexp_ident "out" (bytecomp/emitcode.ml[249,7959+22]..[249,7959+25])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[249,7959+26]..[249,7959+33])
                          Pexp_ident "opATOM0" (bytecomp/emitcode.ml[249,7959+26]..[249,7959+33])
                    ]
                  Some
                    expression (bytecomp/emitcode.ml[249,7959+39]..[249,7959+62])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[249,7959+40]..[249,7959+50])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[249,7959+40]..[249,7959+43])
                          Pexp_ident "out" (bytecomp/emitcode.ml[249,7959+40]..[249,7959+43])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[249,7959+44]..[249,7959+50])
                              Pexp_ident "opATOM" (bytecomp/emitcode.ml[249,7959+44]..[249,7959+50])
                        ]
                      expression (bytecomp/emitcode.ml[249,7959+52]..[249,7959+61])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[249,7959+52]..[249,7959+59])
                          Pexp_ident "out_int" (bytecomp/emitcode.ml[249,7959+52]..[249,7959+59])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[249,7959+60]..[249,7959+61])
                              Pexp_ident "t" (bytecomp/emitcode.ml[249,7959+60]..[249,7959+61])
                        ]
                Some
                  expression (bytecomp/emitcode.ml[250,8022+11]..[251,8086+50])
                    Pexp_ifthenelse
                    expression (bytecomp/emitcode.ml[250,8022+14]..[250,8022+19])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[250,8022+16]..[250,8022+17])
                        Pexp_ident "<" (bytecomp/emitcode.ml[250,8022+16]..[250,8022+17])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[250,8022+14]..[250,8022+15])
                            Pexp_ident "n" (bytecomp/emitcode.ml[250,8022+14]..[250,8022+15])
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[250,8022+18]..[250,8022+19])
                            Pexp_constant PConst_int (4,None)
                      ]
                    expression (bytecomp/emitcode.ml[250,8022+25]..[250,8022+63])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[250,8022+26]..[250,8022+51])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[250,8022+26]..[250,8022+29])
                          Pexp_ident "out" (bytecomp/emitcode.ml[250,8022+26]..[250,8022+29])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[250,8022+29]..[250,8022+51])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[250,8022+47]..[250,8022+48])
                                Pexp_ident "-" (bytecomp/emitcode.ml[250,8022+47]..[250,8022+48])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[250,8022+30]..[250,8022+46])
                                    Pexp_apply
                                    expression (bytecomp/emitcode.ml[250,8022+43]..[250,8022+44])
                                      Pexp_ident "+" (bytecomp/emitcode.ml[250,8022+43]..[250,8022+44])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[250,8022+30]..[250,8022+42])
                                          Pexp_ident "opMAKEBLOCK1" (bytecomp/emitcode.ml[250,8022+30]..[250,8022+42])
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[250,8022+45]..[250,8022+46])
                                          Pexp_ident "n" (bytecomp/emitcode.ml[250,8022+45]..[250,8022+46])
                                    ]
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[250,8022+49]..[250,8022+50])
                                    Pexp_constant PConst_int (1,None)
                              ]
                        ]
                      expression (bytecomp/emitcode.ml[250,8022+53]..[250,8022+62])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[250,8022+53]..[250,8022+60])
                          Pexp_ident "out_int" (bytecomp/emitcode.ml[250,8022+53]..[250,8022+60])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[250,8022+61]..[250,8022+62])
                              Pexp_ident "t" (bytecomp/emitcode.ml[250,8022+61]..[250,8022+62])
                        ]
                    Some
                      expression (bytecomp/emitcode.ml[251,8086+11]..[251,8086+50])
                        Pexp_sequence
                        expression (bytecomp/emitcode.ml[251,8086+12]..[251,8086+27])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[251,8086+12]..[251,8086+15])
                            Pexp_ident "out" (bytecomp/emitcode.ml[251,8086+12]..[251,8086+15])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[251,8086+16]..[251,8086+27])
                                Pexp_ident "opMAKEBLOCK" (bytecomp/emitcode.ml[251,8086+16]..[251,8086+27])
                          ]
                        expression (bytecomp/emitcode.ml[251,8086+29]..[251,8086+49])
                          Pexp_sequence
                          expression (bytecomp/emitcode.ml[251,8086+29]..[251,8086+38])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[251,8086+29]..[251,8086+36])
                              Pexp_ident "out_int" (bytecomp/emitcode.ml[251,8086+29]..[251,8086+36])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[251,8086+37]..[251,8086+38])
                                  Pexp_ident "n" (bytecomp/emitcode.ml[251,8086+37]..[251,8086+38])
                            ]
                          expression (bytecomp/emitcode.ml[251,8086+40]..[251,8086+49])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[251,8086+40]..[251,8086+47])
                              Pexp_ident "out_int" (bytecomp/emitcode.ml[251,8086+40]..[251,8086+47])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[251,8086+48]..[251,8086+49])
                                  Pexp_ident "t" (bytecomp/emitcode.ml[251,8086+48]..[251,8086+49])
                            ]
            <case>
              pattern (bytecomp/emitcode.ml[252,8137+4]..[252,8137+15])
                Ppat_construct "Kgetfield" (bytecomp/emitcode.ml[252,8137+4]..[252,8137+13])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[252,8137+14]..[252,8137+15])
                    Ppat_var "n" (bytecomp/emitcode.ml[252,8137+14]..[252,8137+15])
              expression (bytecomp/emitcode.ml[253,8156+6]..[253,8156+73])
                Pexp_ifthenelse
                expression (bytecomp/emitcode.ml[253,8156+9]..[253,8156+14])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[253,8156+11]..[253,8156+12])
                    Pexp_ident "<" (bytecomp/emitcode.ml[253,8156+11]..[253,8156+12])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[253,8156+9]..[253,8156+10])
                        Pexp_ident "n" (bytecomp/emitcode.ml[253,8156+9]..[253,8156+10])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[253,8156+13]..[253,8156+14])
                        Pexp_constant PConst_int (4,None)
                  ]
                expression (bytecomp/emitcode.ml[253,8156+20]..[253,8156+40])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[253,8156+20]..[253,8156+23])
                    Pexp_ident "out" (bytecomp/emitcode.ml[253,8156+20]..[253,8156+23])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[253,8156+23]..[253,8156+40])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[253,8156+36]..[253,8156+37])
                          Pexp_ident "+" (bytecomp/emitcode.ml[253,8156+36]..[253,8156+37])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[253,8156+24]..[253,8156+35])
                              Pexp_ident "opGETFIELD0" (bytecomp/emitcode.ml[253,8156+24]..[253,8156+35])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[253,8156+38]..[253,8156+39])
                              Pexp_ident "n" (bytecomp/emitcode.ml[253,8156+38]..[253,8156+39])
                        ]
                  ]
                Some
                  expression (bytecomp/emitcode.ml[253,8156+46]..[253,8156+73])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[253,8156+47]..[253,8156+61])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[253,8156+47]..[253,8156+50])
                        Pexp_ident "out" (bytecomp/emitcode.ml[253,8156+47]..[253,8156+50])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[253,8156+51]..[253,8156+61])
                            Pexp_ident "opGETFIELD" (bytecomp/emitcode.ml[253,8156+51]..[253,8156+61])
                      ]
                    expression (bytecomp/emitcode.ml[253,8156+63]..[253,8156+72])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[253,8156+63]..[253,8156+70])
                        Pexp_ident "out_int" (bytecomp/emitcode.ml[253,8156+63]..[253,8156+70])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[253,8156+71]..[253,8156+72])
                            Pexp_ident "n" (bytecomp/emitcode.ml[253,8156+71]..[253,8156+72])
                      ]
            <case>
              pattern (bytecomp/emitcode.ml[254,8230+4]..[254,8230+15])
                Ppat_construct "Ksetfield" (bytecomp/emitcode.ml[254,8230+4]..[254,8230+13])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[254,8230+14]..[254,8230+15])
                    Ppat_var "n" (bytecomp/emitcode.ml[254,8230+14]..[254,8230+15])
              expression (bytecomp/emitcode.ml[255,8249+6]..[255,8249+73])
                Pexp_ifthenelse
                expression (bytecomp/emitcode.ml[255,8249+9]..[255,8249+14])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[255,8249+11]..[255,8249+12])
                    Pexp_ident "<" (bytecomp/emitcode.ml[255,8249+11]..[255,8249+12])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[255,8249+9]..[255,8249+10])
                        Pexp_ident "n" (bytecomp/emitcode.ml[255,8249+9]..[255,8249+10])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[255,8249+13]..[255,8249+14])
                        Pexp_constant PConst_int (4,None)
                  ]
                expression (bytecomp/emitcode.ml[255,8249+20]..[255,8249+40])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[255,8249+20]..[255,8249+23])
                    Pexp_ident "out" (bytecomp/emitcode.ml[255,8249+20]..[255,8249+23])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[255,8249+23]..[255,8249+40])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[255,8249+36]..[255,8249+37])
                          Pexp_ident "+" (bytecomp/emitcode.ml[255,8249+36]..[255,8249+37])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[255,8249+24]..[255,8249+35])
                              Pexp_ident "opSETFIELD0" (bytecomp/emitcode.ml[255,8249+24]..[255,8249+35])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[255,8249+38]..[255,8249+39])
                              Pexp_ident "n" (bytecomp/emitcode.ml[255,8249+38]..[255,8249+39])
                        ]
                  ]
                Some
                  expression (bytecomp/emitcode.ml[255,8249+46]..[255,8249+73])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[255,8249+47]..[255,8249+61])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[255,8249+47]..[255,8249+50])
                        Pexp_ident "out" (bytecomp/emitcode.ml[255,8249+47]..[255,8249+50])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[255,8249+51]..[255,8249+61])
                            Pexp_ident "opSETFIELD" (bytecomp/emitcode.ml[255,8249+51]..[255,8249+61])
                      ]
                    expression (bytecomp/emitcode.ml[255,8249+63]..[255,8249+72])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[255,8249+63]..[255,8249+70])
                        Pexp_ident "out_int" (bytecomp/emitcode.ml[255,8249+63]..[255,8249+70])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[255,8249+71]..[255,8249+72])
                            Pexp_ident "n" (bytecomp/emitcode.ml[255,8249+71]..[255,8249+72])
                      ]
            <case>
              pattern (bytecomp/emitcode.ml[256,8323+4]..[256,8323+22])
                Ppat_construct "Kmakefloatblock" (bytecomp/emitcode.ml[256,8323+4]..[256,8323+19])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[256,8323+19]..[256,8323+22])
                    Ppat_var "n" (bytecomp/emitcode.ml[256,8323+20]..[256,8323+21])
              expression (bytecomp/emitcode.ml[257,8349+6]..[257,8349+70])
                Pexp_ifthenelse
                expression (bytecomp/emitcode.ml[257,8349+9]..[257,8349+14])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[257,8349+11]..[257,8349+12])
                    Pexp_ident "=" (bytecomp/emitcode.ml[257,8349+11]..[257,8349+12])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[257,8349+9]..[257,8349+10])
                        Pexp_ident "n" (bytecomp/emitcode.ml[257,8349+9]..[257,8349+10])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[257,8349+13]..[257,8349+14])
                        Pexp_constant PConst_int (0,None)
                  ]
                expression (bytecomp/emitcode.ml[257,8349+20]..[257,8349+31])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[257,8349+20]..[257,8349+23])
                    Pexp_ident "out" (bytecomp/emitcode.ml[257,8349+20]..[257,8349+23])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[257,8349+24]..[257,8349+31])
                        Pexp_ident "opATOM0" (bytecomp/emitcode.ml[257,8349+24]..[257,8349+31])
                  ]
                Some
                  expression (bytecomp/emitcode.ml[257,8349+37]..[257,8349+70])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[257,8349+38]..[257,8349+58])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[257,8349+38]..[257,8349+41])
                        Pexp_ident "out" (bytecomp/emitcode.ml[257,8349+38]..[257,8349+41])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[257,8349+42]..[257,8349+58])
                            Pexp_ident "opMAKEFLOATBLOCK" (bytecomp/emitcode.ml[257,8349+42]..[257,8349+58])
                      ]
                    expression (bytecomp/emitcode.ml[257,8349+60]..[257,8349+69])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[257,8349+60]..[257,8349+67])
                        Pexp_ident "out_int" (bytecomp/emitcode.ml[257,8349+60]..[257,8349+67])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[257,8349+68]..[257,8349+69])
                            Pexp_ident "n" (bytecomp/emitcode.ml[257,8349+68]..[257,8349+69])
                      ]
            <case>
              pattern (bytecomp/emitcode.ml[258,8420+4]..[258,8420+20])
                Ppat_construct "Kgetfloatfield" (bytecomp/emitcode.ml[258,8420+4]..[258,8420+18])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[258,8420+19]..[258,8420+20])
                    Ppat_var "n" (bytecomp/emitcode.ml[258,8420+19]..[258,8420+20])
              expression (bytecomp/emitcode.ml[258,8420+24]..[258,8420+54])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[258,8420+24]..[258,8420+43])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[258,8420+24]..[258,8420+27])
                    Pexp_ident "out" (bytecomp/emitcode.ml[258,8420+24]..[258,8420+27])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[258,8420+28]..[258,8420+43])
                        Pexp_ident "opGETFLOATFIELD" (bytecomp/emitcode.ml[258,8420+28]..[258,8420+43])
                  ]
                expression (bytecomp/emitcode.ml[258,8420+45]..[258,8420+54])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[258,8420+45]..[258,8420+52])
                    Pexp_ident "out_int" (bytecomp/emitcode.ml[258,8420+45]..[258,8420+52])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[258,8420+53]..[258,8420+54])
                        Pexp_ident "n" (bytecomp/emitcode.ml[258,8420+53]..[258,8420+54])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[259,8475+4]..[259,8475+20])
                Ppat_construct "Ksetfloatfield" (bytecomp/emitcode.ml[259,8475+4]..[259,8475+18])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[259,8475+19]..[259,8475+20])
                    Ppat_var "n" (bytecomp/emitcode.ml[259,8475+19]..[259,8475+20])
              expression (bytecomp/emitcode.ml[259,8475+24]..[259,8475+54])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[259,8475+24]..[259,8475+43])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[259,8475+24]..[259,8475+27])
                    Pexp_ident "out" (bytecomp/emitcode.ml[259,8475+24]..[259,8475+27])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[259,8475+28]..[259,8475+43])
                        Pexp_ident "opSETFLOATFIELD" (bytecomp/emitcode.ml[259,8475+28]..[259,8475+43])
                  ]
                expression (bytecomp/emitcode.ml[259,8475+45]..[259,8475+54])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[259,8475+45]..[259,8475+52])
                    Pexp_ident "out_int" (bytecomp/emitcode.ml[259,8475+45]..[259,8475+52])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[259,8475+53]..[259,8475+54])
                        Pexp_ident "n" (bytecomp/emitcode.ml[259,8475+53]..[259,8475+54])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[260,8530+4]..[260,8530+15])
                Ppat_construct "Kvectlength" (bytecomp/emitcode.ml[260,8530+4]..[260,8530+15])
                None
              expression (bytecomp/emitcode.ml[260,8530+19]..[260,8530+35])
                Pexp_apply
                expression (bytecomp/emitcode.ml[260,8530+19]..[260,8530+22])
                  Pexp_ident "out" (bytecomp/emitcode.ml[260,8530+19]..[260,8530+22])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[260,8530+23]..[260,8530+35])
                      Pexp_ident "opVECTLENGTH" (bytecomp/emitcode.ml[260,8530+23]..[260,8530+35])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[261,8566+4]..[261,8566+16])
                Ppat_construct "Kgetvectitem" (bytecomp/emitcode.ml[261,8566+4]..[261,8566+16])
                None
              expression (bytecomp/emitcode.ml[261,8566+20]..[261,8566+37])
                Pexp_apply
                expression (bytecomp/emitcode.ml[261,8566+20]..[261,8566+23])
                  Pexp_ident "out" (bytecomp/emitcode.ml[261,8566+20]..[261,8566+23])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[261,8566+24]..[261,8566+37])
                      Pexp_ident "opGETVECTITEM" (bytecomp/emitcode.ml[261,8566+24]..[261,8566+37])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[262,8604+4]..[262,8604+16])
                Ppat_construct "Ksetvectitem" (bytecomp/emitcode.ml[262,8604+4]..[262,8604+16])
                None
              expression (bytecomp/emitcode.ml[262,8604+20]..[262,8604+37])
                Pexp_apply
                expression (bytecomp/emitcode.ml[262,8604+20]..[262,8604+23])
                  Pexp_ident "out" (bytecomp/emitcode.ml[262,8604+20]..[262,8604+23])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[262,8604+24]..[262,8604+37])
                      Pexp_ident "opSETVECTITEM" (bytecomp/emitcode.ml[262,8604+24]..[262,8604+37])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[263,8642+4]..[263,8642+18])
                Ppat_construct "Kgetstringchar" (bytecomp/emitcode.ml[263,8642+4]..[263,8642+18])
                None
              expression (bytecomp/emitcode.ml[263,8642+22]..[263,8642+41])
                Pexp_apply
                expression (bytecomp/emitcode.ml[263,8642+22]..[263,8642+25])
                  Pexp_ident "out" (bytecomp/emitcode.ml[263,8642+22]..[263,8642+25])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[263,8642+26]..[263,8642+41])
                      Pexp_ident "opGETSTRINGCHAR" (bytecomp/emitcode.ml[263,8642+26]..[263,8642+41])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[264,8684+4]..[264,8684+17])
                Ppat_construct "Kgetbyteschar" (bytecomp/emitcode.ml[264,8684+4]..[264,8684+17])
                None
              expression (bytecomp/emitcode.ml[264,8684+21]..[264,8684+39])
                Pexp_apply
                expression (bytecomp/emitcode.ml[264,8684+21]..[264,8684+24])
                  Pexp_ident "out" (bytecomp/emitcode.ml[264,8684+21]..[264,8684+24])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[264,8684+25]..[264,8684+39])
                      Pexp_ident "opGETBYTESCHAR" (bytecomp/emitcode.ml[264,8684+25]..[264,8684+39])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[265,8724+4]..[265,8724+17])
                Ppat_construct "Ksetbyteschar" (bytecomp/emitcode.ml[265,8724+4]..[265,8724+17])
                None
              expression (bytecomp/emitcode.ml[265,8724+21]..[265,8724+39])
                Pexp_apply
                expression (bytecomp/emitcode.ml[265,8724+21]..[265,8724+24])
                  Pexp_ident "out" (bytecomp/emitcode.ml[265,8724+21]..[265,8724+24])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[265,8724+25]..[265,8724+39])
                      Pexp_ident "opSETBYTESCHAR" (bytecomp/emitcode.ml[265,8724+25]..[265,8724+39])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[266,8764+4]..[266,8764+15])
                Ppat_construct "Kbranch" (bytecomp/emitcode.ml[266,8764+4]..[266,8764+11])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[266,8764+12]..[266,8764+15])
                    Ppat_var "lbl" (bytecomp/emitcode.ml[266,8764+12]..[266,8764+15])
              expression (bytecomp/emitcode.ml[266,8764+19]..[266,8764+46])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[266,8764+19]..[266,8764+31])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[266,8764+19]..[266,8764+22])
                    Pexp_ident "out" (bytecomp/emitcode.ml[266,8764+19]..[266,8764+22])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[266,8764+23]..[266,8764+31])
                        Pexp_ident "opBRANCH" (bytecomp/emitcode.ml[266,8764+23]..[266,8764+31])
                  ]
                expression (bytecomp/emitcode.ml[266,8764+33]..[266,8764+46])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[266,8764+33]..[266,8764+42])
                    Pexp_ident "out_label" (bytecomp/emitcode.ml[266,8764+33]..[266,8764+42])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[266,8764+43]..[266,8764+46])
                        Pexp_ident "lbl" (bytecomp/emitcode.ml[266,8764+43]..[266,8764+46])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[267,8811+4]..[267,8811+17])
                Ppat_construct "Kbranchif" (bytecomp/emitcode.ml[267,8811+4]..[267,8811+13])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[267,8811+14]..[267,8811+17])
                    Ppat_var "lbl" (bytecomp/emitcode.ml[267,8811+14]..[267,8811+17])
              expression (bytecomp/emitcode.ml[267,8811+21]..[267,8811+50])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[267,8811+21]..[267,8811+35])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[267,8811+21]..[267,8811+24])
                    Pexp_ident "out" (bytecomp/emitcode.ml[267,8811+21]..[267,8811+24])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[267,8811+25]..[267,8811+35])
                        Pexp_ident "opBRANCHIF" (bytecomp/emitcode.ml[267,8811+25]..[267,8811+35])
                  ]
                expression (bytecomp/emitcode.ml[267,8811+37]..[267,8811+50])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[267,8811+37]..[267,8811+46])
                    Pexp_ident "out_label" (bytecomp/emitcode.ml[267,8811+37]..[267,8811+46])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[267,8811+47]..[267,8811+50])
                        Pexp_ident "lbl" (bytecomp/emitcode.ml[267,8811+47]..[267,8811+50])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[268,8862+4]..[268,8862+20])
                Ppat_construct "Kbranchifnot" (bytecomp/emitcode.ml[268,8862+4]..[268,8862+16])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[268,8862+17]..[268,8862+20])
                    Ppat_var "lbl" (bytecomp/emitcode.ml[268,8862+17]..[268,8862+20])
              expression (bytecomp/emitcode.ml[268,8862+24]..[268,8862+56])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[268,8862+24]..[268,8862+41])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[268,8862+24]..[268,8862+27])
                    Pexp_ident "out" (bytecomp/emitcode.ml[268,8862+24]..[268,8862+27])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[268,8862+28]..[268,8862+41])
                        Pexp_ident "opBRANCHIFNOT" (bytecomp/emitcode.ml[268,8862+28]..[268,8862+41])
                  ]
                expression (bytecomp/emitcode.ml[268,8862+43]..[268,8862+56])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[268,8862+43]..[268,8862+52])
                    Pexp_ident "out_label" (bytecomp/emitcode.ml[268,8862+43]..[268,8862+52])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[268,8862+53]..[268,8862+56])
                        Pexp_ident "lbl" (bytecomp/emitcode.ml[268,8862+53]..[268,8862+56])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[269,8919+4]..[269,8919+23])
                Ppat_construct "Kstrictbranchif" (bytecomp/emitcode.ml[269,8919+4]..[269,8919+19])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[269,8919+20]..[269,8919+23])
                    Ppat_var "lbl" (bytecomp/emitcode.ml[269,8919+20]..[269,8919+23])
              expression (bytecomp/emitcode.ml[269,8919+27]..[269,8919+56])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[269,8919+27]..[269,8919+41])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[269,8919+27]..[269,8919+30])
                    Pexp_ident "out" (bytecomp/emitcode.ml[269,8919+27]..[269,8919+30])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[269,8919+31]..[269,8919+41])
                        Pexp_ident "opBRANCHIF" (bytecomp/emitcode.ml[269,8919+31]..[269,8919+41])
                  ]
                expression (bytecomp/emitcode.ml[269,8919+43]..[269,8919+56])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[269,8919+43]..[269,8919+52])
                    Pexp_ident "out_label" (bytecomp/emitcode.ml[269,8919+43]..[269,8919+52])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[269,8919+53]..[269,8919+56])
                        Pexp_ident "lbl" (bytecomp/emitcode.ml[269,8919+53]..[269,8919+56])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[270,8976+4]..[270,8976+26])
                Ppat_construct "Kstrictbranchifnot" (bytecomp/emitcode.ml[270,8976+4]..[270,8976+22])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[270,8976+23]..[270,8976+26])
                    Ppat_var "lbl" (bytecomp/emitcode.ml[270,8976+23]..[270,8976+26])
              expression (bytecomp/emitcode.ml[270,8976+30]..[270,8976+62])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[270,8976+30]..[270,8976+47])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[270,8976+30]..[270,8976+33])
                    Pexp_ident "out" (bytecomp/emitcode.ml[270,8976+30]..[270,8976+33])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[270,8976+34]..[270,8976+47])
                        Pexp_ident "opBRANCHIFNOT" (bytecomp/emitcode.ml[270,8976+34]..[270,8976+47])
                  ]
                expression (bytecomp/emitcode.ml[270,8976+49]..[270,8976+62])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[270,8976+49]..[270,8976+58])
                    Pexp_ident "out_label" (bytecomp/emitcode.ml[270,8976+49]..[270,8976+58])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[270,8976+59]..[270,8976+62])
                        Pexp_ident "lbl" (bytecomp/emitcode.ml[270,8976+59]..[270,8976+62])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[271,9039+4]..[271,9039+33])
                Ppat_construct "Kswitch" (bytecomp/emitcode.ml[271,9039+4]..[271,9039+11])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[271,9039+11]..[271,9039+33])
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[271,9039+12]..[271,9039+21])
                        Ppat_var "tbl_const" (bytecomp/emitcode.ml[271,9039+12]..[271,9039+21])
                      pattern (bytecomp/emitcode.ml[271,9039+23]..[271,9039+32])
                        Ppat_var "tbl_block" (bytecomp/emitcode.ml[271,9039+23]..[271,9039+32])
                    ]
              expression (bytecomp/emitcode.ml[272,9076+6]..[276,9257+52])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[272,9076+6]..[272,9076+18])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[272,9076+6]..[272,9076+9])
                    Pexp_ident "out" (bytecomp/emitcode.ml[272,9076+6]..[272,9076+9])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[272,9076+10]..[272,9076+18])
                        Pexp_ident "opSWITCH" (bytecomp/emitcode.ml[272,9076+10]..[272,9076+18])
                  ]
                expression (bytecomp/emitcode.ml[273,9096+6]..[276,9257+52])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[273,9096+6]..[273,9096+72])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[273,9096+6]..[273,9096+13])
                      Pexp_ident "out_int" (bytecomp/emitcode.ml[273,9096+6]..[273,9096+13])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[273,9096+14]..[273,9096+72])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[273,9096+38]..[273,9096+39])
                            Pexp_ident "+" (bytecomp/emitcode.ml[273,9096+38]..[273,9096+39])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[273,9096+15]..[273,9096+37])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[273,9096+15]..[273,9096+27])
                                  Pexp_ident "Array.length" (bytecomp/emitcode.ml[273,9096+15]..[273,9096+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[273,9096+28]..[273,9096+37])
                                      Pexp_ident "tbl_const" (bytecomp/emitcode.ml[273,9096+28]..[273,9096+37])
                                ]
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[273,9096+40]..[273,9096+71])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[273,9096+64]..[273,9096+67])
                                  Pexp_ident "lsl" (bytecomp/emitcode.ml[273,9096+64]..[273,9096+67])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[273,9096+41]..[273,9096+63])
                                      Pexp_apply
                                      expression (bytecomp/emitcode.ml[273,9096+41]..[273,9096+53])
                                        Pexp_ident "Array.length" (bytecomp/emitcode.ml[273,9096+41]..[273,9096+53])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (bytecomp/emitcode.ml[273,9096+54]..[273,9096+63])
                                            Pexp_ident "tbl_block" (bytecomp/emitcode.ml[273,9096+54]..[273,9096+63])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[273,9096+68]..[273,9096+70])
                                      Pexp_constant PConst_int (16,None)
                                ]
                          ]
                    ]
                  expression (bytecomp/emitcode.ml[274,9170+6]..[276,9257+52])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (bytecomp/emitcode.ml[274,9170+10]..[274,9170+13])
                          Ppat_var "org" (bytecomp/emitcode.ml[274,9170+10]..[274,9170+13])
                        expression (bytecomp/emitcode.ml[274,9170+16]..[274,9170+29])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[274,9170+16]..[274,9170+17])
                            Pexp_ident "!" (bytecomp/emitcode.ml[274,9170+16]..[274,9170+17])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[274,9170+17]..[274,9170+29])
                                Pexp_ident "out_position" (bytecomp/emitcode.ml[274,9170+17]..[274,9170+29])
                          ]
                    ]
                    expression (bytecomp/emitcode.ml[275,9203+6]..[276,9257+52])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[275,9203+6]..[275,9203+52])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[275,9203+6]..[275,9203+16])
                          Pexp_ident "Array.iter" (bytecomp/emitcode.ml[275,9203+6]..[275,9203+16])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[275,9203+17]..[275,9203+42])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[275,9203+18]..[275,9203+37])
                                Pexp_ident "out_label_with_orig" (bytecomp/emitcode.ml[275,9203+18]..[275,9203+37])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[275,9203+38]..[275,9203+41])
                                    Pexp_ident "org" (bytecomp/emitcode.ml[275,9203+38]..[275,9203+41])
                              ]
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[275,9203+43]..[275,9203+52])
                              Pexp_ident "tbl_const" (bytecomp/emitcode.ml[275,9203+43]..[275,9203+52])
                        ]
                      expression (bytecomp/emitcode.ml[276,9257+6]..[276,9257+52])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[276,9257+6]..[276,9257+16])
                          Pexp_ident "Array.iter" (bytecomp/emitcode.ml[276,9257+6]..[276,9257+16])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[276,9257+17]..[276,9257+42])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[276,9257+18]..[276,9257+37])
                                Pexp_ident "out_label_with_orig" (bytecomp/emitcode.ml[276,9257+18]..[276,9257+37])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[276,9257+38]..[276,9257+41])
                                    Pexp_ident "org" (bytecomp/emitcode.ml[276,9257+38]..[276,9257+41])
                              ]
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[276,9257+43]..[276,9257+52])
                              Pexp_ident "tbl_block" (bytecomp/emitcode.ml[276,9257+43]..[276,9257+52])
                        ]
            <case>
              pattern (bytecomp/emitcode.ml[277,9310+4]..[277,9310+12])
                Ppat_construct "Kboolnot" (bytecomp/emitcode.ml[277,9310+4]..[277,9310+12])
                None
              expression (bytecomp/emitcode.ml[277,9310+16]..[277,9310+29])
                Pexp_apply
                expression (bytecomp/emitcode.ml[277,9310+16]..[277,9310+19])
                  Pexp_ident "out" (bytecomp/emitcode.ml[277,9310+16]..[277,9310+19])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[277,9310+20]..[277,9310+29])
                      Pexp_ident "opBOOLNOT" (bytecomp/emitcode.ml[277,9310+20]..[277,9310+29])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[278,9340+4]..[278,9340+17])
                Ppat_construct "Kpushtrap" (bytecomp/emitcode.ml[278,9340+4]..[278,9340+13])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[278,9340+14]..[278,9340+17])
                    Ppat_var "lbl" (bytecomp/emitcode.ml[278,9340+14]..[278,9340+17])
              expression (bytecomp/emitcode.ml[278,9340+21]..[278,9340+50])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[278,9340+21]..[278,9340+35])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[278,9340+21]..[278,9340+24])
                    Pexp_ident "out" (bytecomp/emitcode.ml[278,9340+21]..[278,9340+24])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[278,9340+25]..[278,9340+35])
                        Pexp_ident "opPUSHTRAP" (bytecomp/emitcode.ml[278,9340+25]..[278,9340+35])
                  ]
                expression (bytecomp/emitcode.ml[278,9340+37]..[278,9340+50])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[278,9340+37]..[278,9340+46])
                    Pexp_ident "out_label" (bytecomp/emitcode.ml[278,9340+37]..[278,9340+46])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[278,9340+47]..[278,9340+50])
                        Pexp_ident "lbl" (bytecomp/emitcode.ml[278,9340+47]..[278,9340+50])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[279,9391+4]..[279,9391+12])
                Ppat_construct "Kpoptrap" (bytecomp/emitcode.ml[279,9391+4]..[279,9391+12])
                None
              expression (bytecomp/emitcode.ml[279,9391+16]..[279,9391+29])
                Pexp_apply
                expression (bytecomp/emitcode.ml[279,9391+16]..[279,9391+19])
                  Pexp_ident "out" (bytecomp/emitcode.ml[279,9391+16]..[279,9391+19])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[279,9391+20]..[279,9391+29])
                      Pexp_ident "opPOPTRAP" (bytecomp/emitcode.ml[279,9391+20]..[279,9391+29])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[280,9421+4]..[280,9421+24])
                Ppat_construct "Kraise" (bytecomp/emitcode.ml[280,9421+4]..[280,9421+10])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[280,9421+11]..[280,9421+24])
                    Ppat_construct "Raise_regular" (bytecomp/emitcode.ml[280,9421+11]..[280,9421+24])
                    None
              expression (bytecomp/emitcode.ml[280,9421+28]..[280,9421+39])
                Pexp_apply
                expression (bytecomp/emitcode.ml[280,9421+28]..[280,9421+31])
                  Pexp_ident "out" (bytecomp/emitcode.ml[280,9421+28]..[280,9421+31])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[280,9421+32]..[280,9421+39])
                      Pexp_ident "opRAISE" (bytecomp/emitcode.ml[280,9421+32]..[280,9421+39])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[281,9461+4]..[281,9461+24])
                Ppat_construct "Kraise" (bytecomp/emitcode.ml[281,9461+4]..[281,9461+10])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[281,9461+11]..[281,9461+24])
                    Ppat_construct "Raise_reraise" (bytecomp/emitcode.ml[281,9461+11]..[281,9461+24])
                    None
              expression (bytecomp/emitcode.ml[281,9461+28]..[281,9461+41])
                Pexp_apply
                expression (bytecomp/emitcode.ml[281,9461+28]..[281,9461+31])
                  Pexp_ident "out" (bytecomp/emitcode.ml[281,9461+28]..[281,9461+31])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[281,9461+32]..[281,9461+41])
                      Pexp_ident "opRERAISE" (bytecomp/emitcode.ml[281,9461+32]..[281,9461+41])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[282,9503+4]..[282,9503+24])
                Ppat_construct "Kraise" (bytecomp/emitcode.ml[282,9503+4]..[282,9503+10])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[282,9503+11]..[282,9503+24])
                    Ppat_construct "Raise_notrace" (bytecomp/emitcode.ml[282,9503+11]..[282,9503+24])
                    None
              expression (bytecomp/emitcode.ml[282,9503+28]..[282,9503+47])
                Pexp_apply
                expression (bytecomp/emitcode.ml[282,9503+28]..[282,9503+31])
                  Pexp_ident "out" (bytecomp/emitcode.ml[282,9503+28]..[282,9503+31])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[282,9503+32]..[282,9503+47])
                      Pexp_ident "opRAISE_NOTRACE" (bytecomp/emitcode.ml[282,9503+32]..[282,9503+47])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[283,9551+4]..[283,9551+18])
                Ppat_construct "Kcheck_signals" (bytecomp/emitcode.ml[283,9551+4]..[283,9551+18])
                None
              expression (bytecomp/emitcode.ml[283,9551+22]..[283,9551+41])
                Pexp_apply
                expression (bytecomp/emitcode.ml[283,9551+22]..[283,9551+25])
                  Pexp_ident "out" (bytecomp/emitcode.ml[283,9551+22]..[283,9551+25])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[283,9551+26]..[283,9551+41])
                      Pexp_ident "opCHECK_SIGNALS" (bytecomp/emitcode.ml[283,9551+26]..[283,9551+41])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[284,9593+4]..[284,9593+19])
                Ppat_construct "Kccall" (bytecomp/emitcode.ml[284,9593+4]..[284,9593+10])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[284,9593+10]..[284,9593+19])
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[284,9593+11]..[284,9593+15])
                        Ppat_var "name" (bytecomp/emitcode.ml[284,9593+11]..[284,9593+15])
                      pattern (bytecomp/emitcode.ml[284,9593+17]..[284,9593+18])
                        Ppat_var "n" (bytecomp/emitcode.ml[284,9593+17]..[284,9593+18])
                    ]
              expression (bytecomp/emitcode.ml[285,9616+6]..[287,9691+59])
                Pexp_ifthenelse
                expression (bytecomp/emitcode.ml[285,9616+9]..[285,9616+15])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[285,9616+11]..[285,9616+13])
                    Pexp_ident "<=" (bytecomp/emitcode.ml[285,9616+11]..[285,9616+13])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[285,9616+9]..[285,9616+10])
                        Pexp_ident "n" (bytecomp/emitcode.ml[285,9616+9]..[285,9616+10])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[285,9616+14]..[285,9616+15])
                        Pexp_constant PConst_int (5,None)
                  ]
                expression (bytecomp/emitcode.ml[286,9632+11]..[286,9632+58])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[286,9632+12]..[286,9632+35])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[286,9632+12]..[286,9632+15])
                      Pexp_ident "out" (bytecomp/emitcode.ml[286,9632+12]..[286,9632+15])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[286,9632+16]..[286,9632+35])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[286,9632+31]..[286,9632+32])
                            Pexp_ident "-" (bytecomp/emitcode.ml[286,9632+31]..[286,9632+32])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[286,9632+17]..[286,9632+30])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[286,9632+27]..[286,9632+28])
                                  Pexp_ident "+" (bytecomp/emitcode.ml[286,9632+27]..[286,9632+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[286,9632+17]..[286,9632+26])
                                      Pexp_ident "opC_CALL1" (bytecomp/emitcode.ml[286,9632+17]..[286,9632+26])
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[286,9632+29]..[286,9632+30])
                                      Pexp_ident "n" (bytecomp/emitcode.ml[286,9632+29]..[286,9632+30])
                                ]
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[286,9632+33]..[286,9632+34])
                                Pexp_constant PConst_int (1,None)
                          ]
                    ]
                  expression (bytecomp/emitcode.ml[286,9632+37]..[286,9632+57])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[286,9632+37]..[286,9632+52])
                      Pexp_ident "slot_for_c_prim" (bytecomp/emitcode.ml[286,9632+37]..[286,9632+52])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[286,9632+53]..[286,9632+57])
                          Pexp_ident "name" (bytecomp/emitcode.ml[286,9632+53]..[286,9632+57])
                    ]
                Some
                  expression (bytecomp/emitcode.ml[287,9691+11]..[287,9691+59])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[287,9691+12]..[287,9691+25])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[287,9691+12]..[287,9691+15])
                        Pexp_ident "out" (bytecomp/emitcode.ml[287,9691+12]..[287,9691+15])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[287,9691+16]..[287,9691+25])
                            Pexp_ident "opC_CALLN" (bytecomp/emitcode.ml[287,9691+16]..[287,9691+25])
                      ]
                    expression (bytecomp/emitcode.ml[287,9691+27]..[287,9691+58])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[287,9691+27]..[287,9691+36])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[287,9691+27]..[287,9691+34])
                          Pexp_ident "out_int" (bytecomp/emitcode.ml[287,9691+27]..[287,9691+34])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[287,9691+35]..[287,9691+36])
                              Pexp_ident "n" (bytecomp/emitcode.ml[287,9691+35]..[287,9691+36])
                        ]
                      expression (bytecomp/emitcode.ml[287,9691+38]..[287,9691+58])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[287,9691+38]..[287,9691+53])
                          Pexp_ident "slot_for_c_prim" (bytecomp/emitcode.ml[287,9691+38]..[287,9691+53])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[287,9691+54]..[287,9691+58])
                              Pexp_ident "name" (bytecomp/emitcode.ml[287,9691+54]..[287,9691+58])
                        ]
            <case>
              pattern (bytecomp/emitcode.ml[288,9751+4]..[288,9751+11])
                Ppat_construct "Knegint" (bytecomp/emitcode.ml[288,9751+4]..[288,9751+11])
                None
              expression (bytecomp/emitcode.ml[288,9751+15]..[288,9751+27])
                Pexp_apply
                expression (bytecomp/emitcode.ml[288,9751+15]..[288,9751+18])
                  Pexp_ident "out" (bytecomp/emitcode.ml[288,9751+15]..[288,9751+18])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[288,9751+19]..[288,9751+27])
                      Pexp_ident "opNEGINT" (bytecomp/emitcode.ml[288,9751+19]..[288,9751+27])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[288,9751+31]..[288,9751+38])
                Ppat_construct "Kaddint" (bytecomp/emitcode.ml[288,9751+31]..[288,9751+38])
                None
              expression (bytecomp/emitcode.ml[288,9751+42]..[288,9751+54])
                Pexp_apply
                expression (bytecomp/emitcode.ml[288,9751+42]..[288,9751+45])
                  Pexp_ident "out" (bytecomp/emitcode.ml[288,9751+42]..[288,9751+45])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[288,9751+46]..[288,9751+54])
                      Pexp_ident "opADDINT" (bytecomp/emitcode.ml[288,9751+46]..[288,9751+54])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[289,9806+4]..[289,9806+11])
                Ppat_construct "Ksubint" (bytecomp/emitcode.ml[289,9806+4]..[289,9806+11])
                None
              expression (bytecomp/emitcode.ml[289,9806+15]..[289,9806+27])
                Pexp_apply
                expression (bytecomp/emitcode.ml[289,9806+15]..[289,9806+18])
                  Pexp_ident "out" (bytecomp/emitcode.ml[289,9806+15]..[289,9806+18])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[289,9806+19]..[289,9806+27])
                      Pexp_ident "opSUBINT" (bytecomp/emitcode.ml[289,9806+19]..[289,9806+27])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[289,9806+31]..[289,9806+38])
                Ppat_construct "Kmulint" (bytecomp/emitcode.ml[289,9806+31]..[289,9806+38])
                None
              expression (bytecomp/emitcode.ml[289,9806+42]..[289,9806+54])
                Pexp_apply
                expression (bytecomp/emitcode.ml[289,9806+42]..[289,9806+45])
                  Pexp_ident "out" (bytecomp/emitcode.ml[289,9806+42]..[289,9806+45])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[289,9806+46]..[289,9806+54])
                      Pexp_ident "opMULINT" (bytecomp/emitcode.ml[289,9806+46]..[289,9806+54])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[290,9861+4]..[290,9861+11])
                Ppat_construct "Kdivint" (bytecomp/emitcode.ml[290,9861+4]..[290,9861+11])
                None
              expression (bytecomp/emitcode.ml[290,9861+15]..[290,9861+27])
                Pexp_apply
                expression (bytecomp/emitcode.ml[290,9861+15]..[290,9861+18])
                  Pexp_ident "out" (bytecomp/emitcode.ml[290,9861+15]..[290,9861+18])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[290,9861+19]..[290,9861+27])
                      Pexp_ident "opDIVINT" (bytecomp/emitcode.ml[290,9861+19]..[290,9861+27])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[290,9861+31]..[290,9861+38])
                Ppat_construct "Kmodint" (bytecomp/emitcode.ml[290,9861+31]..[290,9861+38])
                None
              expression (bytecomp/emitcode.ml[290,9861+42]..[290,9861+54])
                Pexp_apply
                expression (bytecomp/emitcode.ml[290,9861+42]..[290,9861+45])
                  Pexp_ident "out" (bytecomp/emitcode.ml[290,9861+42]..[290,9861+45])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[290,9861+46]..[290,9861+54])
                      Pexp_ident "opMODINT" (bytecomp/emitcode.ml[290,9861+46]..[290,9861+54])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[291,9916+4]..[291,9916+11])
                Ppat_construct "Kandint" (bytecomp/emitcode.ml[291,9916+4]..[291,9916+11])
                None
              expression (bytecomp/emitcode.ml[291,9916+15]..[291,9916+27])
                Pexp_apply
                expression (bytecomp/emitcode.ml[291,9916+15]..[291,9916+18])
                  Pexp_ident "out" (bytecomp/emitcode.ml[291,9916+15]..[291,9916+18])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[291,9916+19]..[291,9916+27])
                      Pexp_ident "opANDINT" (bytecomp/emitcode.ml[291,9916+19]..[291,9916+27])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[291,9916+31]..[291,9916+37])
                Ppat_construct "Korint" (bytecomp/emitcode.ml[291,9916+31]..[291,9916+37])
                None
              expression (bytecomp/emitcode.ml[291,9916+41]..[291,9916+52])
                Pexp_apply
                expression (bytecomp/emitcode.ml[291,9916+41]..[291,9916+44])
                  Pexp_ident "out" (bytecomp/emitcode.ml[291,9916+41]..[291,9916+44])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[291,9916+45]..[291,9916+52])
                      Pexp_ident "opORINT" (bytecomp/emitcode.ml[291,9916+45]..[291,9916+52])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[292,9969+4]..[292,9969+11])
                Ppat_construct "Kxorint" (bytecomp/emitcode.ml[292,9969+4]..[292,9969+11])
                None
              expression (bytecomp/emitcode.ml[292,9969+15]..[292,9969+27])
                Pexp_apply
                expression (bytecomp/emitcode.ml[292,9969+15]..[292,9969+18])
                  Pexp_ident "out" (bytecomp/emitcode.ml[292,9969+15]..[292,9969+18])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[292,9969+19]..[292,9969+27])
                      Pexp_ident "opXORINT" (bytecomp/emitcode.ml[292,9969+19]..[292,9969+27])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[292,9969+31]..[292,9969+38])
                Ppat_construct "Klslint" (bytecomp/emitcode.ml[292,9969+31]..[292,9969+38])
                None
              expression (bytecomp/emitcode.ml[292,9969+42]..[292,9969+54])
                Pexp_apply
                expression (bytecomp/emitcode.ml[292,9969+42]..[292,9969+45])
                  Pexp_ident "out" (bytecomp/emitcode.ml[292,9969+42]..[292,9969+45])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[292,9969+46]..[292,9969+54])
                      Pexp_ident "opLSLINT" (bytecomp/emitcode.ml[292,9969+46]..[292,9969+54])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[293,10024+4]..[293,10024+11])
                Ppat_construct "Klsrint" (bytecomp/emitcode.ml[293,10024+4]..[293,10024+11])
                None
              expression (bytecomp/emitcode.ml[293,10024+15]..[293,10024+27])
                Pexp_apply
                expression (bytecomp/emitcode.ml[293,10024+15]..[293,10024+18])
                  Pexp_ident "out" (bytecomp/emitcode.ml[293,10024+15]..[293,10024+18])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[293,10024+19]..[293,10024+27])
                      Pexp_ident "opLSRINT" (bytecomp/emitcode.ml[293,10024+19]..[293,10024+27])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[293,10024+31]..[293,10024+38])
                Ppat_construct "Kasrint" (bytecomp/emitcode.ml[293,10024+31]..[293,10024+38])
                None
              expression (bytecomp/emitcode.ml[293,10024+42]..[293,10024+54])
                Pexp_apply
                expression (bytecomp/emitcode.ml[293,10024+42]..[293,10024+45])
                  Pexp_ident "out" (bytecomp/emitcode.ml[293,10024+42]..[293,10024+45])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[293,10024+46]..[293,10024+54])
                      Pexp_ident "opASRINT" (bytecomp/emitcode.ml[293,10024+46]..[293,10024+54])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[294,10079+4]..[294,10079+14])
                Ppat_construct "Kintcomp" (bytecomp/emitcode.ml[294,10079+4]..[294,10079+12])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[294,10079+13]..[294,10079+14])
                    Ppat_var "c" (bytecomp/emitcode.ml[294,10079+13]..[294,10079+14])
              expression (bytecomp/emitcode.ml[294,10079+18]..[294,10079+29])
                Pexp_apply
                expression (bytecomp/emitcode.ml[294,10079+18]..[294,10079+27])
                  Pexp_ident "emit_comp" (bytecomp/emitcode.ml[294,10079+18]..[294,10079+27])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[294,10079+28]..[294,10079+29])
                      Pexp_ident "c" (bytecomp/emitcode.ml[294,10079+28]..[294,10079+29])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[295,10109+4]..[295,10109+16])
                Ppat_construct "Koffsetint" (bytecomp/emitcode.ml[295,10109+4]..[295,10109+14])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[295,10109+15]..[295,10109+16])
                    Ppat_var "n" (bytecomp/emitcode.ml[295,10109+15]..[295,10109+16])
              expression (bytecomp/emitcode.ml[295,10109+20]..[295,10109+46])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[295,10109+20]..[295,10109+35])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[295,10109+20]..[295,10109+23])
                    Pexp_ident "out" (bytecomp/emitcode.ml[295,10109+20]..[295,10109+23])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[295,10109+24]..[295,10109+35])
                        Pexp_ident "opOFFSETINT" (bytecomp/emitcode.ml[295,10109+24]..[295,10109+35])
                  ]
                expression (bytecomp/emitcode.ml[295,10109+37]..[295,10109+46])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[295,10109+37]..[295,10109+44])
                    Pexp_ident "out_int" (bytecomp/emitcode.ml[295,10109+37]..[295,10109+44])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[295,10109+45]..[295,10109+46])
                        Pexp_ident "n" (bytecomp/emitcode.ml[295,10109+45]..[295,10109+46])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[296,10156+4]..[296,10156+16])
                Ppat_construct "Koffsetref" (bytecomp/emitcode.ml[296,10156+4]..[296,10156+14])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[296,10156+15]..[296,10156+16])
                    Ppat_var "n" (bytecomp/emitcode.ml[296,10156+15]..[296,10156+16])
              expression (bytecomp/emitcode.ml[296,10156+20]..[296,10156+46])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[296,10156+20]..[296,10156+35])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[296,10156+20]..[296,10156+23])
                    Pexp_ident "out" (bytecomp/emitcode.ml[296,10156+20]..[296,10156+23])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[296,10156+24]..[296,10156+35])
                        Pexp_ident "opOFFSETREF" (bytecomp/emitcode.ml[296,10156+24]..[296,10156+35])
                  ]
                expression (bytecomp/emitcode.ml[296,10156+37]..[296,10156+46])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[296,10156+37]..[296,10156+44])
                    Pexp_ident "out_int" (bytecomp/emitcode.ml[296,10156+37]..[296,10156+44])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[296,10156+45]..[296,10156+46])
                        Pexp_ident "n" (bytecomp/emitcode.ml[296,10156+45]..[296,10156+46])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[297,10203+4]..[297,10203+10])
                Ppat_construct "Kisint" (bytecomp/emitcode.ml[297,10203+4]..[297,10203+10])
                None
              expression (bytecomp/emitcode.ml[297,10203+14]..[297,10203+25])
                Pexp_apply
                expression (bytecomp/emitcode.ml[297,10203+14]..[297,10203+17])
                  Pexp_ident "out" (bytecomp/emitcode.ml[297,10203+14]..[297,10203+17])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[297,10203+18]..[297,10203+25])
                      Pexp_ident "opISINT" (bytecomp/emitcode.ml[297,10203+18]..[297,10203+25])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[298,10229+4]..[298,10229+10])
                Ppat_construct "Kisout" (bytecomp/emitcode.ml[298,10229+4]..[298,10229+10])
                None
              expression (bytecomp/emitcode.ml[298,10229+14]..[298,10229+26])
                Pexp_apply
                expression (bytecomp/emitcode.ml[298,10229+14]..[298,10229+17])
                  Pexp_ident "out" (bytecomp/emitcode.ml[298,10229+14]..[298,10229+17])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[298,10229+18]..[298,10229+26])
                      Pexp_ident "opULTINT" (bytecomp/emitcode.ml[298,10229+18]..[298,10229+26])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[299,10256+4]..[299,10256+14])
                Ppat_construct "Kgetmethod" (bytecomp/emitcode.ml[299,10256+4]..[299,10256+14])
                None
              expression (bytecomp/emitcode.ml[299,10256+18]..[299,10256+33])
                Pexp_apply
                expression (bytecomp/emitcode.ml[299,10256+18]..[299,10256+21])
                  Pexp_ident "out" (bytecomp/emitcode.ml[299,10256+18]..[299,10256+21])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[299,10256+22]..[299,10256+33])
                      Pexp_ident "opGETMETHOD" (bytecomp/emitcode.ml[299,10256+22]..[299,10256+33])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[300,10290+4]..[300,10290+18])
                Ppat_construct "Kgetpubmet" (bytecomp/emitcode.ml[300,10290+4]..[300,10290+14])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[300,10290+15]..[300,10290+18])
                    Ppat_var "tag" (bytecomp/emitcode.ml[300,10290+15]..[300,10290+18])
              expression (bytecomp/emitcode.ml[300,10290+22]..[300,10290+61])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[300,10290+22]..[300,10290+37])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[300,10290+22]..[300,10290+25])
                    Pexp_ident "out" (bytecomp/emitcode.ml[300,10290+22]..[300,10290+25])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[300,10290+26]..[300,10290+37])
                        Pexp_ident "opGETPUBMET" (bytecomp/emitcode.ml[300,10290+26]..[300,10290+37])
                  ]
                expression (bytecomp/emitcode.ml[300,10290+39]..[300,10290+61])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[300,10290+39]..[300,10290+50])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[300,10290+39]..[300,10290+46])
                      Pexp_ident "out_int" (bytecomp/emitcode.ml[300,10290+39]..[300,10290+46])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[300,10290+47]..[300,10290+50])
                          Pexp_ident "tag" (bytecomp/emitcode.ml[300,10290+47]..[300,10290+50])
                    ]
                  expression (bytecomp/emitcode.ml[300,10290+52]..[300,10290+61])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[300,10290+52]..[300,10290+59])
                      Pexp_ident "out_int" (bytecomp/emitcode.ml[300,10290+52]..[300,10290+59])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[300,10290+60]..[300,10290+61])
                          Pexp_constant PConst_int (0,None)
                    ]
            <case>
              pattern (bytecomp/emitcode.ml[301,10352+4]..[301,10352+14])
                Ppat_construct "Kgetdynmet" (bytecomp/emitcode.ml[301,10352+4]..[301,10352+14])
                None
              expression (bytecomp/emitcode.ml[301,10352+18]..[301,10352+33])
                Pexp_apply
                expression (bytecomp/emitcode.ml[301,10352+18]..[301,10352+21])
                  Pexp_ident "out" (bytecomp/emitcode.ml[301,10352+18]..[301,10352+21])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[301,10352+22]..[301,10352+33])
                      Pexp_ident "opGETDYNMET" (bytecomp/emitcode.ml[301,10352+22]..[301,10352+33])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[302,10386+4]..[302,10386+13])
                Ppat_construct "Kevent" (bytecomp/emitcode.ml[302,10386+4]..[302,10386+10])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[302,10386+11]..[302,10386+13])
                    Ppat_var "ev" (bytecomp/emitcode.ml[302,10386+11]..[302,10386+13])
              expression (bytecomp/emitcode.ml[302,10386+17]..[302,10386+32])
                Pexp_apply
                expression (bytecomp/emitcode.ml[302,10386+17]..[302,10386+29])
                  Pexp_ident "record_event" (bytecomp/emitcode.ml[302,10386+17]..[302,10386+29])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[302,10386+30]..[302,10386+32])
                      Pexp_ident "ev" (bytecomp/emitcode.ml[302,10386+30]..[302,10386+32])
                ]
            <case>
              pattern (bytecomp/emitcode.ml[303,10419+4]..[303,10419+9])
                Ppat_construct "Kstop" (bytecomp/emitcode.ml[303,10419+4]..[303,10419+9])
                None
              expression (bytecomp/emitcode.ml[303,10419+13]..[303,10419+23])
                Pexp_apply
                expression (bytecomp/emitcode.ml[303,10419+13]..[303,10419+16])
                  Pexp_ident "out" (bytecomp/emitcode.ml[303,10419+13]..[303,10419+16])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[303,10419+17]..[303,10419+23])
                      Pexp_ident "opSTOP" (bytecomp/emitcode.ml[303,10419+17]..[303,10419+23])
                ]
          ]
    ]
  structure_item (bytecomp/emitcode.ml[307,10523+0]..[310,10627+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[307,10523+4]..[307,10523+18])
          Ppat_var "remerge_events" (bytecomp/emitcode.ml[307,10523+4]..[307,10523+18])
        expression (bytecomp/emitcode.ml[307,10523+19]..[310,10627+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[307,10523+19]..[307,10523+22])
            Ppat_var "ev1" (bytecomp/emitcode.ml[307,10523+19]..[307,10523+22])
          expression (bytecomp/emitcode.ml[307,10523+25]..[310,10627+24])
            Pexp_function
            [
              <case>
                pattern (bytecomp/emitcode.ml[308,10557+4]..[308,10557+19])
                  Ppat_construct "::" (bytecomp/emitcode.ml[308,10557+15]..[308,10557+17])
                  Some
                    []
                    pattern (bytecomp/emitcode.ml[308,10557+4]..[308,10557+19]) ghost
                      Ppat_tuple
                      [
                        pattern (bytecomp/emitcode.ml[308,10557+4]..[308,10557+14])
                          Ppat_construct "Kevent" (bytecomp/emitcode.ml[308,10557+4]..[308,10557+10])
                          Some
                            []
                            pattern (bytecomp/emitcode.ml[308,10557+11]..[308,10557+14])
                              Ppat_var "ev2" (bytecomp/emitcode.ml[308,10557+11]..[308,10557+14])
                        pattern (bytecomp/emitcode.ml[308,10557+18]..[308,10557+19])
                          Ppat_var "c" (bytecomp/emitcode.ml[308,10557+18]..[308,10557+19])
                      ]
                expression (bytecomp/emitcode.ml[309,10580+4]..[309,10580+46])
                  Pexp_construct "::" (bytecomp/emitcode.ml[309,10580+42]..[309,10580+44])
                  Some
                    expression (bytecomp/emitcode.ml[309,10580+4]..[309,10580+46]) ghost
                      Pexp_tuple
                      [
                        expression (bytecomp/emitcode.ml[309,10580+4]..[309,10580+41])
                          Pexp_construct "Kevent" (bytecomp/emitcode.ml[309,10580+4]..[309,10580+10])
                          Some
                            expression (bytecomp/emitcode.ml[309,10580+11]..[309,10580+41])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[309,10580+12]..[309,10580+32])
                                Pexp_ident "Bytegen.merge_events" (bytecomp/emitcode.ml[309,10580+12]..[309,10580+32])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[309,10580+33]..[309,10580+36])
                                    Pexp_ident "ev1" (bytecomp/emitcode.ml[309,10580+33]..[309,10580+36])
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[309,10580+37]..[309,10580+40])
                                    Pexp_ident "ev2" (bytecomp/emitcode.ml[309,10580+37]..[309,10580+40])
                              ]
                        expression (bytecomp/emitcode.ml[309,10580+45]..[309,10580+46])
                          Pexp_ident "c" (bytecomp/emitcode.ml[309,10580+45]..[309,10580+46])
                      ]
              <case>
                pattern (bytecomp/emitcode.ml[310,10627+4]..[310,10627+5])
                  Ppat_var "c" (bytecomp/emitcode.ml[310,10627+4]..[310,10627+5])
                expression (bytecomp/emitcode.ml[310,10627+9]..[310,10627+24])
                  Pexp_construct "::" (bytecomp/emitcode.ml[310,10627+20]..[310,10627+22])
                  Some
                    expression (bytecomp/emitcode.ml[310,10627+9]..[310,10627+24]) ghost
                      Pexp_tuple
                      [
                        expression (bytecomp/emitcode.ml[310,10627+9]..[310,10627+19])
                          Pexp_construct "Kevent" (bytecomp/emitcode.ml[310,10627+9]..[310,10627+15])
                          Some
                            expression (bytecomp/emitcode.ml[310,10627+16]..[310,10627+19])
                              Pexp_ident "ev1" (bytecomp/emitcode.ml[310,10627+16]..[310,10627+19])
                        expression (bytecomp/emitcode.ml[310,10627+23]..[310,10627+24])
                          Pexp_ident "c" (bytecomp/emitcode.ml[310,10627+23]..[310,10627+24])
                      ]
            ]
    ]
  structure_item (bytecomp/emitcode.ml[312,10653+0]..[387,13387+30])
    Pstr_value Rec
    [
      <def>
        pattern (bytecomp/emitcode.ml[312,10653+8]..[312,10653+12])
          Ppat_var "emit" (bytecomp/emitcode.ml[312,10653+8]..[312,10653+12])
        expression (bytecomp/emitcode.ml[312,10653+15]..[387,13387+30])
          Pexp_function
          [
            <case>
              pattern (bytecomp/emitcode.ml[313,10677+4]..[313,10677+6])
                Ppat_construct "[]" (bytecomp/emitcode.ml[313,10677+4]..[313,10677+6])
                None
              expression (bytecomp/emitcode.ml[313,10677+10]..[313,10677+12])
                Pexp_construct "()" (bytecomp/emitcode.ml[313,10677+10]..[313,10677+12])
                None
            <case>
              pattern (bytecomp/emitcode.ml[316,10757+4]..[316,10757+51])
                Ppat_construct "::" (bytecomp/emitcode.ml[316,10757+9]..[316,10757+11])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[316,10757+4]..[316,10757+51]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[316,10757+4]..[316,10757+9])
                        Ppat_construct "Kpush" (bytecomp/emitcode.ml[316,10757+4]..[316,10757+9])
                        None
                      pattern (bytecomp/emitcode.ml[316,10757+11]..[316,10757+51])
                        Ppat_construct "::" (bytecomp/emitcode.ml[316,10757+19]..[316,10757+21])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[316,10757+11]..[316,10757+51]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[316,10757+11]..[316,10757+19])
                                Ppat_construct "Kconst" (bytecomp/emitcode.ml[316,10757+11]..[316,10757+17])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[316,10757+18]..[316,10757+19])
                                    Ppat_var "k" (bytecomp/emitcode.ml[316,10757+18]..[316,10757+19])
                              pattern (bytecomp/emitcode.ml[316,10757+21]..[316,10757+51])
                                Ppat_construct "::" (bytecomp/emitcode.ml[316,10757+31]..[316,10757+33])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[316,10757+21]..[316,10757+51]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (bytecomp/emitcode.ml[316,10757+21]..[316,10757+31])
                                        Ppat_construct "Kintcomp" (bytecomp/emitcode.ml[316,10757+21]..[316,10757+29])
                                        Some
                                          []
                                          pattern (bytecomp/emitcode.ml[316,10757+30]..[316,10757+31])
                                            Ppat_var "c" (bytecomp/emitcode.ml[316,10757+30]..[316,10757+31])
                                      pattern (bytecomp/emitcode.ml[316,10757+33]..[316,10757+51])
                                        Ppat_construct "::" (bytecomp/emitcode.ml[316,10757+46]..[316,10757+48])
                                        Some
                                          []
                                          pattern (bytecomp/emitcode.ml[316,10757+33]..[316,10757+51]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (bytecomp/emitcode.ml[316,10757+33]..[316,10757+46])
                                                Ppat_construct "Kbranchif" (bytecomp/emitcode.ml[316,10757+33]..[316,10757+42])
                                                Some
                                                  []
                                                  pattern (bytecomp/emitcode.ml[316,10757+43]..[316,10757+46])
                                                    Ppat_var "lbl" (bytecomp/emitcode.ml[316,10757+43]..[316,10757+46])
                                              pattern (bytecomp/emitcode.ml[316,10757+48]..[316,10757+51])
                                                Ppat_var "rem" (bytecomp/emitcode.ml[316,10757+48]..[316,10757+51])
                                            ]
                                    ]
                            ]
                    ]
              <when>
                expression (bytecomp/emitcode.ml[317,10809+11]..[317,10809+27])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[317,10809+11]..[317,10809+25])
                    Pexp_ident "is_immed_const" (bytecomp/emitcode.ml[317,10809+11]..[317,10809+25])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[317,10809+26]..[317,10809+27])
                        Pexp_ident "k" (bytecomp/emitcode.ml[317,10809+26]..[317,10809+27])
                  ]
              expression (bytecomp/emitcode.ml[318,10840+8]..[321,10915+16])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[318,10840+8]..[318,10840+26])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[318,10840+8]..[318,10840+24])
                    Pexp_ident "emit_branch_comp" (bytecomp/emitcode.ml[318,10840+8]..[318,10840+24])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[318,10840+25]..[318,10840+26])
                        Pexp_ident "c" (bytecomp/emitcode.ml[318,10840+25]..[318,10840+26])
                  ]
                expression (bytecomp/emitcode.ml[319,10869+8]..[321,10915+16])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[319,10869+8]..[319,10869+19])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[319,10869+8]..[319,10869+17])
                      Pexp_ident "out_const" (bytecomp/emitcode.ml[319,10869+8]..[319,10869+17])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[319,10869+18]..[319,10869+19])
                          Pexp_ident "k" (bytecomp/emitcode.ml[319,10869+18]..[319,10869+19])
                    ]
                  expression (bytecomp/emitcode.ml[320,10891+8]..[321,10915+16])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[320,10891+8]..[320,10891+21])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[320,10891+8]..[320,10891+17])
                        Pexp_ident "out_label" (bytecomp/emitcode.ml[320,10891+8]..[320,10891+17])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[320,10891+18]..[320,10891+21])
                            Pexp_ident "lbl" (bytecomp/emitcode.ml[320,10891+18]..[320,10891+21])
                      ]
                    expression (bytecomp/emitcode.ml[321,10915+8]..[321,10915+16])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[321,10915+8]..[321,10915+12])
                        Pexp_ident "emit" (bytecomp/emitcode.ml[321,10915+8]..[321,10915+12])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[321,10915+13]..[321,10915+16])
                            Pexp_ident "rem" (bytecomp/emitcode.ml[321,10915+13]..[321,10915+16])
                      ]
            <case>
              pattern (bytecomp/emitcode.ml[322,10932+4]..[322,10932+54])
                Ppat_construct "::" (bytecomp/emitcode.ml[322,10932+9]..[322,10932+11])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[322,10932+4]..[322,10932+54]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[322,10932+4]..[322,10932+9])
                        Ppat_construct "Kpush" (bytecomp/emitcode.ml[322,10932+4]..[322,10932+9])
                        None
                      pattern (bytecomp/emitcode.ml[322,10932+11]..[322,10932+54])
                        Ppat_construct "::" (bytecomp/emitcode.ml[322,10932+19]..[322,10932+21])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[322,10932+11]..[322,10932+54]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[322,10932+11]..[322,10932+19])
                                Ppat_construct "Kconst" (bytecomp/emitcode.ml[322,10932+11]..[322,10932+17])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[322,10932+18]..[322,10932+19])
                                    Ppat_var "k" (bytecomp/emitcode.ml[322,10932+18]..[322,10932+19])
                              pattern (bytecomp/emitcode.ml[322,10932+21]..[322,10932+54])
                                Ppat_construct "::" (bytecomp/emitcode.ml[322,10932+31]..[322,10932+33])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[322,10932+21]..[322,10932+54]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (bytecomp/emitcode.ml[322,10932+21]..[322,10932+31])
                                        Ppat_construct "Kintcomp" (bytecomp/emitcode.ml[322,10932+21]..[322,10932+29])
                                        Some
                                          []
                                          pattern (bytecomp/emitcode.ml[322,10932+30]..[322,10932+31])
                                            Ppat_var "c" (bytecomp/emitcode.ml[322,10932+30]..[322,10932+31])
                                      pattern (bytecomp/emitcode.ml[322,10932+33]..[322,10932+54])
                                        Ppat_construct "::" (bytecomp/emitcode.ml[322,10932+49]..[322,10932+51])
                                        Some
                                          []
                                          pattern (bytecomp/emitcode.ml[322,10932+33]..[322,10932+54]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (bytecomp/emitcode.ml[322,10932+33]..[322,10932+49])
                                                Ppat_construct "Kbranchifnot" (bytecomp/emitcode.ml[322,10932+33]..[322,10932+45])
                                                Some
                                                  []
                                                  pattern (bytecomp/emitcode.ml[322,10932+46]..[322,10932+49])
                                                    Ppat_var "lbl" (bytecomp/emitcode.ml[322,10932+46]..[322,10932+49])
                                              pattern (bytecomp/emitcode.ml[322,10932+51]..[322,10932+54])
                                                Ppat_var "rem" (bytecomp/emitcode.ml[322,10932+51]..[322,10932+54])
                                            ]
                                    ]
                            ]
                    ]
              <when>
                expression (bytecomp/emitcode.ml[323,10987+11]..[323,10987+27])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[323,10987+11]..[323,10987+25])
                    Pexp_ident "is_immed_const" (bytecomp/emitcode.ml[323,10987+11]..[323,10987+25])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[323,10987+26]..[323,10987+27])
                        Pexp_ident "k" (bytecomp/emitcode.ml[323,10987+26]..[323,10987+27])
                  ]
              expression (bytecomp/emitcode.ml[324,11018+8]..[327,11121+16])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[324,11018+8]..[324,11018+54])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[324,11018+8]..[324,11018+24])
                    Pexp_ident "emit_branch_comp" (bytecomp/emitcode.ml[324,11018+8]..[324,11018+24])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[324,11018+25]..[324,11018+54])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[324,11018+26]..[324,11018+51])
                          Pexp_ident "negate_integer_comparison" (bytecomp/emitcode.ml[324,11018+26]..[324,11018+51])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[324,11018+52]..[324,11018+53])
                              Pexp_ident "c" (bytecomp/emitcode.ml[324,11018+52]..[324,11018+53])
                        ]
                  ]
                expression (bytecomp/emitcode.ml[325,11075+8]..[327,11121+16])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[325,11075+8]..[325,11075+19])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[325,11075+8]..[325,11075+17])
                      Pexp_ident "out_const" (bytecomp/emitcode.ml[325,11075+8]..[325,11075+17])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[325,11075+18]..[325,11075+19])
                          Pexp_ident "k" (bytecomp/emitcode.ml[325,11075+18]..[325,11075+19])
                    ]
                  expression (bytecomp/emitcode.ml[326,11097+8]..[327,11121+16])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[326,11097+8]..[326,11097+21])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[326,11097+8]..[326,11097+17])
                        Pexp_ident "out_label" (bytecomp/emitcode.ml[326,11097+8]..[326,11097+17])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[326,11097+18]..[326,11097+21])
                            Pexp_ident "lbl" (bytecomp/emitcode.ml[326,11097+18]..[326,11097+21])
                      ]
                    expression (bytecomp/emitcode.ml[327,11121+8]..[327,11121+16])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[327,11121+8]..[327,11121+12])
                        Pexp_ident "emit" (bytecomp/emitcode.ml[327,11121+8]..[327,11121+12])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[327,11121+13]..[327,11121+16])
                            Pexp_ident "rem" (bytecomp/emitcode.ml[327,11121+13]..[327,11121+16])
                      ]
            <case>
              pattern (bytecomp/emitcode.ml[329,11165+4]..[329,11165+47])
                Ppat_construct "::" (bytecomp/emitcode.ml[329,11165+9]..[329,11165+11])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[329,11165+4]..[329,11165+47]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[329,11165+4]..[329,11165+9])
                        Ppat_construct "Kpush" (bytecomp/emitcode.ml[329,11165+4]..[329,11165+9])
                        None
                      pattern (bytecomp/emitcode.ml[329,11165+11]..[329,11165+47])
                        Ppat_construct "::" (bytecomp/emitcode.ml[329,11165+19]..[329,11165+21])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[329,11165+11]..[329,11165+47]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[329,11165+11]..[329,11165+19])
                                Ppat_construct "Kconst" (bytecomp/emitcode.ml[329,11165+11]..[329,11165+17])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[329,11165+18]..[329,11165+19])
                                    Ppat_var "k" (bytecomp/emitcode.ml[329,11165+18]..[329,11165+19])
                              pattern (bytecomp/emitcode.ml[329,11165+21]..[329,11165+47])
                                Ppat_construct "::" (bytecomp/emitcode.ml[329,11165+27]..[329,11165+29])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[329,11165+21]..[329,11165+47]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (bytecomp/emitcode.ml[329,11165+21]..[329,11165+27])
                                        Ppat_construct "Kisout" (bytecomp/emitcode.ml[329,11165+21]..[329,11165+27])
                                        None
                                      pattern (bytecomp/emitcode.ml[329,11165+29]..[329,11165+47])
                                        Ppat_construct "::" (bytecomp/emitcode.ml[329,11165+42]..[329,11165+44])
                                        Some
                                          []
                                          pattern (bytecomp/emitcode.ml[329,11165+29]..[329,11165+47]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (bytecomp/emitcode.ml[329,11165+29]..[329,11165+42])
                                                Ppat_construct "Kbranchif" (bytecomp/emitcode.ml[329,11165+29]..[329,11165+38])
                                                Some
                                                  []
                                                  pattern (bytecomp/emitcode.ml[329,11165+39]..[329,11165+42])
                                                    Ppat_var "lbl" (bytecomp/emitcode.ml[329,11165+39]..[329,11165+42])
                                              pattern (bytecomp/emitcode.ml[329,11165+44]..[329,11165+47])
                                                Ppat_var "rem" (bytecomp/emitcode.ml[329,11165+44]..[329,11165+47])
                                            ]
                                    ]
                            ]
                    ]
              <when>
                expression (bytecomp/emitcode.ml[330,11213+11]..[330,11213+27])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[330,11213+11]..[330,11213+25])
                    Pexp_ident "is_immed_const" (bytecomp/emitcode.ml[330,11213+11]..[330,11213+25])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[330,11213+26]..[330,11213+27])
                        Pexp_ident "k" (bytecomp/emitcode.ml[330,11213+26]..[330,11213+27])
                  ]
              expression (bytecomp/emitcode.ml[331,11244+8]..[334,11314+16])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[331,11244+8]..[331,11244+21])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[331,11244+8]..[331,11244+11])
                    Pexp_ident "out" (bytecomp/emitcode.ml[331,11244+8]..[331,11244+11])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[331,11244+12]..[331,11244+21])
                        Pexp_ident "opBULTINT" (bytecomp/emitcode.ml[331,11244+12]..[331,11244+21])
                  ]
                expression (bytecomp/emitcode.ml[332,11268+8]..[334,11314+16])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[332,11268+8]..[332,11268+19])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[332,11268+8]..[332,11268+17])
                      Pexp_ident "out_const" (bytecomp/emitcode.ml[332,11268+8]..[332,11268+17])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[332,11268+18]..[332,11268+19])
                          Pexp_ident "k" (bytecomp/emitcode.ml[332,11268+18]..[332,11268+19])
                    ]
                  expression (bytecomp/emitcode.ml[333,11290+8]..[334,11314+16])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[333,11290+8]..[333,11290+21])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[333,11290+8]..[333,11290+17])
                        Pexp_ident "out_label" (bytecomp/emitcode.ml[333,11290+8]..[333,11290+17])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[333,11290+18]..[333,11290+21])
                            Pexp_ident "lbl" (bytecomp/emitcode.ml[333,11290+18]..[333,11290+21])
                      ]
                    expression (bytecomp/emitcode.ml[334,11314+8]..[334,11314+16])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[334,11314+8]..[334,11314+12])
                        Pexp_ident "emit" (bytecomp/emitcode.ml[334,11314+8]..[334,11314+12])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[334,11314+13]..[334,11314+16])
                            Pexp_ident "rem" (bytecomp/emitcode.ml[334,11314+13]..[334,11314+16])
                      ]
            <case>
              pattern (bytecomp/emitcode.ml[335,11331+4]..[335,11331+50])
                Ppat_construct "::" (bytecomp/emitcode.ml[335,11331+9]..[335,11331+11])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[335,11331+4]..[335,11331+50]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[335,11331+4]..[335,11331+9])
                        Ppat_construct "Kpush" (bytecomp/emitcode.ml[335,11331+4]..[335,11331+9])
                        None
                      pattern (bytecomp/emitcode.ml[335,11331+11]..[335,11331+50])
                        Ppat_construct "::" (bytecomp/emitcode.ml[335,11331+19]..[335,11331+21])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[335,11331+11]..[335,11331+50]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[335,11331+11]..[335,11331+19])
                                Ppat_construct "Kconst" (bytecomp/emitcode.ml[335,11331+11]..[335,11331+17])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[335,11331+18]..[335,11331+19])
                                    Ppat_var "k" (bytecomp/emitcode.ml[335,11331+18]..[335,11331+19])
                              pattern (bytecomp/emitcode.ml[335,11331+21]..[335,11331+50])
                                Ppat_construct "::" (bytecomp/emitcode.ml[335,11331+27]..[335,11331+29])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[335,11331+21]..[335,11331+50]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (bytecomp/emitcode.ml[335,11331+21]..[335,11331+27])
                                        Ppat_construct "Kisout" (bytecomp/emitcode.ml[335,11331+21]..[335,11331+27])
                                        None
                                      pattern (bytecomp/emitcode.ml[335,11331+29]..[335,11331+50])
                                        Ppat_construct "::" (bytecomp/emitcode.ml[335,11331+45]..[335,11331+47])
                                        Some
                                          []
                                          pattern (bytecomp/emitcode.ml[335,11331+29]..[335,11331+50]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (bytecomp/emitcode.ml[335,11331+29]..[335,11331+45])
                                                Ppat_construct "Kbranchifnot" (bytecomp/emitcode.ml[335,11331+29]..[335,11331+41])
                                                Some
                                                  []
                                                  pattern (bytecomp/emitcode.ml[335,11331+42]..[335,11331+45])
                                                    Ppat_var "lbl" (bytecomp/emitcode.ml[335,11331+42]..[335,11331+45])
                                              pattern (bytecomp/emitcode.ml[335,11331+47]..[335,11331+50])
                                                Ppat_var "rem" (bytecomp/emitcode.ml[335,11331+47]..[335,11331+50])
                                            ]
                                    ]
                            ]
                    ]
              <when>
                expression (bytecomp/emitcode.ml[336,11382+11]..[336,11382+27])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[336,11382+11]..[336,11382+25])
                    Pexp_ident "is_immed_const" (bytecomp/emitcode.ml[336,11382+11]..[336,11382+25])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[336,11382+26]..[336,11382+27])
                        Pexp_ident "k" (bytecomp/emitcode.ml[336,11382+26]..[336,11382+27])
                  ]
              expression (bytecomp/emitcode.ml[337,11413+8]..[340,11483+16])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[337,11413+8]..[337,11413+21])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[337,11413+8]..[337,11413+11])
                    Pexp_ident "out" (bytecomp/emitcode.ml[337,11413+8]..[337,11413+11])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[337,11413+12]..[337,11413+21])
                        Pexp_ident "opBUGEINT" (bytecomp/emitcode.ml[337,11413+12]..[337,11413+21])
                  ]
                expression (bytecomp/emitcode.ml[338,11437+8]..[340,11483+16])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[338,11437+8]..[338,11437+19])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[338,11437+8]..[338,11437+17])
                      Pexp_ident "out_const" (bytecomp/emitcode.ml[338,11437+8]..[338,11437+17])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[338,11437+18]..[338,11437+19])
                          Pexp_ident "k" (bytecomp/emitcode.ml[338,11437+18]..[338,11437+19])
                    ]
                  expression (bytecomp/emitcode.ml[339,11459+8]..[340,11483+16])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[339,11459+8]..[339,11459+21])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[339,11459+8]..[339,11459+17])
                        Pexp_ident "out_label" (bytecomp/emitcode.ml[339,11459+8]..[339,11459+17])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[339,11459+18]..[339,11459+21])
                            Pexp_ident "lbl" (bytecomp/emitcode.ml[339,11459+18]..[339,11459+21])
                      ]
                    expression (bytecomp/emitcode.ml[340,11483+8]..[340,11483+16])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[340,11483+8]..[340,11483+12])
                        Pexp_ident "emit" (bytecomp/emitcode.ml[340,11483+8]..[340,11483+12])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[340,11483+13]..[340,11483+16])
                            Pexp_ident "rem" (bytecomp/emitcode.ml[340,11483+13]..[340,11483+16])
                      ]
            <case>
              pattern (bytecomp/emitcode.ml[342,11574+4]..[342,11574+37])
                Ppat_construct "::" (bytecomp/emitcode.ml[342,11574+10]..[342,11574+12])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[342,11574+4]..[342,11574+37]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[342,11574+4]..[342,11574+9])
                        Ppat_construct "Kpush" (bytecomp/emitcode.ml[342,11574+4]..[342,11574+9])
                        None
                      pattern (bytecomp/emitcode.ml[342,11574+13]..[342,11574+37])
                        Ppat_construct "::" (bytecomp/emitcode.ml[342,11574+20]..[342,11574+22])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[342,11574+13]..[342,11574+37]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[342,11574+13]..[342,11574+19])
                                Ppat_construct "Kacc" (bytecomp/emitcode.ml[342,11574+13]..[342,11574+17])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[342,11574+18]..[342,11574+19])
                                    Ppat_constant PConst_int (0,None)
                              pattern (bytecomp/emitcode.ml[342,11574+23]..[342,11574+37])
                                Ppat_construct "::" (bytecomp/emitcode.ml[342,11574+33]..[342,11574+35])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[342,11574+23]..[342,11574+37]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (bytecomp/emitcode.ml[342,11574+23]..[342,11574+32])
                                        Ppat_construct "Kreturn" (bytecomp/emitcode.ml[342,11574+23]..[342,11574+30])
                                        Some
                                          []
                                          pattern (bytecomp/emitcode.ml[342,11574+31]..[342,11574+32])
                                            Ppat_var "m" (bytecomp/emitcode.ml[342,11574+31]..[342,11574+32])
                                      pattern (bytecomp/emitcode.ml[342,11574+36]..[342,11574+37])
                                        Ppat_var "c" (bytecomp/emitcode.ml[342,11574+36]..[342,11574+37])
                                    ]
                            ]
                    ]
              expression (bytecomp/emitcode.ml[343,11615+6]..[343,11615+31])
                Pexp_apply
                expression (bytecomp/emitcode.ml[343,11615+6]..[343,11615+10])
                  Pexp_ident "emit" (bytecomp/emitcode.ml[343,11615+6]..[343,11615+10])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[343,11615+11]..[343,11615+31])
                      Pexp_construct "::" (bytecomp/emitcode.ml[343,11615+26]..[343,11615+28])
                      Some
                        expression (bytecomp/emitcode.ml[343,11615+12]..[343,11615+30]) ghost
                          Pexp_tuple
                          [
                            expression (bytecomp/emitcode.ml[343,11615+12]..[343,11615+25])
                              Pexp_construct "Kreturn" (bytecomp/emitcode.ml[343,11615+12]..[343,11615+19])
                              Some
                                expression (bytecomp/emitcode.ml[343,11615+20]..[343,11615+25])
                                  Pexp_apply
                                  expression (bytecomp/emitcode.ml[343,11615+22]..[343,11615+23])
                                    Pexp_ident "-" (bytecomp/emitcode.ml[343,11615+22]..[343,11615+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[343,11615+21]..[343,11615+22])
                                        Pexp_ident "m" (bytecomp/emitcode.ml[343,11615+21]..[343,11615+22])
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[343,11615+23]..[343,11615+24])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                            expression (bytecomp/emitcode.ml[343,11615+29]..[343,11615+30])
                              Pexp_ident "c" (bytecomp/emitcode.ml[343,11615+29]..[343,11615+30])
                          ]
                ]
            <case>
              pattern (bytecomp/emitcode.ml[345,11685+4]..[345,11685+24])
                Ppat_construct "::" (bytecomp/emitcode.ml[345,11685+10]..[345,11685+12])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[345,11685+4]..[345,11685+24]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[345,11685+4]..[345,11685+9])
                        Ppat_construct "Kpush" (bytecomp/emitcode.ml[345,11685+4]..[345,11685+9])
                        None
                      pattern (bytecomp/emitcode.ml[345,11685+13]..[345,11685+24])
                        Ppat_construct "::" (bytecomp/emitcode.ml[345,11685+20]..[345,11685+22])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[345,11685+13]..[345,11685+24]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[345,11685+13]..[345,11685+19])
                                Ppat_construct "Kacc" (bytecomp/emitcode.ml[345,11685+13]..[345,11685+17])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[345,11685+18]..[345,11685+19])
                                    Ppat_var "n" (bytecomp/emitcode.ml[345,11685+18]..[345,11685+19])
                              pattern (bytecomp/emitcode.ml[345,11685+23]..[345,11685+24])
                                Ppat_var "c" (bytecomp/emitcode.ml[345,11685+23]..[345,11685+24])
                            ]
                    ]
              expression (bytecomp/emitcode.ml[346,11713+6]..[347,11786+12])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[346,11713+6]..[346,11713+71])
                  Pexp_ifthenelse
                  expression (bytecomp/emitcode.ml[346,11713+9]..[346,11713+14])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[346,11713+11]..[346,11713+12])
                      Pexp_ident "<" (bytecomp/emitcode.ml[346,11713+11]..[346,11713+12])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[346,11713+9]..[346,11713+10])
                          Pexp_ident "n" (bytecomp/emitcode.ml[346,11713+9]..[346,11713+10])
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[346,11713+13]..[346,11713+14])
                          Pexp_constant PConst_int (8,None)
                    ]
                  expression (bytecomp/emitcode.ml[346,11713+20]..[346,11713+39])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[346,11713+20]..[346,11713+23])
                      Pexp_ident "out" (bytecomp/emitcode.ml[346,11713+20]..[346,11713+23])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[346,11713+23]..[346,11713+39])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[346,11713+35]..[346,11713+36])
                            Pexp_ident "+" (bytecomp/emitcode.ml[346,11713+35]..[346,11713+36])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[346,11713+24]..[346,11713+34])
                                Pexp_ident "opPUSHACC0" (bytecomp/emitcode.ml[346,11713+24]..[346,11713+34])
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[346,11713+37]..[346,11713+38])
                                Pexp_ident "n" (bytecomp/emitcode.ml[346,11713+37]..[346,11713+38])
                          ]
                    ]
                  Some
                    expression (bytecomp/emitcode.ml[346,11713+45]..[346,11713+71])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[346,11713+46]..[346,11713+59])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[346,11713+46]..[346,11713+49])
                          Pexp_ident "out" (bytecomp/emitcode.ml[346,11713+46]..[346,11713+49])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[346,11713+50]..[346,11713+59])
                              Pexp_ident "opPUSHACC" (bytecomp/emitcode.ml[346,11713+50]..[346,11713+59])
                        ]
                      expression (bytecomp/emitcode.ml[346,11713+61]..[346,11713+70])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[346,11713+61]..[346,11713+68])
                          Pexp_ident "out_int" (bytecomp/emitcode.ml[346,11713+61]..[346,11713+68])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[346,11713+69]..[346,11713+70])
                              Pexp_ident "n" (bytecomp/emitcode.ml[346,11713+69]..[346,11713+70])
                        ]
                expression (bytecomp/emitcode.ml[347,11786+6]..[347,11786+12])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[347,11786+6]..[347,11786+10])
                    Pexp_ident "emit" (bytecomp/emitcode.ml[347,11786+6]..[347,11786+10])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[347,11786+11]..[347,11786+12])
                        Pexp_ident "c" (bytecomp/emitcode.ml[347,11786+11]..[347,11786+12])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[348,11799+4]..[348,11799+27])
                Ppat_construct "::" (bytecomp/emitcode.ml[348,11799+10]..[348,11799+12])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[348,11799+4]..[348,11799+27]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[348,11799+4]..[348,11799+9])
                        Ppat_construct "Kpush" (bytecomp/emitcode.ml[348,11799+4]..[348,11799+9])
                        None
                      pattern (bytecomp/emitcode.ml[348,11799+13]..[348,11799+27])
                        Ppat_construct "::" (bytecomp/emitcode.ml[348,11799+23]..[348,11799+25])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[348,11799+13]..[348,11799+27]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[348,11799+13]..[348,11799+22])
                                Ppat_construct "Kenvacc" (bytecomp/emitcode.ml[348,11799+13]..[348,11799+20])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[348,11799+21]..[348,11799+22])
                                    Ppat_var "n" (bytecomp/emitcode.ml[348,11799+21]..[348,11799+22])
                              pattern (bytecomp/emitcode.ml[348,11799+26]..[348,11799+27])
                                Ppat_var "c" (bytecomp/emitcode.ml[348,11799+26]..[348,11799+27])
                            ]
                    ]
              expression (bytecomp/emitcode.ml[349,11830+6]..[352,11935+12])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[349,11830+6]..[351,11893+40])
                  Pexp_ifthenelse
                  expression (bytecomp/emitcode.ml[349,11830+9]..[349,11830+24])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[349,11830+16]..[349,11830+18])
                      Pexp_ident "&&" (bytecomp/emitcode.ml[349,11830+16]..[349,11830+18])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[349,11830+9]..[349,11830+15])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[349,11830+11]..[349,11830+13])
                            Pexp_ident ">=" (bytecomp/emitcode.ml[349,11830+11]..[349,11830+13])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[349,11830+9]..[349,11830+10])
                                Pexp_ident "n" (bytecomp/emitcode.ml[349,11830+9]..[349,11830+10])
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[349,11830+14]..[349,11830+15])
                                Pexp_constant PConst_int (1,None)
                          ]
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[349,11830+19]..[349,11830+24])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[349,11830+21]..[349,11830+22])
                            Pexp_ident "<" (bytecomp/emitcode.ml[349,11830+21]..[349,11830+22])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[349,11830+19]..[349,11830+20])
                                Pexp_ident "n" (bytecomp/emitcode.ml[349,11830+19]..[349,11830+20])
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[349,11830+23]..[349,11830+24])
                                Pexp_constant PConst_int (4,None)
                          ]
                    ]
                  expression (bytecomp/emitcode.ml[350,11855+11]..[350,11855+37])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[350,11855+11]..[350,11855+14])
                      Pexp_ident "out" (bytecomp/emitcode.ml[350,11855+11]..[350,11855+14])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[350,11855+14]..[350,11855+37])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[350,11855+33]..[350,11855+34])
                            Pexp_ident "-" (bytecomp/emitcode.ml[350,11855+33]..[350,11855+34])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[350,11855+15]..[350,11855+32])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[350,11855+29]..[350,11855+30])
                                  Pexp_ident "+" (bytecomp/emitcode.ml[350,11855+29]..[350,11855+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[350,11855+15]..[350,11855+28])
                                      Pexp_ident "opPUSHENVACC1" (bytecomp/emitcode.ml[350,11855+15]..[350,11855+28])
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[350,11855+31]..[350,11855+32])
                                      Pexp_ident "n" (bytecomp/emitcode.ml[350,11855+31]..[350,11855+32])
                                ]
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[350,11855+35]..[350,11855+36])
                                Pexp_constant PConst_int (1,None)
                          ]
                    ]
                  Some
                    expression (bytecomp/emitcode.ml[351,11893+11]..[351,11893+40])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[351,11893+12]..[351,11893+28])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[351,11893+12]..[351,11893+15])
                          Pexp_ident "out" (bytecomp/emitcode.ml[351,11893+12]..[351,11893+15])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[351,11893+16]..[351,11893+28])
                              Pexp_ident "opPUSHENVACC" (bytecomp/emitcode.ml[351,11893+16]..[351,11893+28])
                        ]
                      expression (bytecomp/emitcode.ml[351,11893+30]..[351,11893+39])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[351,11893+30]..[351,11893+37])
                          Pexp_ident "out_int" (bytecomp/emitcode.ml[351,11893+30]..[351,11893+37])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[351,11893+38]..[351,11893+39])
                              Pexp_ident "n" (bytecomp/emitcode.ml[351,11893+38]..[351,11893+39])
                        ]
                expression (bytecomp/emitcode.ml[352,11935+6]..[352,11935+12])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[352,11935+6]..[352,11935+10])
                    Pexp_ident "emit" (bytecomp/emitcode.ml[352,11935+6]..[352,11935+10])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[352,11935+11]..[352,11935+12])
                        Pexp_ident "c" (bytecomp/emitcode.ml[352,11935+11]..[352,11935+12])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[353,11948+4]..[353,11948+36])
                Ppat_construct "::" (bytecomp/emitcode.ml[353,11948+10]..[353,11948+12])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[353,11948+4]..[353,11948+36]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[353,11948+4]..[353,11948+9])
                        Ppat_construct "Kpush" (bytecomp/emitcode.ml[353,11948+4]..[353,11948+9])
                        None
                      pattern (bytecomp/emitcode.ml[353,11948+13]..[353,11948+36])
                        Ppat_construct "::" (bytecomp/emitcode.ml[353,11948+32]..[353,11948+34])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[353,11948+13]..[353,11948+36]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[353,11948+13]..[353,11948+31])
                                Ppat_construct "Koffsetclosure" (bytecomp/emitcode.ml[353,11948+13]..[353,11948+27])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[353,11948+28]..[353,11948+31])
                                    Ppat_var "ofs" (bytecomp/emitcode.ml[353,11948+28]..[353,11948+31])
                              pattern (bytecomp/emitcode.ml[353,11948+35]..[353,11948+36])
                                Ppat_var "c" (bytecomp/emitcode.ml[353,11948+35]..[353,11948+36])
                            ]
                    ]
              expression (bytecomp/emitcode.ml[354,11988+6]..[357,12126+12])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[354,11988+6]..[356,12075+49])
                  Pexp_ifthenelse
                  expression (bytecomp/emitcode.ml[354,11988+9]..[354,11988+39])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[354,11988+18]..[354,11988+20])
                      Pexp_ident "||" (bytecomp/emitcode.ml[354,11988+18]..[354,11988+20])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[354,11988+9]..[354,11988+17])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[354,11988+13]..[354,11988+14])
                            Pexp_ident "=" (bytecomp/emitcode.ml[354,11988+13]..[354,11988+14])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[354,11988+9]..[354,11988+12])
                                Pexp_ident "ofs" (bytecomp/emitcode.ml[354,11988+9]..[354,11988+12])
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[354,11988+15]..[354,11988+17])
                                Pexp_constant PConst_int (-3,None)
                          ]
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[354,11988+21]..[354,11988+39])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[354,11988+29]..[354,11988+31])
                            Pexp_ident "||" (bytecomp/emitcode.ml[354,11988+29]..[354,11988+31])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[354,11988+21]..[354,11988+28])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[354,11988+25]..[354,11988+26])
                                  Pexp_ident "=" (bytecomp/emitcode.ml[354,11988+25]..[354,11988+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[354,11988+21]..[354,11988+24])
                                      Pexp_ident "ofs" (bytecomp/emitcode.ml[354,11988+21]..[354,11988+24])
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[354,11988+27]..[354,11988+28])
                                      Pexp_constant PConst_int (0,None)
                                ]
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[354,11988+32]..[354,11988+39])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[354,11988+36]..[354,11988+37])
                                  Pexp_ident "=" (bytecomp/emitcode.ml[354,11988+36]..[354,11988+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[354,11988+32]..[354,11988+35])
                                      Pexp_ident "ofs" (bytecomp/emitcode.ml[354,11988+32]..[354,11988+35])
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[354,11988+38]..[354,11988+39])
                                      Pexp_constant PConst_int (3,None)
                                ]
                          ]
                    ]
                  expression (bytecomp/emitcode.ml[355,12028+11]..[355,12028+46])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[355,12028+11]..[355,12028+14])
                      Pexp_ident "out" (bytecomp/emitcode.ml[355,12028+11]..[355,12028+14])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[355,12028+14]..[355,12028+46])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[355,12028+36]..[355,12028+37])
                            Pexp_ident "+" (bytecomp/emitcode.ml[355,12028+36]..[355,12028+37])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[355,12028+15]..[355,12028+35])
                                Pexp_ident "opPUSHOFFSETCLOSURE0" (bytecomp/emitcode.ml[355,12028+15]..[355,12028+35])
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[355,12028+38]..[355,12028+45])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[355,12028+42]..[355,12028+43])
                                  Pexp_ident "/" (bytecomp/emitcode.ml[355,12028+42]..[355,12028+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[355,12028+38]..[355,12028+41])
                                      Pexp_ident "ofs" (bytecomp/emitcode.ml[355,12028+38]..[355,12028+41])
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[355,12028+44]..[355,12028+45])
                                      Pexp_constant PConst_int (3,None)
                                ]
                          ]
                    ]
                  Some
                    expression (bytecomp/emitcode.ml[356,12075+11]..[356,12075+49])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[356,12075+12]..[356,12075+35])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[356,12075+12]..[356,12075+15])
                          Pexp_ident "out" (bytecomp/emitcode.ml[356,12075+12]..[356,12075+15])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[356,12075+16]..[356,12075+35])
                              Pexp_ident "opPUSHOFFSETCLOSURE" (bytecomp/emitcode.ml[356,12075+16]..[356,12075+35])
                        ]
                      expression (bytecomp/emitcode.ml[356,12075+37]..[356,12075+48])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[356,12075+37]..[356,12075+44])
                          Pexp_ident "out_int" (bytecomp/emitcode.ml[356,12075+37]..[356,12075+44])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[356,12075+45]..[356,12075+48])
                              Pexp_ident "ofs" (bytecomp/emitcode.ml[356,12075+45]..[356,12075+48])
                        ]
                expression (bytecomp/emitcode.ml[357,12126+6]..[357,12126+12])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[357,12126+6]..[357,12126+10])
                    Pexp_ident "emit" (bytecomp/emitcode.ml[357,12126+6]..[357,12126+10])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[357,12126+11]..[357,12126+12])
                        Pexp_ident "c" (bytecomp/emitcode.ml[357,12126+11]..[357,12126+12])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[358,12139+4]..[358,12139+46])
                Ppat_construct "::" (bytecomp/emitcode.ml[358,12139+10]..[358,12139+12])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[358,12139+4]..[358,12139+46]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[358,12139+4]..[358,12139+9])
                        Ppat_construct "Kpush" (bytecomp/emitcode.ml[358,12139+4]..[358,12139+9])
                        None
                      pattern (bytecomp/emitcode.ml[358,12139+13]..[358,12139+46])
                        Ppat_construct "::" (bytecomp/emitcode.ml[358,12139+27]..[358,12139+29])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[358,12139+13]..[358,12139+46]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[358,12139+13]..[358,12139+26])
                                Ppat_construct "Kgetglobal" (bytecomp/emitcode.ml[358,12139+13]..[358,12139+23])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[358,12139+24]..[358,12139+26])
                                    Ppat_var "id" (bytecomp/emitcode.ml[358,12139+24]..[358,12139+26])
                              pattern (bytecomp/emitcode.ml[358,12139+30]..[358,12139+46])
                                Ppat_construct "::" (bytecomp/emitcode.ml[358,12139+42]..[358,12139+44])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[358,12139+30]..[358,12139+46]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (bytecomp/emitcode.ml[358,12139+30]..[358,12139+41])
                                        Ppat_construct "Kgetfield" (bytecomp/emitcode.ml[358,12139+30]..[358,12139+39])
                                        Some
                                          []
                                          pattern (bytecomp/emitcode.ml[358,12139+40]..[358,12139+41])
                                            Ppat_var "n" (bytecomp/emitcode.ml[358,12139+40]..[358,12139+41])
                                      pattern (bytecomp/emitcode.ml[358,12139+45]..[358,12139+46])
                                        Ppat_var "c" (bytecomp/emitcode.ml[358,12139+45]..[358,12139+46])
                                    ]
                            ]
                    ]
              expression (bytecomp/emitcode.ml[359,12189+6]..[359,12189+72])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[359,12189+6]..[359,12189+30])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[359,12189+6]..[359,12189+9])
                    Pexp_ident "out" (bytecomp/emitcode.ml[359,12189+6]..[359,12189+9])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[359,12189+10]..[359,12189+30])
                        Pexp_ident "opPUSHGETGLOBALFIELD" (bytecomp/emitcode.ml[359,12189+10]..[359,12189+30])
                  ]
                expression (bytecomp/emitcode.ml[359,12189+32]..[359,12189+72])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[359,12189+32]..[359,12189+53])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[359,12189+32]..[359,12189+50])
                      Pexp_ident "slot_for_getglobal" (bytecomp/emitcode.ml[359,12189+32]..[359,12189+50])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[359,12189+51]..[359,12189+53])
                          Pexp_ident "id" (bytecomp/emitcode.ml[359,12189+51]..[359,12189+53])
                    ]
                  expression (bytecomp/emitcode.ml[359,12189+55]..[359,12189+72])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[359,12189+55]..[359,12189+64])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[359,12189+55]..[359,12189+62])
                        Pexp_ident "out_int" (bytecomp/emitcode.ml[359,12189+55]..[359,12189+62])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[359,12189+63]..[359,12189+64])
                            Pexp_ident "n" (bytecomp/emitcode.ml[359,12189+63]..[359,12189+64])
                      ]
                    expression (bytecomp/emitcode.ml[359,12189+66]..[359,12189+72])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[359,12189+66]..[359,12189+70])
                        Pexp_ident "emit" (bytecomp/emitcode.ml[359,12189+66]..[359,12189+70])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[359,12189+71]..[359,12189+72])
                            Pexp_ident "c" (bytecomp/emitcode.ml[359,12189+71]..[359,12189+72])
                      ]
            <case>
              pattern (bytecomp/emitcode.ml[360,12262+4]..[360,12262+31])
                Ppat_construct "::" (bytecomp/emitcode.ml[360,12262+10]..[360,12262+12])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[360,12262+4]..[360,12262+31]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[360,12262+4]..[360,12262+9])
                        Ppat_construct "Kpush" (bytecomp/emitcode.ml[360,12262+4]..[360,12262+9])
                        None
                      pattern (bytecomp/emitcode.ml[360,12262+13]..[360,12262+31])
                        Ppat_construct "::" (bytecomp/emitcode.ml[360,12262+27]..[360,12262+29])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[360,12262+13]..[360,12262+31]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[360,12262+13]..[360,12262+26])
                                Ppat_construct "Kgetglobal" (bytecomp/emitcode.ml[360,12262+13]..[360,12262+23])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[360,12262+24]..[360,12262+26])
                                    Ppat_var "id" (bytecomp/emitcode.ml[360,12262+24]..[360,12262+26])
                              pattern (bytecomp/emitcode.ml[360,12262+30]..[360,12262+31])
                                Ppat_var "c" (bytecomp/emitcode.ml[360,12262+30]..[360,12262+31])
                            ]
                    ]
              expression (bytecomp/emitcode.ml[361,12297+6]..[361,12297+56])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[361,12297+6]..[361,12297+25])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[361,12297+6]..[361,12297+9])
                    Pexp_ident "out" (bytecomp/emitcode.ml[361,12297+6]..[361,12297+9])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[361,12297+10]..[361,12297+25])
                        Pexp_ident "opPUSHGETGLOBAL" (bytecomp/emitcode.ml[361,12297+10]..[361,12297+25])
                  ]
                expression (bytecomp/emitcode.ml[361,12297+27]..[361,12297+56])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[361,12297+27]..[361,12297+48])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[361,12297+27]..[361,12297+45])
                      Pexp_ident "slot_for_getglobal" (bytecomp/emitcode.ml[361,12297+27]..[361,12297+45])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[361,12297+46]..[361,12297+48])
                          Pexp_ident "id" (bytecomp/emitcode.ml[361,12297+46]..[361,12297+48])
                    ]
                  expression (bytecomp/emitcode.ml[361,12297+50]..[361,12297+56])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[361,12297+50]..[361,12297+54])
                      Pexp_ident "emit" (bytecomp/emitcode.ml[361,12297+50]..[361,12297+54])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[361,12297+55]..[361,12297+56])
                          Pexp_ident "c" (bytecomp/emitcode.ml[361,12297+55]..[361,12297+56])
                    ]
            <case>
              pattern (bytecomp/emitcode.ml[362,12354+4]..[362,12354+27])
                Ppat_construct "::" (bytecomp/emitcode.ml[362,12354+10]..[362,12354+12])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[362,12354+4]..[362,12354+27]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[362,12354+4]..[362,12354+9])
                        Ppat_construct "Kpush" (bytecomp/emitcode.ml[362,12354+4]..[362,12354+9])
                        None
                      pattern (bytecomp/emitcode.ml[362,12354+13]..[362,12354+27])
                        Ppat_construct "::" (bytecomp/emitcode.ml[362,12354+23]..[362,12354+25])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[362,12354+13]..[362,12354+27]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[362,12354+13]..[362,12354+22])
                                Ppat_construct "Kconst" (bytecomp/emitcode.ml[362,12354+13]..[362,12354+19])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[362,12354+20]..[362,12354+22])
                                    Ppat_var "sc" (bytecomp/emitcode.ml[362,12354+20]..[362,12354+22])
                              pattern (bytecomp/emitcode.ml[362,12354+26]..[362,12354+27])
                                Ppat_var "c" (bytecomp/emitcode.ml[362,12354+26]..[362,12354+27])
                            ]
                    ]
              expression (bytecomp/emitcode.ml[363,12385+6]..[375,12842+12])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[363,12385+6]..[374,12831+9])
                  Pexp_match
                  expression (bytecomp/emitcode.ml[363,12385+18]..[363,12385+20])
                    Pexp_ident "sc" (bytecomp/emitcode.ml[363,12385+18]..[363,12385+20])
                  [
                    <case>
                      pattern (bytecomp/emitcode.ml[364,12411+8]..[364,12411+31])
                        Ppat_construct "Const_base" (bytecomp/emitcode.ml[364,12411+8]..[364,12411+18])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[364,12411+18]..[364,12411+31])
                            Ppat_construct "Const_int" (bytecomp/emitcode.ml[364,12411+19]..[364,12411+28])
                            Some
                              []
                              pattern (bytecomp/emitcode.ml[364,12411+29]..[364,12411+30])
                                Ppat_var "i" (bytecomp/emitcode.ml[364,12411+29]..[364,12411+30])
                      <when>
                        expression (bytecomp/emitcode.ml[364,12411+37]..[364,12411+47])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[364,12411+37]..[364,12411+45])
                            Pexp_ident "is_immed" (bytecomp/emitcode.ml[364,12411+37]..[364,12411+45])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[364,12411+46]..[364,12411+47])
                                Pexp_ident "i" (bytecomp/emitcode.ml[364,12411+46]..[364,12411+47])
                          ]
                      expression (bytecomp/emitcode.ml[365,12462+10]..[367,12530+46])
                        Pexp_ifthenelse
                        expression (bytecomp/emitcode.ml[365,12462+13]..[365,12462+29])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[365,12462+20]..[365,12462+22])
                            Pexp_ident "&&" (bytecomp/emitcode.ml[365,12462+20]..[365,12462+22])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[365,12462+13]..[365,12462+19])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[365,12462+15]..[365,12462+17])
                                  Pexp_ident ">=" (bytecomp/emitcode.ml[365,12462+15]..[365,12462+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[365,12462+13]..[365,12462+14])
                                      Pexp_ident "i" (bytecomp/emitcode.ml[365,12462+13]..[365,12462+14])
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[365,12462+18]..[365,12462+19])
                                      Pexp_constant PConst_int (0,None)
                                ]
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[365,12462+23]..[365,12462+29])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[365,12462+25]..[365,12462+27])
                                  Pexp_ident "<=" (bytecomp/emitcode.ml[365,12462+25]..[365,12462+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[365,12462+23]..[365,12462+24])
                                      Pexp_ident "i" (bytecomp/emitcode.ml[365,12462+23]..[365,12462+24])
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[365,12462+28]..[365,12462+29])
                                      Pexp_constant PConst_int (3,None)
                                ]
                          ]
                        expression (bytecomp/emitcode.ml[366,12492+15]..[366,12492+37])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[366,12492+15]..[366,12492+18])
                            Pexp_ident "out" (bytecomp/emitcode.ml[366,12492+15]..[366,12492+18])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[366,12492+19]..[366,12492+37])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[366,12492+33]..[366,12492+34])
                                  Pexp_ident "+" (bytecomp/emitcode.ml[366,12492+33]..[366,12492+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[366,12492+20]..[366,12492+32])
                                      Pexp_ident "opPUSHCONST0" (bytecomp/emitcode.ml[366,12492+20]..[366,12492+32])
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[366,12492+35]..[366,12492+36])
                                      Pexp_ident "i" (bytecomp/emitcode.ml[366,12492+35]..[366,12492+36])
                                ]
                          ]
                        Some
                          expression (bytecomp/emitcode.ml[367,12530+15]..[367,12530+46])
                            Pexp_sequence
                            expression (bytecomp/emitcode.ml[367,12530+16]..[367,12530+34])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[367,12530+16]..[367,12530+19])
                                Pexp_ident "out" (bytecomp/emitcode.ml[367,12530+16]..[367,12530+19])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[367,12530+20]..[367,12530+34])
                                    Pexp_ident "opPUSHCONSTINT" (bytecomp/emitcode.ml[367,12530+20]..[367,12530+34])
                              ]
                            expression (bytecomp/emitcode.ml[367,12530+36]..[367,12530+45])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[367,12530+36]..[367,12530+43])
                                Pexp_ident "out_int" (bytecomp/emitcode.ml[367,12530+36]..[367,12530+43])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[367,12530+44]..[367,12530+45])
                                    Pexp_ident "i" (bytecomp/emitcode.ml[367,12530+44]..[367,12530+45])
                              ]
                    <case>
                      pattern (bytecomp/emitcode.ml[368,12577+8]..[368,12577+32])
                        Ppat_construct "Const_base" (bytecomp/emitcode.ml[368,12577+8]..[368,12577+18])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[368,12577+18]..[368,12577+32])
                            Ppat_construct "Const_char" (bytecomp/emitcode.ml[368,12577+19]..[368,12577+29])
                            Some
                              []
                              pattern (bytecomp/emitcode.ml[368,12577+30]..[368,12577+31])
                                Ppat_var "c" (bytecomp/emitcode.ml[368,12577+30]..[368,12577+31])
                      expression (bytecomp/emitcode.ml[369,12613+10]..[369,12613+50])
                        Pexp_sequence
                        expression (bytecomp/emitcode.ml[369,12613+10]..[369,12613+28])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[369,12613+10]..[369,12613+13])
                            Pexp_ident "out" (bytecomp/emitcode.ml[369,12613+10]..[369,12613+13])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[369,12613+14]..[369,12613+28])
                                Pexp_ident "opPUSHCONSTINT" (bytecomp/emitcode.ml[369,12613+14]..[369,12613+28])
                          ]
                        expression (bytecomp/emitcode.ml[369,12613+30]..[369,12613+50])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[369,12613+30]..[369,12613+37])
                            Pexp_ident "out_int" (bytecomp/emitcode.ml[369,12613+30]..[369,12613+37])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[369,12613+37]..[369,12613+50])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[369,12613+38]..[369,12613+47])
                                  Pexp_ident "Char.code" (bytecomp/emitcode.ml[369,12613+38]..[369,12613+47])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[369,12613+48]..[369,12613+49])
                                      Pexp_ident "c" (bytecomp/emitcode.ml[369,12613+48]..[369,12613+49])
                                ]
                          ]
                    <case>
                      pattern (bytecomp/emitcode.ml[370,12664+8]..[370,12664+26])
                        Ppat_construct "Const_block" (bytecomp/emitcode.ml[370,12664+8]..[370,12664+19])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[370,12664+19]..[370,12664+26])
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[370,12664+20]..[370,12664+21])
                                Ppat_var "t" (bytecomp/emitcode.ml[370,12664+20]..[370,12664+21])
                              pattern (bytecomp/emitcode.ml[370,12664+23]..[370,12664+25])
                                Ppat_construct "[]" (bytecomp/emitcode.ml[370,12664+23]..[370,12664+25])
                                None
                            ]
                      expression (bytecomp/emitcode.ml[371,12694+10]..[371,12694+72])
                        Pexp_ifthenelse
                        expression (bytecomp/emitcode.ml[371,12694+13]..[371,12694+18])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[371,12694+15]..[371,12694+16])
                            Pexp_ident "=" (bytecomp/emitcode.ml[371,12694+15]..[371,12694+16])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[371,12694+13]..[371,12694+14])
                                Pexp_ident "t" (bytecomp/emitcode.ml[371,12694+13]..[371,12694+14])
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[371,12694+17]..[371,12694+18])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (bytecomp/emitcode.ml[371,12694+24]..[371,12694+39])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[371,12694+24]..[371,12694+27])
                            Pexp_ident "out" (bytecomp/emitcode.ml[371,12694+24]..[371,12694+27])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[371,12694+28]..[371,12694+39])
                                Pexp_ident "opPUSHATOM0" (bytecomp/emitcode.ml[371,12694+28]..[371,12694+39])
                          ]
                        Some
                          expression (bytecomp/emitcode.ml[371,12694+45]..[371,12694+72])
                            Pexp_sequence
                            expression (bytecomp/emitcode.ml[371,12694+46]..[371,12694+60])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[371,12694+46]..[371,12694+49])
                                Pexp_ident "out" (bytecomp/emitcode.ml[371,12694+46]..[371,12694+49])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[371,12694+50]..[371,12694+60])
                                    Pexp_ident "opPUSHATOM" (bytecomp/emitcode.ml[371,12694+50]..[371,12694+60])
                              ]
                            expression (bytecomp/emitcode.ml[371,12694+62]..[371,12694+71])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[371,12694+62]..[371,12694+69])
                                Pexp_ident "out_int" (bytecomp/emitcode.ml[371,12694+62]..[371,12694+69])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[371,12694+70]..[371,12694+71])
                                    Pexp_ident "t" (bytecomp/emitcode.ml[371,12694+70]..[371,12694+71])
                              ]
                    <case>
                      pattern (bytecomp/emitcode.ml[372,12767+8]..[372,12767+9])
                        Ppat_any
                      expression (bytecomp/emitcode.ml[373,12780+10]..[373,12780+50])
                        Pexp_sequence
                        expression (bytecomp/emitcode.ml[373,12780+10]..[373,12780+29])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[373,12780+10]..[373,12780+13])
                            Pexp_ident "out" (bytecomp/emitcode.ml[373,12780+10]..[373,12780+13])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[373,12780+14]..[373,12780+29])
                                Pexp_ident "opPUSHGETGLOBAL" (bytecomp/emitcode.ml[373,12780+14]..[373,12780+29])
                          ]
                        expression (bytecomp/emitcode.ml[373,12780+31]..[373,12780+50])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[373,12780+31]..[373,12780+47])
                            Pexp_ident "slot_for_literal" (bytecomp/emitcode.ml[373,12780+31]..[373,12780+47])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[373,12780+48]..[373,12780+50])
                                Pexp_ident "sc" (bytecomp/emitcode.ml[373,12780+48]..[373,12780+50])
                          ]
                  ]
                expression (bytecomp/emitcode.ml[375,12842+6]..[375,12842+12])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[375,12842+6]..[375,12842+10])
                    Pexp_ident "emit" (bytecomp/emitcode.ml[375,12842+6]..[375,12842+10])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[375,12842+11]..[375,12842+12])
                        Pexp_ident "c" (bytecomp/emitcode.ml[375,12842+11]..[375,12842+12])
                  ]
            <case>
              pattern (bytecomp/emitcode.ml[376,12855+4]..[377,12913+60])
                Ppat_construct "::" (bytecomp/emitcode.ml[376,12855+10]..[376,12855+12])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[376,12855+4]..[377,12913+60]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[376,12855+4]..[376,12855+9])
                        Ppat_construct "Kpush" (bytecomp/emitcode.ml[376,12855+4]..[376,12855+9])
                        None
                      pattern (bytecomp/emitcode.ml[376,12855+13]..[377,12913+60])
                        Ppat_construct "::" (bytecomp/emitcode.ml[376,12855+55]..[376,12855+57])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[376,12855+13]..[377,12913+60]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[376,12855+13]..[376,12855+54])
                                Ppat_construct "Kevent" (bytecomp/emitcode.ml[376,12855+14]..[376,12855+20])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[376,12855+21]..[376,12855+53])
                                    Ppat_alias "ev" (bytecomp/emitcode.ml[376,12855+50]..[376,12855+52])
                                    pattern (bytecomp/emitcode.ml[376,12855+22]..[376,12855+46])
                                      Ppat_record Closed
                                      [
                                        "ev_kind" (bytecomp/emitcode.ml[376,12855+23]..[376,12855+30])
                                          pattern (bytecomp/emitcode.ml[376,12855+33]..[376,12855+45])
                                            Ppat_construct "Event_before" (bytecomp/emitcode.ml[376,12855+33]..[376,12855+45])
                                            None
                                      ]
                              pattern (bytecomp/emitcode.ml[377,12913+4]..[377,12913+60])
                                Ppat_construct "::" (bytecomp/emitcode.ml[377,12913+29]..[377,12913+31])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[377,12913+4]..[377,12913+60]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (bytecomp/emitcode.ml[377,12913+4]..[377,12913+28])
                                        Ppat_alias "instr1" (bytecomp/emitcode.ml[377,12913+21]..[377,12913+27])
                                        pattern (bytecomp/emitcode.ml[377,12913+5]..[377,12913+17])
                                          Ppat_construct "Kgetglobal" (bytecomp/emitcode.ml[377,12913+5]..[377,12913+15])
                                          Some
                                            []
                                            pattern (bytecomp/emitcode.ml[377,12913+16]..[377,12913+17])
                                              Ppat_any
                                      pattern (bytecomp/emitcode.ml[377,12913+32]..[377,12913+60])
                                        Ppat_construct "::" (bytecomp/emitcode.ml[377,12913+56]..[377,12913+58])
                                        Some
                                          []
                                          pattern (bytecomp/emitcode.ml[377,12913+32]..[377,12913+60]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (bytecomp/emitcode.ml[377,12913+32]..[377,12913+55])
                                                Ppat_alias "instr2" (bytecomp/emitcode.ml[377,12913+48]..[377,12913+54])
                                                pattern (bytecomp/emitcode.ml[377,12913+33]..[377,12913+44])
                                                  Ppat_construct "Kgetfield" (bytecomp/emitcode.ml[377,12913+33]..[377,12913+42])
                                                  Some
                                                    []
                                                    pattern (bytecomp/emitcode.ml[377,12913+43]..[377,12913+44])
                                                      Ppat_any
                                              pattern (bytecomp/emitcode.ml[377,12913+59]..[377,12913+60])
                                                Ppat_var "c" (bytecomp/emitcode.ml[377,12913+59]..[377,12913+60])
                                            ]
                                    ]
                            ]
                    ]
              expression (bytecomp/emitcode.ml[378,12977+6]..[378,12977+61])
                Pexp_apply
                expression (bytecomp/emitcode.ml[378,12977+6]..[378,12977+10])
                  Pexp_ident "emit" (bytecomp/emitcode.ml[378,12977+6]..[378,12977+10])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[378,12977+11]..[378,12977+61])
                      Pexp_construct "::" (bytecomp/emitcode.ml[378,12977+18]..[378,12977+20])
                      Some
                        expression (bytecomp/emitcode.ml[378,12977+12]..[378,12977+60]) ghost
                          Pexp_tuple
                          [
                            expression (bytecomp/emitcode.ml[378,12977+12]..[378,12977+17])
                              Pexp_construct "Kpush" (bytecomp/emitcode.ml[378,12977+12]..[378,12977+17])
                              None
                            expression (bytecomp/emitcode.ml[378,12977+21]..[378,12977+60])
                              Pexp_construct "::" (bytecomp/emitcode.ml[378,12977+28]..[378,12977+30])
                              Some
                                expression (bytecomp/emitcode.ml[378,12977+21]..[378,12977+60]) ghost
                                  Pexp_tuple
                                  [
                                    expression (bytecomp/emitcode.ml[378,12977+21]..[378,12977+27])
                                      Pexp_ident "instr1" (bytecomp/emitcode.ml[378,12977+21]..[378,12977+27])
                                    expression (bytecomp/emitcode.ml[378,12977+31]..[378,12977+60])
                                      Pexp_construct "::" (bytecomp/emitcode.ml[378,12977+38]..[378,12977+40])
                                      Some
                                        expression (bytecomp/emitcode.ml[378,12977+31]..[378,12977+60]) ghost
                                          Pexp_tuple
                                          [
                                            expression (bytecomp/emitcode.ml[378,12977+31]..[378,12977+37])
                                              Pexp_ident "instr2" (bytecomp/emitcode.ml[378,12977+31]..[378,12977+37])
                                            expression (bytecomp/emitcode.ml[378,12977+41]..[378,12977+60])
                                              Pexp_apply
                                              expression (bytecomp/emitcode.ml[378,12977+41]..[378,12977+55])
                                                Pexp_ident "remerge_events" (bytecomp/emitcode.ml[378,12977+41]..[378,12977+55])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (bytecomp/emitcode.ml[378,12977+56]..[378,12977+58])
                                                    Pexp_ident "ev" (bytecomp/emitcode.ml[378,12977+56]..[378,12977+58])
                                                <arg>
                                                Nolabel
                                                  expression (bytecomp/emitcode.ml[378,12977+59]..[378,12977+60])
                                                    Pexp_ident "c" (bytecomp/emitcode.ml[378,12977+59]..[378,12977+60])
                                              ]
                                          ]
                                  ]
                          ]
                ]
            <case>
              pattern (bytecomp/emitcode.ml[379,13039+4]..[381,13178+5])
                Ppat_construct "::" (bytecomp/emitcode.ml[379,13039+10]..[379,13039+12])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[379,13039+4]..[381,13178+5]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[379,13039+4]..[379,13039+9])
                        Ppat_construct "Kpush" (bytecomp/emitcode.ml[379,13039+4]..[379,13039+9])
                        None
                      pattern (bytecomp/emitcode.ml[379,13039+13]..[381,13178+5])
                        Ppat_construct "::" (bytecomp/emitcode.ml[379,13039+55]..[379,13039+57])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[379,13039+13]..[381,13178+5]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[379,13039+13]..[379,13039+54])
                                Ppat_construct "Kevent" (bytecomp/emitcode.ml[379,13039+14]..[379,13039+20])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[379,13039+21]..[379,13039+53])
                                    Ppat_alias "ev" (bytecomp/emitcode.ml[379,13039+50]..[379,13039+52])
                                    pattern (bytecomp/emitcode.ml[379,13039+22]..[379,13039+46])
                                      Ppat_record Closed
                                      [
                                        "ev_kind" (bytecomp/emitcode.ml[379,13039+23]..[379,13039+30])
                                          pattern (bytecomp/emitcode.ml[379,13039+33]..[379,13039+45])
                                            Ppat_construct "Event_before" (bytecomp/emitcode.ml[379,13039+33]..[379,13039+45])
                                            None
                                      ]
                              pattern (bytecomp/emitcode.ml[380,13097+4]..[381,13178+5])
                                Ppat_construct "::" (bytecomp/emitcode.ml[380,13097+78]..[380,13097+80])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[380,13097+4]..[381,13178+5]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (bytecomp/emitcode.ml[380,13097+4]..[380,13097+78])
                                        Ppat_alias "instr" (bytecomp/emitcode.ml[380,13097+72]..[380,13097+77])
                                        pattern (bytecomp/emitcode.ml[380,13097+5]..[380,13097+68])
                                          Ppat_or
                                          pattern (bytecomp/emitcode.ml[380,13097+5]..[380,13097+57])
                                            Ppat_or
                                            pattern (bytecomp/emitcode.ml[380,13097+5]..[380,13097+42])
                                              Ppat_or
                                              pattern (bytecomp/emitcode.ml[380,13097+5]..[380,13097+23])
                                                Ppat_or
                                                pattern (bytecomp/emitcode.ml[380,13097+5]..[380,13097+11])
                                                  Ppat_construct "Kacc" (bytecomp/emitcode.ml[380,13097+5]..[380,13097+9])
                                                  Some
                                                    []
                                                    pattern (bytecomp/emitcode.ml[380,13097+10]..[380,13097+11])
                                                      Ppat_any
                                                pattern (bytecomp/emitcode.ml[380,13097+14]..[380,13097+23])
                                                  Ppat_construct "Kenvacc" (bytecomp/emitcode.ml[380,13097+14]..[380,13097+21])
                                                  Some
                                                    []
                                                    pattern (bytecomp/emitcode.ml[380,13097+22]..[380,13097+23])
                                                      Ppat_any
                                              pattern (bytecomp/emitcode.ml[380,13097+26]..[380,13097+42])
                                                Ppat_construct "Koffsetclosure" (bytecomp/emitcode.ml[380,13097+26]..[380,13097+40])
                                                Some
                                                  []
                                                  pattern (bytecomp/emitcode.ml[380,13097+41]..[380,13097+42])
                                                    Ppat_any
                                            pattern (bytecomp/emitcode.ml[380,13097+45]..[380,13097+57])
                                              Ppat_construct "Kgetglobal" (bytecomp/emitcode.ml[380,13097+45]..[380,13097+55])
                                              Some
                                                []
                                                pattern (bytecomp/emitcode.ml[380,13097+56]..[380,13097+57])
                                                  Ppat_any
                                          pattern (bytecomp/emitcode.ml[380,13097+60]..[380,13097+68])
                                            Ppat_construct "Kconst" (bytecomp/emitcode.ml[380,13097+60]..[380,13097+66])
                                            Some
                                              []
                                              pattern (bytecomp/emitcode.ml[380,13097+67]..[380,13097+68])
                                                Ppat_any
                                      pattern (bytecomp/emitcode.ml[381,13178+4]..[381,13178+5])
                                        Ppat_var "c" (bytecomp/emitcode.ml[381,13178+4]..[381,13178+5])
                                    ]
                            ]
                    ]
              expression (bytecomp/emitcode.ml[382,13187+6]..[382,13187+50])
                Pexp_apply
                expression (bytecomp/emitcode.ml[382,13187+6]..[382,13187+10])
                  Pexp_ident "emit" (bytecomp/emitcode.ml[382,13187+6]..[382,13187+10])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[382,13187+11]..[382,13187+50])
                      Pexp_construct "::" (bytecomp/emitcode.ml[382,13187+18]..[382,13187+20])
                      Some
                        expression (bytecomp/emitcode.ml[382,13187+12]..[382,13187+49]) ghost
                          Pexp_tuple
                          [
                            expression (bytecomp/emitcode.ml[382,13187+12]..[382,13187+17])
                              Pexp_construct "Kpush" (bytecomp/emitcode.ml[382,13187+12]..[382,13187+17])
                              None
                            expression (bytecomp/emitcode.ml[382,13187+21]..[382,13187+49])
                              Pexp_construct "::" (bytecomp/emitcode.ml[382,13187+27]..[382,13187+29])
                              Some
                                expression (bytecomp/emitcode.ml[382,13187+21]..[382,13187+49]) ghost
                                  Pexp_tuple
                                  [
                                    expression (bytecomp/emitcode.ml[382,13187+21]..[382,13187+26])
                                      Pexp_ident "instr" (bytecomp/emitcode.ml[382,13187+21]..[382,13187+26])
                                    expression (bytecomp/emitcode.ml[382,13187+30]..[382,13187+49])
                                      Pexp_apply
                                      expression (bytecomp/emitcode.ml[382,13187+30]..[382,13187+44])
                                        Pexp_ident "remerge_events" (bytecomp/emitcode.ml[382,13187+30]..[382,13187+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (bytecomp/emitcode.ml[382,13187+45]..[382,13187+47])
                                            Pexp_ident "ev" (bytecomp/emitcode.ml[382,13187+45]..[382,13187+47])
                                        <arg>
                                        Nolabel
                                          expression (bytecomp/emitcode.ml[382,13187+48]..[382,13187+49])
                                            Pexp_ident "c" (bytecomp/emitcode.ml[382,13187+48]..[382,13187+49])
                                      ]
                                  ]
                          ]
                ]
            <case>
              pattern (bytecomp/emitcode.ml[383,13238+4]..[383,13238+37])
                Ppat_construct "::" (bytecomp/emitcode.ml[383,13238+18]..[383,13238+20])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[383,13238+4]..[383,13238+37]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[383,13238+4]..[383,13238+17])
                        Ppat_construct "Kgetglobal" (bytecomp/emitcode.ml[383,13238+4]..[383,13238+14])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[383,13238+15]..[383,13238+17])
                            Ppat_var "id" (bytecomp/emitcode.ml[383,13238+15]..[383,13238+17])
                      pattern (bytecomp/emitcode.ml[383,13238+21]..[383,13238+37])
                        Ppat_construct "::" (bytecomp/emitcode.ml[383,13238+33]..[383,13238+35])
                        Some
                          []
                          pattern (bytecomp/emitcode.ml[383,13238+21]..[383,13238+37]) ghost
                            Ppat_tuple
                            [
                              pattern (bytecomp/emitcode.ml[383,13238+21]..[383,13238+32])
                                Ppat_construct "Kgetfield" (bytecomp/emitcode.ml[383,13238+21]..[383,13238+30])
                                Some
                                  []
                                  pattern (bytecomp/emitcode.ml[383,13238+31]..[383,13238+32])
                                    Ppat_var "n" (bytecomp/emitcode.ml[383,13238+31]..[383,13238+32])
                              pattern (bytecomp/emitcode.ml[383,13238+36]..[383,13238+37])
                                Ppat_var "c" (bytecomp/emitcode.ml[383,13238+36]..[383,13238+37])
                            ]
                    ]
              expression (bytecomp/emitcode.ml[384,13279+6]..[384,13279+68])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[384,13279+6]..[384,13279+26])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[384,13279+6]..[384,13279+9])
                    Pexp_ident "out" (bytecomp/emitcode.ml[384,13279+6]..[384,13279+9])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[384,13279+10]..[384,13279+26])
                        Pexp_ident "opGETGLOBALFIELD" (bytecomp/emitcode.ml[384,13279+10]..[384,13279+26])
                  ]
                expression (bytecomp/emitcode.ml[384,13279+28]..[384,13279+68])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[384,13279+28]..[384,13279+49])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[384,13279+28]..[384,13279+46])
                      Pexp_ident "slot_for_getglobal" (bytecomp/emitcode.ml[384,13279+28]..[384,13279+46])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[384,13279+47]..[384,13279+49])
                          Pexp_ident "id" (bytecomp/emitcode.ml[384,13279+47]..[384,13279+49])
                    ]
                  expression (bytecomp/emitcode.ml[384,13279+51]..[384,13279+68])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[384,13279+51]..[384,13279+60])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[384,13279+51]..[384,13279+58])
                        Pexp_ident "out_int" (bytecomp/emitcode.ml[384,13279+51]..[384,13279+58])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[384,13279+59]..[384,13279+60])
                            Pexp_ident "n" (bytecomp/emitcode.ml[384,13279+59]..[384,13279+60])
                      ]
                    expression (bytecomp/emitcode.ml[384,13279+62]..[384,13279+68])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[384,13279+62]..[384,13279+66])
                        Pexp_ident "emit" (bytecomp/emitcode.ml[384,13279+62]..[384,13279+66])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[384,13279+67]..[384,13279+68])
                            Pexp_ident "c" (bytecomp/emitcode.ml[384,13279+67]..[384,13279+68])
                      ]
            <case>
              pattern (bytecomp/emitcode.ml[386,13369+4]..[386,13369+14])
                Ppat_construct "::" (bytecomp/emitcode.ml[386,13369+10]..[386,13369+12])
                Some
                  []
                  pattern (bytecomp/emitcode.ml[386,13369+4]..[386,13369+14]) ghost
                    Ppat_tuple
                    [
                      pattern (bytecomp/emitcode.ml[386,13369+4]..[386,13369+9])
                        Ppat_var "instr" (bytecomp/emitcode.ml[386,13369+4]..[386,13369+9])
                      pattern (bytecomp/emitcode.ml[386,13369+13]..[386,13369+14])
                        Ppat_var "c" (bytecomp/emitcode.ml[386,13369+13]..[386,13369+14])
                    ]
              expression (bytecomp/emitcode.ml[387,13387+6]..[387,13387+30])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[387,13387+6]..[387,13387+22])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[387,13387+6]..[387,13387+16])
                    Pexp_ident "emit_instr" (bytecomp/emitcode.ml[387,13387+6]..[387,13387+16])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[387,13387+17]..[387,13387+22])
                        Pexp_ident "instr" (bytecomp/emitcode.ml[387,13387+17]..[387,13387+22])
                  ]
                expression (bytecomp/emitcode.ml[387,13387+24]..[387,13387+30])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[387,13387+24]..[387,13387+28])
                    Pexp_ident "emit" (bytecomp/emitcode.ml[387,13387+24]..[387,13387+28])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[387,13387+29]..[387,13387+30])
                        Pexp_ident "c" (bytecomp/emitcode.ml[387,13387+29]..[387,13387+30])
                  ]
          ]
    ]
  structure_item (bytecomp/emitcode.ml[391,13445+0]..[430,14981+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[391,13445+4]..[391,13445+11])
          Ppat_var "to_file" (bytecomp/emitcode.ml[391,13445+4]..[391,13445+11])
        expression (bytecomp/emitcode.ml[391,13445+12]..[430,14981+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[391,13445+12]..[391,13445+19])
            Ppat_var "outchan" (bytecomp/emitcode.ml[391,13445+12]..[391,13445+19])
          expression (bytecomp/emitcode.ml[391,13445+20]..[430,14981+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (bytecomp/emitcode.ml[391,13445+20]..[391,13445+29])
              Ppat_var "unit_name" (bytecomp/emitcode.ml[391,13445+20]..[391,13445+29])
            expression (bytecomp/emitcode.ml[391,13445+30]..[430,14981+40]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (bytecomp/emitcode.ml[391,13445+30]..[391,13445+37])
                Ppat_var "objfile" (bytecomp/emitcode.ml[391,13445+30]..[391,13445+37])
              expression (bytecomp/emitcode.ml[391,13445+38]..[430,14981+40]) ghost
                Pexp_fun
                Labelled "required_globals"
                None
                pattern (bytecomp/emitcode.ml[391,13445+39]..[391,13445+55])
                  Ppat_var "required_globals" (bytecomp/emitcode.ml[391,13445+39]..[391,13445+55])
                expression (bytecomp/emitcode.ml[391,13445+56]..[430,14981+40]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (bytecomp/emitcode.ml[391,13445+56]..[391,13445+60])
                    Ppat_var "code" (bytecomp/emitcode.ml[391,13445+56]..[391,13445+60])
                  expression (bytecomp/emitcode.ml[392,13508+2]..[430,14981+40])
                    Pexp_sequence
                    expression (bytecomp/emitcode.ml[392,13508+2]..[392,13508+8])
                      Pexp_apply
                      expression (bytecomp/emitcode.ml[392,13508+2]..[392,13508+6])
                        Pexp_ident "init" (bytecomp/emitcode.ml[392,13508+2]..[392,13508+6])
                      [
                        <arg>
                        Nolabel
                          expression (bytecomp/emitcode.ml[392,13508+6]..[392,13508+8])
                            Pexp_construct "()" (bytecomp/emitcode.ml[392,13508+6]..[392,13508+8])
                            None
                      ]
                    expression (bytecomp/emitcode.ml[393,13518+2]..[430,14981+40])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[393,13518+2]..[393,13518+40])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[393,13518+2]..[393,13518+15])
                          Pexp_ident "output_string" (bytecomp/emitcode.ml[393,13518+2]..[393,13518+15])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[393,13518+16]..[393,13518+23])
                              Pexp_ident "outchan" (bytecomp/emitcode.ml[393,13518+16]..[393,13518+23])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[393,13518+24]..[393,13518+40])
                              Pexp_ident "cmo_magic_number" (bytecomp/emitcode.ml[393,13518+24]..[393,13518+40])
                        ]
                      expression (bytecomp/emitcode.ml[394,13560+2]..[430,14981+40])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (bytecomp/emitcode.ml[394,13560+6]..[394,13560+14])
                              Ppat_var "pos_depl" (bytecomp/emitcode.ml[394,13560+6]..[394,13560+14])
                            expression (bytecomp/emitcode.ml[394,13560+17]..[394,13560+32])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[394,13560+17]..[394,13560+24])
                                Pexp_ident "pos_out" (bytecomp/emitcode.ml[394,13560+17]..[394,13560+24])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[394,13560+25]..[394,13560+32])
                                    Pexp_ident "outchan" (bytecomp/emitcode.ml[394,13560+25]..[394,13560+32])
                              ]
                        ]
                        expression (bytecomp/emitcode.ml[395,13596+2]..[430,14981+40])
                          Pexp_sequence
                          expression (bytecomp/emitcode.ml[395,13596+2]..[395,13596+29])
                            Pexp_apply
                            expression (bytecomp/emitcode.ml[395,13596+2]..[395,13596+19])
                              Pexp_ident "output_binary_int" (bytecomp/emitcode.ml[395,13596+2]..[395,13596+19])
                            [
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[395,13596+20]..[395,13596+27])
                                  Pexp_ident "outchan" (bytecomp/emitcode.ml[395,13596+20]..[395,13596+27])
                              <arg>
                              Nolabel
                                expression (bytecomp/emitcode.ml[395,13596+28]..[395,13596+29])
                                  Pexp_constant PConst_int (0,None)
                            ]
                          expression (bytecomp/emitcode.ml[396,13627+2]..[430,14981+40])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (bytecomp/emitcode.ml[396,13627+6]..[396,13627+14])
                                  Ppat_var "pos_code" (bytecomp/emitcode.ml[396,13627+6]..[396,13627+14])
                                expression (bytecomp/emitcode.ml[396,13627+17]..[396,13627+32])
                                  Pexp_apply
                                  expression (bytecomp/emitcode.ml[396,13627+17]..[396,13627+24])
                                    Pexp_ident "pos_out" (bytecomp/emitcode.ml[396,13627+17]..[396,13627+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[396,13627+25]..[396,13627+32])
                                        Pexp_ident "outchan" (bytecomp/emitcode.ml[396,13627+25]..[396,13627+32])
                                  ]
                            ]
                            expression (bytecomp/emitcode.ml[397,13663+2]..[430,14981+40])
                              Pexp_sequence
                              expression (bytecomp/emitcode.ml[397,13663+2]..[397,13663+11])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[397,13663+2]..[397,13663+6])
                                  Pexp_ident "emit" (bytecomp/emitcode.ml[397,13663+2]..[397,13663+6])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[397,13663+7]..[397,13663+11])
                                      Pexp_ident "code" (bytecomp/emitcode.ml[397,13663+7]..[397,13663+11])
                                ]
                              expression (bytecomp/emitcode.ml[398,13676+2]..[430,14981+40])
                                Pexp_sequence
                                expression (bytecomp/emitcode.ml[398,13676+2]..[398,13676+55])
                                  Pexp_apply
                                  expression (bytecomp/emitcode.ml[398,13676+2]..[398,13676+19])
                                    Pexp_ident "LongString.output" (bytecomp/emitcode.ml[398,13676+2]..[398,13676+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[398,13676+20]..[398,13676+27])
                                        Pexp_ident "outchan" (bytecomp/emitcode.ml[398,13676+20]..[398,13676+27])
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[398,13676+28]..[398,13676+39])
                                        Pexp_apply
                                        expression (bytecomp/emitcode.ml[398,13676+28]..[398,13676+29])
                                          Pexp_ident "!" (bytecomp/emitcode.ml[398,13676+28]..[398,13676+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (bytecomp/emitcode.ml[398,13676+29]..[398,13676+39])
                                              Pexp_ident "out_buffer" (bytecomp/emitcode.ml[398,13676+29]..[398,13676+39])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[398,13676+40]..[398,13676+41])
                                        Pexp_constant PConst_int (0,None)
                                    <arg>
                                    Nolabel
                                      expression (bytecomp/emitcode.ml[398,13676+42]..[398,13676+55])
                                        Pexp_apply
                                        expression (bytecomp/emitcode.ml[398,13676+42]..[398,13676+43])
                                          Pexp_ident "!" (bytecomp/emitcode.ml[398,13676+42]..[398,13676+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (bytecomp/emitcode.ml[398,13676+43]..[398,13676+55])
                                              Pexp_ident "out_position" (bytecomp/emitcode.ml[398,13676+43]..[398,13676+55])
                                        ]
                                  ]
                                expression (bytecomp/emitcode.ml[399,13733+2]..[430,14981+40])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (bytecomp/emitcode.ml[399,13733+6]..[399,13733+29])
                                        Ppat_tuple
                                        [
                                          pattern (bytecomp/emitcode.ml[399,13733+7]..[399,13733+16])
                                            Ppat_var "pos_debug" (bytecomp/emitcode.ml[399,13733+7]..[399,13733+16])
                                          pattern (bytecomp/emitcode.ml[399,13733+18]..[399,13733+28])
                                            Ppat_var "size_debug" (bytecomp/emitcode.ml[399,13733+18]..[399,13733+28])
                                        ]
                                      expression (bytecomp/emitcode.ml[400,13765+4]..[409,14089+12])
                                        Pexp_ifthenelse
                                        expression (bytecomp/emitcode.ml[400,13765+7]..[400,13765+21])
                                          Pexp_apply
                                          expression (bytecomp/emitcode.ml[400,13765+7]..[400,13765+8])
                                            Pexp_ident "!" (bytecomp/emitcode.ml[400,13765+7]..[400,13765+8])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (bytecomp/emitcode.ml[400,13765+8]..[400,13765+21])
                                                Pexp_ident "Clflags.debug" (bytecomp/emitcode.ml[400,13765+8]..[400,13765+21])
                                          ]
                                        expression (bytecomp/emitcode.ml[400,13765+27]..[408,14076+7])
                                          Pexp_sequence
                                          expression (bytecomp/emitcode.ml[401,13798+6]..[403,13893+19])
                                            Pexp_apply
                                            expression (bytecomp/emitcode.ml[401,13798+17]..[401,13798+19])
                                              Pexp_ident ":=" (bytecomp/emitcode.ml[401,13798+17]..[401,13798+19])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (bytecomp/emitcode.ml[401,13798+6]..[401,13798+16])
                                                  Pexp_ident "debug_dirs" (bytecomp/emitcode.ml[401,13798+6]..[401,13798+16])
                                              <arg>
                                              Nolabel
                                                expression (bytecomp/emitcode.ml[401,13798+20]..[403,13893+19])
                                                  Pexp_apply
                                                  expression (bytecomp/emitcode.ml[401,13798+20]..[401,13798+34])
                                                    Pexp_ident "String.Set.add" (bytecomp/emitcode.ml[401,13798+20]..[401,13798+34])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (bytecomp/emitcode.ml[402,13833+8]..[402,13833+59])
                                                        Pexp_apply
                                                        expression (bytecomp/emitcode.ml[402,13833+9]..[402,13833+25])
                                                          Pexp_ident "Filename.dirname" (bytecomp/emitcode.ml[402,13833+9]..[402,13833+25])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (bytecomp/emitcode.ml[402,13833+26]..[402,13833+58])
                                                              Pexp_apply
                                                              expression (bytecomp/emitcode.ml[402,13833+27]..[402,13833+49])
                                                                Pexp_ident "Location.absolute_path" (bytecomp/emitcode.ml[402,13833+27]..[402,13833+49])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (bytecomp/emitcode.ml[402,13833+50]..[402,13833+57])
                                                                    Pexp_ident "objfile" (bytecomp/emitcode.ml[402,13833+50]..[402,13833+57])
                                                              ]
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (bytecomp/emitcode.ml[403,13893+8]..[403,13893+19])
                                                        Pexp_apply
                                                        expression (bytecomp/emitcode.ml[403,13893+8]..[403,13893+9])
                                                          Pexp_ident "!" (bytecomp/emitcode.ml[403,13893+8]..[403,13893+9])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (bytecomp/emitcode.ml[403,13893+9]..[403,13893+19])
                                                              Pexp_ident "debug_dirs" (bytecomp/emitcode.ml[403,13893+9]..[403,13893+19])
                                                        ]
                                                  ]
                                            ]
                                          expression (bytecomp/emitcode.ml[404,13914+6]..[407,14045+30])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (bytecomp/emitcode.ml[404,13914+10]..[404,13914+11])
                                                  Ppat_var "p" (bytecomp/emitcode.ml[404,13914+10]..[404,13914+11])
                                                expression (bytecomp/emitcode.ml[404,13914+14]..[404,13914+29])
                                                  Pexp_apply
                                                  expression (bytecomp/emitcode.ml[404,13914+14]..[404,13914+21])
                                                    Pexp_ident "pos_out" (bytecomp/emitcode.ml[404,13914+14]..[404,13914+21])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (bytecomp/emitcode.ml[404,13914+22]..[404,13914+29])
                                                        Pexp_ident "outchan" (bytecomp/emitcode.ml[404,13914+22]..[404,13914+29])
                                                  ]
                                            ]
                                            expression (bytecomp/emitcode.ml[405,13947+6]..[407,14045+30])
                                              Pexp_sequence
                                              expression (bytecomp/emitcode.ml[405,13947+6]..[405,13947+34])
                                                Pexp_apply
                                                expression (bytecomp/emitcode.ml[405,13947+6]..[405,13947+18])
                                                  Pexp_ident "output_value" (bytecomp/emitcode.ml[405,13947+6]..[405,13947+18])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[405,13947+19]..[405,13947+26])
                                                      Pexp_ident "outchan" (bytecomp/emitcode.ml[405,13947+19]..[405,13947+26])
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[405,13947+27]..[405,13947+34])
                                                      Pexp_apply
                                                      expression (bytecomp/emitcode.ml[405,13947+27]..[405,13947+28])
                                                        Pexp_ident "!" (bytecomp/emitcode.ml[405,13947+27]..[405,13947+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (bytecomp/emitcode.ml[405,13947+28]..[405,13947+34])
                                                            Pexp_ident "events" (bytecomp/emitcode.ml[405,13947+28]..[405,13947+34])
                                                      ]
                                                ]
                                              expression (bytecomp/emitcode.ml[406,13983+6]..[407,14045+30])
                                                Pexp_sequence
                                                expression (bytecomp/emitcode.ml[406,13983+6]..[406,13983+60])
                                                  Pexp_apply
                                                  expression (bytecomp/emitcode.ml[406,13983+6]..[406,13983+18])
                                                    Pexp_ident "output_value" (bytecomp/emitcode.ml[406,13983+6]..[406,13983+18])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (bytecomp/emitcode.ml[406,13983+19]..[406,13983+26])
                                                        Pexp_ident "outchan" (bytecomp/emitcode.ml[406,13983+19]..[406,13983+26])
                                                    <arg>
                                                    Nolabel
                                                      expression (bytecomp/emitcode.ml[406,13983+27]..[406,13983+60])
                                                        Pexp_apply
                                                        expression (bytecomp/emitcode.ml[406,13983+28]..[406,13983+47])
                                                          Pexp_ident "String.Set.elements" (bytecomp/emitcode.ml[406,13983+28]..[406,13983+47])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (bytecomp/emitcode.ml[406,13983+48]..[406,13983+59])
                                                              Pexp_apply
                                                              expression (bytecomp/emitcode.ml[406,13983+48]..[406,13983+49])
                                                                Pexp_ident "!" (bytecomp/emitcode.ml[406,13983+48]..[406,13983+49])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (bytecomp/emitcode.ml[406,13983+49]..[406,13983+59])
                                                                    Pexp_ident "debug_dirs" (bytecomp/emitcode.ml[406,13983+49]..[406,13983+59])
                                                              ]
                                                        ]
                                                  ]
                                                expression (bytecomp/emitcode.ml[407,14045+6]..[407,14045+30])
                                                  Pexp_tuple
                                                  [
                                                    expression (bytecomp/emitcode.ml[407,14045+7]..[407,14045+8])
                                                      Pexp_ident "p" (bytecomp/emitcode.ml[407,14045+7]..[407,14045+8])
                                                    expression (bytecomp/emitcode.ml[407,14045+10]..[407,14045+29])
                                                      Pexp_apply
                                                      expression (bytecomp/emitcode.ml[407,14045+26]..[407,14045+27])
                                                        Pexp_ident "-" (bytecomp/emitcode.ml[407,14045+26]..[407,14045+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (bytecomp/emitcode.ml[407,14045+10]..[407,14045+25])
                                                            Pexp_apply
                                                            expression (bytecomp/emitcode.ml[407,14045+10]..[407,14045+17])
                                                              Pexp_ident "pos_out" (bytecomp/emitcode.ml[407,14045+10]..[407,14045+17])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (bytecomp/emitcode.ml[407,14045+18]..[407,14045+25])
                                                                  Pexp_ident "outchan" (bytecomp/emitcode.ml[407,14045+18]..[407,14045+25])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (bytecomp/emitcode.ml[407,14045+28]..[407,14045+29])
                                                            Pexp_ident "p" (bytecomp/emitcode.ml[407,14045+28]..[407,14045+29])
                                                      ]
                                                  ]
                                        Some
                                          expression (bytecomp/emitcode.ml[409,14089+6]..[409,14089+12])
                                            Pexp_tuple
                                            [
                                              expression (bytecomp/emitcode.ml[409,14089+7]..[409,14089+8])
                                                Pexp_constant PConst_int (0,None)
                                              expression (bytecomp/emitcode.ml[409,14089+10]..[409,14089+11])
                                                Pexp_constant PConst_int (0,None)
                                            ]
                                  ]
                                  expression (bytecomp/emitcode.ml[410,14105+2]..[430,14981+40])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (bytecomp/emitcode.ml[410,14105+6]..[410,14105+14])
                                          Ppat_var "compunit" (bytecomp/emitcode.ml[410,14105+6]..[410,14105+14])
                                        expression (bytecomp/emitcode.ml[411,14122+4]..[421,14540+33])
                                          Pexp_record
                                          [
                                            "cu_name" (bytecomp/emitcode.ml[411,14122+6]..[411,14122+13])
                                              expression (bytecomp/emitcode.ml[411,14122+16]..[411,14122+25])
                                                Pexp_ident "unit_name" (bytecomp/emitcode.ml[411,14122+16]..[411,14122+25])
                                            "cu_pos" (bytecomp/emitcode.ml[412,14149+6]..[412,14149+12])
                                              expression (bytecomp/emitcode.ml[412,14149+15]..[412,14149+23])
                                                Pexp_ident "pos_code" (bytecomp/emitcode.ml[412,14149+15]..[412,14149+23])
                                            "cu_codesize" (bytecomp/emitcode.ml[413,14174+6]..[413,14174+17])
                                              expression (bytecomp/emitcode.ml[413,14174+20]..[413,14174+33])
                                                Pexp_apply
                                                expression (bytecomp/emitcode.ml[413,14174+20]..[413,14174+21])
                                                  Pexp_ident "!" (bytecomp/emitcode.ml[413,14174+20]..[413,14174+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[413,14174+21]..[413,14174+33])
                                                      Pexp_ident "out_position" (bytecomp/emitcode.ml[413,14174+21]..[413,14174+33])
                                                ]
                                            "cu_reloc" (bytecomp/emitcode.ml[414,14209+6]..[414,14209+14])
                                              expression (bytecomp/emitcode.ml[414,14209+17]..[414,14209+37])
                                                Pexp_apply
                                                expression (bytecomp/emitcode.ml[414,14209+17]..[414,14209+25])
                                                  Pexp_ident "List.rev" (bytecomp/emitcode.ml[414,14209+17]..[414,14209+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[414,14209+26]..[414,14209+37])
                                                      Pexp_apply
                                                      expression (bytecomp/emitcode.ml[414,14209+26]..[414,14209+27])
                                                        Pexp_ident "!" (bytecomp/emitcode.ml[414,14209+26]..[414,14209+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (bytecomp/emitcode.ml[414,14209+27]..[414,14209+37])
                                                            Pexp_ident "reloc_info" (bytecomp/emitcode.ml[414,14209+27]..[414,14209+37])
                                                      ]
                                                ]
                                            "cu_imports" (bytecomp/emitcode.ml[415,14248+6]..[415,14248+16])
                                              expression (bytecomp/emitcode.ml[415,14248+19]..[415,14248+32])
                                                Pexp_apply
                                                expression (bytecomp/emitcode.ml[415,14248+19]..[415,14248+30])
                                                  Pexp_ident "Env.imports" (bytecomp/emitcode.ml[415,14248+19]..[415,14248+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[415,14248+30]..[415,14248+32])
                                                      Pexp_construct "()" (bytecomp/emitcode.ml[415,14248+30]..[415,14248+32])
                                                      None
                                                ]
                                            "cu_primitives" (bytecomp/emitcode.ml[416,14282+6]..[416,14282+19])
                                              expression (bytecomp/emitcode.ml[416,14282+22]..[417,14333+64])
                                                Pexp_apply
                                                expression (bytecomp/emitcode.ml[416,14282+22]..[416,14282+30])
                                                  Pexp_ident "List.map" (bytecomp/emitcode.ml[416,14282+22]..[416,14282+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[416,14282+31]..[416,14282+50])
                                                      Pexp_ident "Primitive.byte_name" (bytecomp/emitcode.ml[416,14282+31]..[416,14282+50])
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[417,14333+31]..[417,14333+64])
                                                      Pexp_apply
                                                      expression (bytecomp/emitcode.ml[417,14333+31]..[417,14333+32])
                                                        Pexp_ident "!" (bytecomp/emitcode.ml[417,14333+31]..[417,14333+32])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (bytecomp/emitcode.ml[417,14333+32]..[417,14333+64])
                                                            Pexp_ident "Translmod.primitive_declarations" (bytecomp/emitcode.ml[417,14333+32]..[417,14333+64])
                                                      ]
                                                ]
                                            "cu_required_globals" (bytecomp/emitcode.ml[418,14399+6]..[418,14399+25])
                                              expression (bytecomp/emitcode.ml[418,14399+28]..[418,14399+63])
                                                Pexp_apply
                                                expression (bytecomp/emitcode.ml[418,14399+28]..[418,14399+46])
                                                  Pexp_ident "Ident.Set.elements" (bytecomp/emitcode.ml[418,14399+28]..[418,14399+46])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[418,14399+47]..[418,14399+63])
                                                      Pexp_ident "required_globals" (bytecomp/emitcode.ml[418,14399+47]..[418,14399+63])
                                                ]
                                            "cu_force_link" (bytecomp/emitcode.ml[419,14464+6]..[419,14464+19])
                                              expression (bytecomp/emitcode.ml[419,14464+22]..[419,14464+46])
                                                Pexp_apply
                                                expression (bytecomp/emitcode.ml[419,14464+22]..[419,14464+23])
                                                  Pexp_ident "!" (bytecomp/emitcode.ml[419,14464+22]..[419,14464+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[419,14464+23]..[419,14464+46])
                                                      Pexp_ident "Clflags.link_everything" (bytecomp/emitcode.ml[419,14464+23]..[419,14464+46])
                                                ]
                                            "cu_debug" (bytecomp/emitcode.ml[420,14512+6]..[420,14512+14])
                                              expression (bytecomp/emitcode.ml[420,14512+17]..[420,14512+26])
                                                Pexp_ident "pos_debug" (bytecomp/emitcode.ml[420,14512+17]..[420,14512+26])
                                            "cu_debugsize" (bytecomp/emitcode.ml[421,14540+6]..[421,14540+18])
                                              expression (bytecomp/emitcode.ml[421,14540+21]..[421,14540+31])
                                                Pexp_ident "size_debug" (bytecomp/emitcode.ml[421,14540+21]..[421,14540+31])
                                          ]
                                          None
                                    ]
                                    expression (bytecomp/emitcode.ml[422,14577+2]..[430,14981+40])
                                      Pexp_sequence
                                      expression (bytecomp/emitcode.ml[422,14577+2]..[422,14577+8])
                                        Pexp_apply
                                        expression (bytecomp/emitcode.ml[422,14577+2]..[422,14577+6])
                                          Pexp_ident "init" (bytecomp/emitcode.ml[422,14577+2]..[422,14577+6])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (bytecomp/emitcode.ml[422,14577+6]..[422,14577+8])
                                              Pexp_construct "()" (bytecomp/emitcode.ml[422,14577+6]..[422,14577+8])
                                              None
                                        ]
                                      expression (bytecomp/emitcode.ml[423,14654+2]..[430,14981+40])
                                        Pexp_sequence
                                        expression (bytecomp/emitcode.ml[423,14654+2]..[423,14654+25])
                                          Pexp_apply
                                          expression (bytecomp/emitcode.ml[423,14654+2]..[423,14654+22])
                                            Pexp_ident "Btype.cleanup_abbrev" (bytecomp/emitcode.ml[423,14654+2]..[423,14654+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (bytecomp/emitcode.ml[423,14654+23]..[423,14654+25])
                                                Pexp_construct "()" (bytecomp/emitcode.ml[423,14654+23]..[423,14654+25])
                                                None
                                          ]
                                        expression (bytecomp/emitcode.ml[425,14798+2]..[430,14981+40])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (bytecomp/emitcode.ml[425,14798+6]..[425,14798+18])
                                                Ppat_var "pos_compunit" (bytecomp/emitcode.ml[425,14798+6]..[425,14798+18])
                                              expression (bytecomp/emitcode.ml[425,14798+21]..[425,14798+36])
                                                Pexp_apply
                                                expression (bytecomp/emitcode.ml[425,14798+21]..[425,14798+28])
                                                  Pexp_ident "pos_out" (bytecomp/emitcode.ml[425,14798+21]..[425,14798+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[425,14798+29]..[425,14798+36])
                                                      Pexp_ident "outchan" (bytecomp/emitcode.ml[425,14798+29]..[425,14798+36])
                                                ]
                                          ]
                                          expression (bytecomp/emitcode.ml[426,14838+2]..[430,14981+40])
                                            Pexp_sequence
                                            expression (bytecomp/emitcode.ml[426,14838+2]..[428,14930+20])
                                              Pexp_apply
                                              expression (bytecomp/emitcode.ml[426,14838+2]..[426,14838+47])
                                                Pexp_ident "marshal_to_channel_with_possibly_32bit_compat" (bytecomp/emitcode.ml[426,14838+2]..[426,14838+47])
                                              [
                                                <arg>
                                                Labelled "filename"
                                                  expression (bytecomp/emitcode.ml[427,14886+14]..[427,14886+21])
                                                    Pexp_ident "objfile" (bytecomp/emitcode.ml[427,14886+14]..[427,14886+21])
                                                <arg>
                                                Labelled "kind"
                                                  expression (bytecomp/emitcode.ml[427,14886+28]..[427,14886+43])
                                                    Pexp_constant PConst_string("bytecode unit",(bytecomp/emitcode.ml[427,14886+29]..[427,14886+42]),None)
                                                <arg>
                                                Nolabel
                                                  expression (bytecomp/emitcode.ml[428,14930+4]..[428,14930+11])
                                                    Pexp_ident "outchan" (bytecomp/emitcode.ml[428,14930+4]..[428,14930+11])
                                                <arg>
                                                Nolabel
                                                  expression (bytecomp/emitcode.ml[428,14930+12]..[428,14930+20])
                                                    Pexp_ident "compunit" (bytecomp/emitcode.ml[428,14930+12]..[428,14930+20])
                                              ]
                                            expression (bytecomp/emitcode.ml[429,14952+2]..[430,14981+40])
                                              Pexp_sequence
                                              expression (bytecomp/emitcode.ml[429,14952+2]..[429,14952+27])
                                                Pexp_apply
                                                expression (bytecomp/emitcode.ml[429,14952+2]..[429,14952+10])
                                                  Pexp_ident "seek_out" (bytecomp/emitcode.ml[429,14952+2]..[429,14952+10])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[429,14952+11]..[429,14952+18])
                                                      Pexp_ident "outchan" (bytecomp/emitcode.ml[429,14952+11]..[429,14952+18])
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[429,14952+19]..[429,14952+27])
                                                      Pexp_ident "pos_depl" (bytecomp/emitcode.ml[429,14952+19]..[429,14952+27])
                                                ]
                                              expression (bytecomp/emitcode.ml[430,14981+2]..[430,14981+40])
                                                Pexp_apply
                                                expression (bytecomp/emitcode.ml[430,14981+2]..[430,14981+19])
                                                  Pexp_ident "output_binary_int" (bytecomp/emitcode.ml[430,14981+2]..[430,14981+19])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[430,14981+20]..[430,14981+27])
                                                      Pexp_ident "outchan" (bytecomp/emitcode.ml[430,14981+20]..[430,14981+27])
                                                  <arg>
                                                  Nolabel
                                                    expression (bytecomp/emitcode.ml[430,14981+28]..[430,14981+40])
                                                      Pexp_ident "pos_compunit" (bytecomp/emitcode.ml[430,14981+28]..[430,14981+40])
                                                ]
    ]
  structure_item (bytecomp/emitcode.ml[434,15057+0]..[443,15313+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[434,15057+4]..[434,15057+13])
          Ppat_var "to_memory" (bytecomp/emitcode.ml[434,15057+4]..[434,15057+13])
        expression (bytecomp/emitcode.ml[434,15057+14]..[443,15313+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[434,15057+14]..[434,15057+23])
            Ppat_var "init_code" (bytecomp/emitcode.ml[434,15057+14]..[434,15057+23])
          expression (bytecomp/emitcode.ml[434,15057+24]..[443,15313+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (bytecomp/emitcode.ml[434,15057+24]..[434,15057+32])
              Ppat_var "fun_code" (bytecomp/emitcode.ml[434,15057+24]..[434,15057+32])
            expression (bytecomp/emitcode.ml[435,15092+2]..[443,15313+23])
              Pexp_sequence
              expression (bytecomp/emitcode.ml[435,15092+2]..[435,15092+8])
                Pexp_apply
                expression (bytecomp/emitcode.ml[435,15092+2]..[435,15092+6])
                  Pexp_ident "init" (bytecomp/emitcode.ml[435,15092+2]..[435,15092+6])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[435,15092+6]..[435,15092+8])
                      Pexp_construct "()" (bytecomp/emitcode.ml[435,15092+6]..[435,15092+8])
                      None
                ]
              expression (bytecomp/emitcode.ml[436,15102+2]..[443,15313+23])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[436,15102+2]..[436,15102+16])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[436,15102+2]..[436,15102+6])
                    Pexp_ident "emit" (bytecomp/emitcode.ml[436,15102+2]..[436,15102+6])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[436,15102+7]..[436,15102+16])
                        Pexp_ident "init_code" (bytecomp/emitcode.ml[436,15102+7]..[436,15102+16])
                  ]
                expression (bytecomp/emitcode.ml[437,15120+2]..[443,15313+23])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[437,15120+2]..[437,15120+15])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[437,15120+2]..[437,15120+6])
                      Pexp_ident "emit" (bytecomp/emitcode.ml[437,15120+2]..[437,15120+6])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[437,15120+7]..[437,15120+15])
                          Pexp_ident "fun_code" (bytecomp/emitcode.ml[437,15120+7]..[437,15120+15])
                    ]
                  expression (bytecomp/emitcode.ml[438,15137+2]..[443,15313+23])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (bytecomp/emitcode.ml[438,15137+6]..[438,15137+10])
                          Ppat_var "code" (bytecomp/emitcode.ml[438,15137+6]..[438,15137+10])
                        expression (bytecomp/emitcode.ml[438,15137+13]..[438,15137+44])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[438,15137+13]..[438,15137+30])
                            Pexp_ident "LongString.create" (bytecomp/emitcode.ml[438,15137+13]..[438,15137+30])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[438,15137+31]..[438,15137+44])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[438,15137+31]..[438,15137+32])
                                  Pexp_ident "!" (bytecomp/emitcode.ml[438,15137+31]..[438,15137+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[438,15137+32]..[438,15137+44])
                                      Pexp_ident "out_position" (bytecomp/emitcode.ml[438,15137+32]..[438,15137+44])
                                ]
                          ]
                    ]
                    expression (bytecomp/emitcode.ml[439,15185+2]..[443,15313+23])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[439,15185+2]..[439,15185+52])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[439,15185+2]..[439,15185+17])
                          Pexp_ident "LongString.blit" (bytecomp/emitcode.ml[439,15185+2]..[439,15185+17])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[439,15185+18]..[439,15185+29])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[439,15185+18]..[439,15185+19])
                                Pexp_ident "!" (bytecomp/emitcode.ml[439,15185+18]..[439,15185+19])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[439,15185+19]..[439,15185+29])
                                    Pexp_ident "out_buffer" (bytecomp/emitcode.ml[439,15185+19]..[439,15185+29])
                              ]
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[439,15185+30]..[439,15185+31])
                              Pexp_constant PConst_int (0,None)
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[439,15185+32]..[439,15185+36])
                              Pexp_ident "code" (bytecomp/emitcode.ml[439,15185+32]..[439,15185+36])
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[439,15185+37]..[439,15185+38])
                              Pexp_constant PConst_int (0,None)
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[439,15185+39]..[439,15185+52])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[439,15185+39]..[439,15185+40])
                                Pexp_ident "!" (bytecomp/emitcode.ml[439,15185+39]..[439,15185+40])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[439,15185+40]..[439,15185+52])
                                    Pexp_ident "out_position" (bytecomp/emitcode.ml[439,15185+40]..[439,15185+52])
                              ]
                        ]
                      expression (bytecomp/emitcode.ml[440,15239+2]..[443,15313+23])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (bytecomp/emitcode.ml[440,15239+6]..[440,15239+11])
                              Ppat_var "reloc" (bytecomp/emitcode.ml[440,15239+6]..[440,15239+11])
                            expression (bytecomp/emitcode.ml[440,15239+14]..[440,15239+34])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[440,15239+14]..[440,15239+22])
                                Pexp_ident "List.rev" (bytecomp/emitcode.ml[440,15239+14]..[440,15239+22])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[440,15239+23]..[440,15239+34])
                                    Pexp_apply
                                    expression (bytecomp/emitcode.ml[440,15239+23]..[440,15239+24])
                                      Pexp_ident "!" (bytecomp/emitcode.ml[440,15239+23]..[440,15239+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (bytecomp/emitcode.ml[440,15239+24]..[440,15239+34])
                                          Pexp_ident "reloc_info" (bytecomp/emitcode.ml[440,15239+24]..[440,15239+34])
                                    ]
                              ]
                        ]
                        expression (bytecomp/emitcode.ml[441,15277+2]..[443,15313+23])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (bytecomp/emitcode.ml[441,15277+6]..[441,15277+12])
                                Ppat_var "events" (bytecomp/emitcode.ml[441,15277+6]..[441,15277+12])
                              expression (bytecomp/emitcode.ml[441,15277+15]..[441,15277+22])
                                Pexp_apply
                                expression (bytecomp/emitcode.ml[441,15277+15]..[441,15277+16])
                                  Pexp_ident "!" (bytecomp/emitcode.ml[441,15277+15]..[441,15277+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (bytecomp/emitcode.ml[441,15277+16]..[441,15277+22])
                                      Pexp_ident "events" (bytecomp/emitcode.ml[441,15277+16]..[441,15277+22])
                                ]
                          ]
                          expression (bytecomp/emitcode.ml[442,15303+2]..[443,15313+23])
                            Pexp_sequence
                            expression (bytecomp/emitcode.ml[442,15303+2]..[442,15303+8])
                              Pexp_apply
                              expression (bytecomp/emitcode.ml[442,15303+2]..[442,15303+6])
                                Pexp_ident "init" (bytecomp/emitcode.ml[442,15303+2]..[442,15303+6])
                              [
                                <arg>
                                Nolabel
                                  expression (bytecomp/emitcode.ml[442,15303+6]..[442,15303+8])
                                    Pexp_construct "()" (bytecomp/emitcode.ml[442,15303+6]..[442,15303+8])
                                    None
                              ]
                            expression (bytecomp/emitcode.ml[443,15313+2]..[443,15313+23])
                              Pexp_tuple
                              [
                                expression (bytecomp/emitcode.ml[443,15313+3]..[443,15313+7])
                                  Pexp_ident "code" (bytecomp/emitcode.ml[443,15313+3]..[443,15313+7])
                                expression (bytecomp/emitcode.ml[443,15313+9]..[443,15313+14])
                                  Pexp_ident "reloc" (bytecomp/emitcode.ml[443,15313+9]..[443,15313+14])
                                expression (bytecomp/emitcode.ml[443,15313+16]..[443,15313+22])
                                  Pexp_ident "events" (bytecomp/emitcode.ml[443,15313+16]..[443,15313+22])
                              ]
    ]
  structure_item (bytecomp/emitcode.ml[447,15385+0]..[453,15538+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[447,15385+4]..[447,15385+18])
          Ppat_var "to_packed_file" (bytecomp/emitcode.ml[447,15385+4]..[447,15385+18])
        expression (bytecomp/emitcode.ml[447,15385+19]..[453,15538+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[447,15385+19]..[447,15385+26])
            Ppat_var "outchan" (bytecomp/emitcode.ml[447,15385+19]..[447,15385+26])
          expression (bytecomp/emitcode.ml[447,15385+27]..[453,15538+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (bytecomp/emitcode.ml[447,15385+27]..[447,15385+31])
              Ppat_var "code" (bytecomp/emitcode.ml[447,15385+27]..[447,15385+31])
            expression (bytecomp/emitcode.ml[448,15419+2]..[453,15538+7])
              Pexp_sequence
              expression (bytecomp/emitcode.ml[448,15419+2]..[448,15419+8])
                Pexp_apply
                expression (bytecomp/emitcode.ml[448,15419+2]..[448,15419+6])
                  Pexp_ident "init" (bytecomp/emitcode.ml[448,15419+2]..[448,15419+6])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[448,15419+6]..[448,15419+8])
                      Pexp_construct "()" (bytecomp/emitcode.ml[448,15419+6]..[448,15419+8])
                      None
                ]
              expression (bytecomp/emitcode.ml[449,15429+2]..[453,15538+7])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[449,15429+2]..[449,15429+11])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[449,15429+2]..[449,15429+6])
                    Pexp_ident "emit" (bytecomp/emitcode.ml[449,15429+2]..[449,15429+6])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[449,15429+7]..[449,15429+11])
                        Pexp_ident "code" (bytecomp/emitcode.ml[449,15429+7]..[449,15429+11])
                  ]
                expression (bytecomp/emitcode.ml[450,15442+2]..[453,15538+7])
                  Pexp_sequence
                  expression (bytecomp/emitcode.ml[450,15442+2]..[450,15442+55])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[450,15442+2]..[450,15442+19])
                      Pexp_ident "LongString.output" (bytecomp/emitcode.ml[450,15442+2]..[450,15442+19])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[450,15442+20]..[450,15442+27])
                          Pexp_ident "outchan" (bytecomp/emitcode.ml[450,15442+20]..[450,15442+27])
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[450,15442+28]..[450,15442+39])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[450,15442+28]..[450,15442+29])
                            Pexp_ident "!" (bytecomp/emitcode.ml[450,15442+28]..[450,15442+29])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[450,15442+29]..[450,15442+39])
                                Pexp_ident "out_buffer" (bytecomp/emitcode.ml[450,15442+29]..[450,15442+39])
                          ]
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[450,15442+40]..[450,15442+41])
                          Pexp_constant PConst_int (0,None)
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[450,15442+42]..[450,15442+55])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[450,15442+42]..[450,15442+43])
                            Pexp_ident "!" (bytecomp/emitcode.ml[450,15442+42]..[450,15442+43])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[450,15442+43]..[450,15442+55])
                                Pexp_ident "out_position" (bytecomp/emitcode.ml[450,15442+43]..[450,15442+55])
                          ]
                    ]
                  expression (bytecomp/emitcode.ml[451,15499+2]..[453,15538+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (bytecomp/emitcode.ml[451,15499+6]..[451,15499+11])
                          Ppat_var "reloc" (bytecomp/emitcode.ml[451,15499+6]..[451,15499+11])
                        expression (bytecomp/emitcode.ml[451,15499+14]..[451,15499+25])
                          Pexp_apply
                          expression (bytecomp/emitcode.ml[451,15499+14]..[451,15499+15])
                            Pexp_ident "!" (bytecomp/emitcode.ml[451,15499+14]..[451,15499+15])
                          [
                            <arg>
                            Nolabel
                              expression (bytecomp/emitcode.ml[451,15499+15]..[451,15499+25])
                                Pexp_ident "reloc_info" (bytecomp/emitcode.ml[451,15499+15]..[451,15499+25])
                          ]
                    ]
                    expression (bytecomp/emitcode.ml[452,15528+2]..[453,15538+7])
                      Pexp_sequence
                      expression (bytecomp/emitcode.ml[452,15528+2]..[452,15528+8])
                        Pexp_apply
                        expression (bytecomp/emitcode.ml[452,15528+2]..[452,15528+6])
                          Pexp_ident "init" (bytecomp/emitcode.ml[452,15528+2]..[452,15528+6])
                        [
                          <arg>
                          Nolabel
                            expression (bytecomp/emitcode.ml[452,15528+6]..[452,15528+8])
                              Pexp_construct "()" (bytecomp/emitcode.ml[452,15528+6]..[452,15528+8])
                              None
                        ]
                      expression (bytecomp/emitcode.ml[453,15538+2]..[453,15538+7])
                        Pexp_ident "reloc" (bytecomp/emitcode.ml[453,15538+2]..[453,15538+7])
    ]
  structure_item (bytecomp/emitcode.ml[455,15547+0]..[459,15647+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (bytecomp/emitcode.ml[455,15547+4]..[455,15547+9])
          Ppat_var "reset" (bytecomp/emitcode.ml[455,15547+4]..[455,15547+9])
        expression (bytecomp/emitcode.ml[455,15547+10]..[459,15647+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (bytecomp/emitcode.ml[455,15547+10]..[455,15547+12])
            Ppat_construct "()" (bytecomp/emitcode.ml[455,15547+10]..[455,15547+12])
            None
          expression (bytecomp/emitcode.ml[456,15562+2]..[459,15647+18])
            Pexp_sequence
            expression (bytecomp/emitcode.ml[456,15562+2]..[456,15562+38])
              Pexp_apply
              expression (bytecomp/emitcode.ml[456,15562+13]..[456,15562+15])
                Pexp_ident ":=" (bytecomp/emitcode.ml[456,15562+13]..[456,15562+15])
              [
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[456,15562+2]..[456,15562+12])
                    Pexp_ident "out_buffer" (bytecomp/emitcode.ml[456,15562+2]..[456,15562+12])
                <arg>
                Nolabel
                  expression (bytecomp/emitcode.ml[456,15562+16]..[456,15562+38])
                    Pexp_apply
                    expression (bytecomp/emitcode.ml[456,15562+16]..[456,15562+33])
                      Pexp_ident "LongString.create" (bytecomp/emitcode.ml[456,15562+16]..[456,15562+33])
                    [
                      <arg>
                      Nolabel
                        expression (bytecomp/emitcode.ml[456,15562+34]..[456,15562+38])
                          Pexp_constant PConst_int (1024,None)
                    ]
              ]
            expression (bytecomp/emitcode.ml[457,15602+2]..[459,15647+18])
              Pexp_sequence
              expression (bytecomp/emitcode.ml[457,15602+2]..[457,15602+19])
                Pexp_apply
                expression (bytecomp/emitcode.ml[457,15602+15]..[457,15602+17])
                  Pexp_ident ":=" (bytecomp/emitcode.ml[457,15602+15]..[457,15602+17])
                [
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[457,15602+2]..[457,15602+14])
                      Pexp_ident "out_position" (bytecomp/emitcode.ml[457,15602+2]..[457,15602+14])
                  <arg>
                  Nolabel
                    expression (bytecomp/emitcode.ml[457,15602+18]..[457,15602+19])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (bytecomp/emitcode.ml[458,15623+2]..[459,15647+18])
                Pexp_sequence
                expression (bytecomp/emitcode.ml[458,15623+2]..[458,15623+22])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[458,15623+14]..[458,15623+16])
                    Pexp_ident ":=" (bytecomp/emitcode.ml[458,15623+14]..[458,15623+16])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[458,15623+2]..[458,15623+13])
                        Pexp_ident "label_table" (bytecomp/emitcode.ml[458,15623+2]..[458,15623+13])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[458,15623+17]..[458,15623+22])
                        Pexp_array
                        []
                  ]
                expression (bytecomp/emitcode.ml[459,15647+2]..[459,15647+18])
                  Pexp_apply
                  expression (bytecomp/emitcode.ml[459,15647+13]..[459,15647+15])
                    Pexp_ident ":=" (bytecomp/emitcode.ml[459,15647+13]..[459,15647+15])
                  [
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[459,15647+2]..[459,15647+12])
                        Pexp_ident "reloc_info" (bytecomp/emitcode.ml[459,15647+2]..[459,15647+12])
                    <arg>
                    Nolabel
                      expression (bytecomp/emitcode.ml[459,15647+16]..[459,15647+18])
                        Pexp_construct "[]" (bytecomp/emitcode.ml[459,15647+16]..[459,15647+18])
                        None
                  ]
    ]
]

