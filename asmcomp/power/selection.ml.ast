[
  structure_item (asmcomp/power/selection.ml[18,1135+0]..[18,1135+8])
    Pstr_open Fresh
    module_expr (asmcomp/power/selection.ml[18,1135+5]..[18,1135+8])
      Pmod_ident "Cmm" (asmcomp/power/selection.ml[18,1135+5]..[18,1135+8])
  structure_item (asmcomp/power/selection.ml[19,1144+0]..[19,1144+9])
    Pstr_open Fresh
    module_expr (asmcomp/power/selection.ml[19,1144+5]..[19,1144+9])
      Pmod_ident "Arch" (asmcomp/power/selection.ml[19,1144+5]..[19,1144+9])
  structure_item (asmcomp/power/selection.ml[20,1154+0]..[20,1154+9])
    Pstr_open Fresh
    module_expr (asmcomp/power/selection.ml[20,1154+5]..[20,1154+9])
      Pmod_ident "Mach" (asmcomp/power/selection.ml[20,1154+5]..[20,1154+9])
  structure_item (asmcomp/power/selection.ml[24,1204+0]..[27,1275+35])
    Pstr_type Rec
    [
      type_declaration "addressing_expr" (asmcomp/power/selection.ml[24,1204+5]..[24,1204+20]) (asmcomp/power/selection.ml[24,1204+0]..[27,1275+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/power/selection.ml[25,1227+4]..[25,1227+21])
                "Asymbol" (asmcomp/power/selection.ml[25,1227+4]..[25,1227+11])
                [
                  core_type (asmcomp/power/selection.ml[25,1227+15]..[25,1227+21])
                    Ptyp_constr "string" (asmcomp/power/selection.ml[25,1227+15]..[25,1227+21])
                    []
                ]
                None
              (asmcomp/power/selection.ml[26,1249+2]..[26,1249+25])
                "Alinear" (asmcomp/power/selection.ml[26,1249+4]..[26,1249+11])
                [
                  core_type (asmcomp/power/selection.ml[26,1249+15]..[26,1249+25])
                    Ptyp_constr "expression" (asmcomp/power/selection.ml[26,1249+15]..[26,1249+25])
                    []
                ]
                None
              (asmcomp/power/selection.ml[27,1275+2]..[27,1275+35])
                "Aadd" (asmcomp/power/selection.ml[27,1275+4]..[27,1275+8])
                [
                  core_type (asmcomp/power/selection.ml[27,1275+12]..[27,1275+22])
                    Ptyp_constr "expression" (asmcomp/power/selection.ml[27,1275+12]..[27,1275+22])
                    []
                  core_type (asmcomp/power/selection.ml[27,1275+25]..[27,1275+35])
                    Ptyp_constr "expression" (asmcomp/power/selection.ml[27,1275+25]..[27,1275+35])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/power/selection.ml[29,1312+0]..[44,1947+38])
    Pstr_value Rec
    [
      <def>
        pattern (asmcomp/power/selection.ml[29,1312+8]..[29,1312+19])
          Ppat_var "select_addr" (asmcomp/power/selection.ml[29,1312+8]..[29,1312+19])
        expression (asmcomp/power/selection.ml[29,1312+22]..[44,1947+38])
          Pexp_function
          [
            <case>
              pattern (asmcomp/power/selection.ml[30,1343+4]..[30,1343+24])
                Ppat_construct "Cconst_symbol" (asmcomp/power/selection.ml[30,1343+4]..[30,1343+17])
                Some
                  []
                  pattern (asmcomp/power/selection.ml[30,1343+18]..[30,1343+24])
                    Ppat_tuple
                    [
                      pattern (asmcomp/power/selection.ml[30,1343+19]..[30,1343+20])
                        Ppat_var "s" (asmcomp/power/selection.ml[30,1343+19]..[30,1343+20])
                      pattern (asmcomp/power/selection.ml[30,1343+22]..[30,1343+23])
                        Ppat_any
                    ]
              expression (asmcomp/power/selection.ml[31,1371+6]..[31,1371+36])
                Pexp_tuple
                [
                  expression (asmcomp/power/selection.ml[31,1371+7]..[31,1371+16])
                    Pexp_construct "Asymbol" (asmcomp/power/selection.ml[31,1371+7]..[31,1371+14])
                    Some
                      expression (asmcomp/power/selection.ml[31,1371+15]..[31,1371+16])
                        Pexp_ident "s" (asmcomp/power/selection.ml[31,1371+15]..[31,1371+16])
                  expression (asmcomp/power/selection.ml[31,1371+18]..[31,1371+19])
                    Pexp_constant PConst_int (0,None)
                  expression (asmcomp/power/selection.ml[31,1371+21]..[31,1371+35])
                    Pexp_ident "Debuginfo.none" (asmcomp/power/selection.ml[31,1371+21]..[31,1371+35])
                ]
            <case>
              pattern (asmcomp/power/selection.ml[32,1408+4]..[32,1408+63])
                Ppat_construct "Cop" (asmcomp/power/selection.ml[32,1408+4]..[32,1408+7])
                Some
                  []
                  pattern (asmcomp/power/selection.ml[32,1408+7]..[32,1408+63])
                    Ppat_tuple
                    [
                      pattern (asmcomp/power/selection.ml[32,1408+8]..[32,1408+31])
                        Ppat_or
                        pattern (asmcomp/power/selection.ml[32,1408+9]..[32,1408+22])
                          Ppat_or
                          pattern (asmcomp/power/selection.ml[32,1408+9]..[32,1408+14])
                            Ppat_construct "Caddi" (asmcomp/power/selection.ml[32,1408+9]..[32,1408+14])
                            None
                          pattern (asmcomp/power/selection.ml[32,1408+17]..[32,1408+22])
                            Ppat_construct "Caddv" (asmcomp/power/selection.ml[32,1408+17]..[32,1408+22])
                            None
                        pattern (asmcomp/power/selection.ml[32,1408+25]..[32,1408+30])
                          Ppat_construct "Cadda" (asmcomp/power/selection.ml[32,1408+25]..[32,1408+30])
                          None
                      pattern (asmcomp/power/selection.ml[32,1408+33]..[32,1408+57])
                        Ppat_construct "::" (asmcomp/power/selection.ml[32,1408+34]..[32,1408+57]) ghost
                        Some
                          []
                          pattern (asmcomp/power/selection.ml[32,1408+34]..[32,1408+57]) ghost
                            Ppat_tuple
                            [
                              pattern (asmcomp/power/selection.ml[32,1408+34]..[32,1408+37])
                                Ppat_var "arg" (asmcomp/power/selection.ml[32,1408+34]..[32,1408+37])
                              pattern (asmcomp/power/selection.ml[32,1408+39]..[32,1408+57]) ghost
                                Ppat_construct "::" (asmcomp/power/selection.ml[32,1408+39]..[32,1408+57]) ghost
                                Some
                                  []
                                  pattern (asmcomp/power/selection.ml[32,1408+39]..[32,1408+57]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (asmcomp/power/selection.ml[32,1408+39]..[32,1408+56])
                                        Ppat_construct "Cconst_int" (asmcomp/power/selection.ml[32,1408+39]..[32,1408+49])
                                        Some
                                          []
                                          pattern (asmcomp/power/selection.ml[32,1408+50]..[32,1408+56])
                                            Ppat_tuple
                                            [
                                              pattern (asmcomp/power/selection.ml[32,1408+51]..[32,1408+52])
                                                Ppat_var "m" (asmcomp/power/selection.ml[32,1408+51]..[32,1408+52])
                                              pattern (asmcomp/power/selection.ml[32,1408+54]..[32,1408+55])
                                                Ppat_any
                                            ]
                                      pattern (asmcomp/power/selection.ml[32,1408+56]..[32,1408+57]) ghost
                                        Ppat_construct "[]" (asmcomp/power/selection.ml[32,1408+56]..[32,1408+57]) ghost
                                        None
                                    ]
                            ]
                      pattern (asmcomp/power/selection.ml[32,1408+59]..[32,1408+62])
                        Ppat_var "dbg" (asmcomp/power/selection.ml[32,1408+59]..[32,1408+62])
                    ]
              expression (asmcomp/power/selection.ml[33,1475+6]..[33,1475+56])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (asmcomp/power/selection.ml[33,1475+10]..[33,1475+19])
                      Ppat_tuple
                      [
                        pattern (asmcomp/power/selection.ml[33,1475+11]..[33,1475+12])
                          Ppat_var "a" (asmcomp/power/selection.ml[33,1475+11]..[33,1475+12])
                        pattern (asmcomp/power/selection.ml[33,1475+14]..[33,1475+15])
                          Ppat_var "n" (asmcomp/power/selection.ml[33,1475+14]..[33,1475+15])
                        pattern (asmcomp/power/selection.ml[33,1475+17]..[33,1475+18])
                          Ppat_any
                      ]
                    expression (asmcomp/power/selection.ml[33,1475+22]..[33,1475+37])
                      Pexp_apply
                      expression (asmcomp/power/selection.ml[33,1475+22]..[33,1475+33])
                        Pexp_ident "select_addr" (asmcomp/power/selection.ml[33,1475+22]..[33,1475+33])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/power/selection.ml[33,1475+34]..[33,1475+37])
                            Pexp_ident "arg" (asmcomp/power/selection.ml[33,1475+34]..[33,1475+37])
                      ]
                ]
                expression (asmcomp/power/selection.ml[33,1475+41]..[33,1475+56])
                  Pexp_tuple
                  [
                    expression (asmcomp/power/selection.ml[33,1475+42]..[33,1475+43])
                      Pexp_ident "a" (asmcomp/power/selection.ml[33,1475+42]..[33,1475+43])
                    expression (asmcomp/power/selection.ml[33,1475+45]..[33,1475+50])
                      Pexp_apply
                      expression (asmcomp/power/selection.ml[33,1475+47]..[33,1475+48])
                        Pexp_ident "+" (asmcomp/power/selection.ml[33,1475+47]..[33,1475+48])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/power/selection.ml[33,1475+45]..[33,1475+46])
                            Pexp_ident "n" (asmcomp/power/selection.ml[33,1475+45]..[33,1475+46])
                        <arg>
                        Nolabel
                          expression (asmcomp/power/selection.ml[33,1475+49]..[33,1475+50])
                            Pexp_ident "m" (asmcomp/power/selection.ml[33,1475+49]..[33,1475+50])
                      ]
                    expression (asmcomp/power/selection.ml[33,1475+52]..[33,1475+55])
                      Pexp_ident "dbg" (asmcomp/power/selection.ml[33,1475+52]..[33,1475+55])
                  ]
            <case>
              pattern (asmcomp/power/selection.ml[34,1532+4]..[34,1532+63])
                Ppat_construct "Cop" (asmcomp/power/selection.ml[34,1532+4]..[34,1532+7])
                Some
                  []
                  pattern (asmcomp/power/selection.ml[34,1532+7]..[34,1532+63])
                    Ppat_tuple
                    [
                      pattern (asmcomp/power/selection.ml[34,1532+8]..[34,1532+31])
                        Ppat_or
                        pattern (asmcomp/power/selection.ml[34,1532+9]..[34,1532+22])
                          Ppat_or
                          pattern (asmcomp/power/selection.ml[34,1532+9]..[34,1532+14])
                            Ppat_construct "Caddi" (asmcomp/power/selection.ml[34,1532+9]..[34,1532+14])
                            None
                          pattern (asmcomp/power/selection.ml[34,1532+17]..[34,1532+22])
                            Ppat_construct "Caddv" (asmcomp/power/selection.ml[34,1532+17]..[34,1532+22])
                            None
                        pattern (asmcomp/power/selection.ml[34,1532+25]..[34,1532+30])
                          Ppat_construct "Cadda" (asmcomp/power/selection.ml[34,1532+25]..[34,1532+30])
                          None
                      pattern (asmcomp/power/selection.ml[34,1532+33]..[34,1532+57])
                        Ppat_construct "::" (asmcomp/power/selection.ml[34,1532+34]..[34,1532+57]) ghost
                        Some
                          []
                          pattern (asmcomp/power/selection.ml[34,1532+34]..[34,1532+57]) ghost
                            Ppat_tuple
                            [
                              pattern (asmcomp/power/selection.ml[34,1532+34]..[34,1532+51])
                                Ppat_construct "Cconst_int" (asmcomp/power/selection.ml[34,1532+34]..[34,1532+44])
                                Some
                                  []
                                  pattern (asmcomp/power/selection.ml[34,1532+45]..[34,1532+51])
                                    Ppat_tuple
                                    [
                                      pattern (asmcomp/power/selection.ml[34,1532+46]..[34,1532+47])
                                        Ppat_var "m" (asmcomp/power/selection.ml[34,1532+46]..[34,1532+47])
                                      pattern (asmcomp/power/selection.ml[34,1532+49]..[34,1532+50])
                                        Ppat_any
                                    ]
                              pattern (asmcomp/power/selection.ml[34,1532+53]..[34,1532+57]) ghost
                                Ppat_construct "::" (asmcomp/power/selection.ml[34,1532+53]..[34,1532+57]) ghost
                                Some
                                  []
                                  pattern (asmcomp/power/selection.ml[34,1532+53]..[34,1532+57]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (asmcomp/power/selection.ml[34,1532+53]..[34,1532+56])
                                        Ppat_var "arg" (asmcomp/power/selection.ml[34,1532+53]..[34,1532+56])
                                      pattern (asmcomp/power/selection.ml[34,1532+56]..[34,1532+57]) ghost
                                        Ppat_construct "[]" (asmcomp/power/selection.ml[34,1532+56]..[34,1532+57]) ghost
                                        None
                                    ]
                            ]
                      pattern (asmcomp/power/selection.ml[34,1532+59]..[34,1532+62])
                        Ppat_var "dbg" (asmcomp/power/selection.ml[34,1532+59]..[34,1532+62])
                    ]
              expression (asmcomp/power/selection.ml[35,1599+6]..[35,1599+56])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (asmcomp/power/selection.ml[35,1599+10]..[35,1599+19])
                      Ppat_tuple
                      [
                        pattern (asmcomp/power/selection.ml[35,1599+11]..[35,1599+12])
                          Ppat_var "a" (asmcomp/power/selection.ml[35,1599+11]..[35,1599+12])
                        pattern (asmcomp/power/selection.ml[35,1599+14]..[35,1599+15])
                          Ppat_var "n" (asmcomp/power/selection.ml[35,1599+14]..[35,1599+15])
                        pattern (asmcomp/power/selection.ml[35,1599+17]..[35,1599+18])
                          Ppat_any
                      ]
                    expression (asmcomp/power/selection.ml[35,1599+22]..[35,1599+37])
                      Pexp_apply
                      expression (asmcomp/power/selection.ml[35,1599+22]..[35,1599+33])
                        Pexp_ident "select_addr" (asmcomp/power/selection.ml[35,1599+22]..[35,1599+33])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/power/selection.ml[35,1599+34]..[35,1599+37])
                            Pexp_ident "arg" (asmcomp/power/selection.ml[35,1599+34]..[35,1599+37])
                      ]
                ]
                expression (asmcomp/power/selection.ml[35,1599+41]..[35,1599+56])
                  Pexp_tuple
                  [
                    expression (asmcomp/power/selection.ml[35,1599+42]..[35,1599+43])
                      Pexp_ident "a" (asmcomp/power/selection.ml[35,1599+42]..[35,1599+43])
                    expression (asmcomp/power/selection.ml[35,1599+45]..[35,1599+50])
                      Pexp_apply
                      expression (asmcomp/power/selection.ml[35,1599+47]..[35,1599+48])
                        Pexp_ident "+" (asmcomp/power/selection.ml[35,1599+47]..[35,1599+48])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/power/selection.ml[35,1599+45]..[35,1599+46])
                            Pexp_ident "n" (asmcomp/power/selection.ml[35,1599+45]..[35,1599+46])
                        <arg>
                        Nolabel
                          expression (asmcomp/power/selection.ml[35,1599+49]..[35,1599+50])
                            Pexp_ident "m" (asmcomp/power/selection.ml[35,1599+49]..[35,1599+50])
                      ]
                    expression (asmcomp/power/selection.ml[35,1599+52]..[35,1599+55])
                      Pexp_ident "dbg" (asmcomp/power/selection.ml[35,1599+52]..[35,1599+55])
                  ]
            <case>
              pattern (asmcomp/power/selection.ml[36,1656+4]..[36,1656+51])
                Ppat_construct "Cop" (asmcomp/power/selection.ml[36,1656+4]..[36,1656+7])
                Some
                  []
                  pattern (asmcomp/power/selection.ml[36,1656+7]..[36,1656+51])
                    Ppat_tuple
                    [
                      pattern (asmcomp/power/selection.ml[36,1656+8]..[36,1656+31])
                        Ppat_or
                        pattern (asmcomp/power/selection.ml[36,1656+9]..[36,1656+22])
                          Ppat_or
                          pattern (asmcomp/power/selection.ml[36,1656+9]..[36,1656+14])
                            Ppat_construct "Caddi" (asmcomp/power/selection.ml[36,1656+9]..[36,1656+14])
                            None
                          pattern (asmcomp/power/selection.ml[36,1656+17]..[36,1656+22])
                            Ppat_construct "Caddv" (asmcomp/power/selection.ml[36,1656+17]..[36,1656+22])
                            None
                        pattern (asmcomp/power/selection.ml[36,1656+25]..[36,1656+30])
                          Ppat_construct "Cadda" (asmcomp/power/selection.ml[36,1656+25]..[36,1656+30])
                          None
                      pattern (asmcomp/power/selection.ml[36,1656+33]..[36,1656+45])
                        Ppat_construct "::" (asmcomp/power/selection.ml[36,1656+34]..[36,1656+45]) ghost
                        Some
                          []
                          pattern (asmcomp/power/selection.ml[36,1656+34]..[36,1656+45]) ghost
                            Ppat_tuple
                            [
                              pattern (asmcomp/power/selection.ml[36,1656+34]..[36,1656+38])
                                Ppat_var "arg1" (asmcomp/power/selection.ml[36,1656+34]..[36,1656+38])
                              pattern (asmcomp/power/selection.ml[36,1656+40]..[36,1656+45]) ghost
                                Ppat_construct "::" (asmcomp/power/selection.ml[36,1656+40]..[36,1656+45]) ghost
                                Some
                                  []
                                  pattern (asmcomp/power/selection.ml[36,1656+40]..[36,1656+45]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (asmcomp/power/selection.ml[36,1656+40]..[36,1656+44])
                                        Ppat_var "arg2" (asmcomp/power/selection.ml[36,1656+40]..[36,1656+44])
                                      pattern (asmcomp/power/selection.ml[36,1656+44]..[36,1656+45]) ghost
                                        Ppat_construct "[]" (asmcomp/power/selection.ml[36,1656+44]..[36,1656+45]) ghost
                                        None
                                    ]
                            ]
                      pattern (asmcomp/power/selection.ml[36,1656+47]..[36,1656+50])
                        Ppat_var "dbg" (asmcomp/power/selection.ml[36,1656+47]..[36,1656+50])
                    ]
              expression (asmcomp/power/selection.ml[37,1711+6]..[42,1926+9])
                Pexp_match
                expression (asmcomp/power/selection.ml[37,1711+18]..[37,1711+54])
                  Pexp_tuple
                  [
                    expression (asmcomp/power/selection.ml[37,1711+19]..[37,1711+35])
                      Pexp_apply
                      expression (asmcomp/power/selection.ml[37,1711+19]..[37,1711+30])
                        Pexp_ident "select_addr" (asmcomp/power/selection.ml[37,1711+19]..[37,1711+30])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/power/selection.ml[37,1711+31]..[37,1711+35])
                            Pexp_ident "arg1" (asmcomp/power/selection.ml[37,1711+31]..[37,1711+35])
                      ]
                    expression (asmcomp/power/selection.ml[37,1711+37]..[37,1711+53])
                      Pexp_apply
                      expression (asmcomp/power/selection.ml[37,1711+37]..[37,1711+48])
                        Pexp_ident "select_addr" (asmcomp/power/selection.ml[37,1711+37]..[37,1711+48])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/power/selection.ml[37,1711+49]..[37,1711+53])
                            Pexp_ident "arg2" (asmcomp/power/selection.ml[37,1711+49]..[37,1711+53])
                      ]
                  ]
                [
                  <case>
                    pattern (asmcomp/power/selection.ml[38,1771+10]..[38,1771+52])
                      Ppat_tuple
                      [
                        pattern (asmcomp/power/selection.ml[38,1771+11]..[38,1771+30])
                          Ppat_tuple
                          [
                            pattern (asmcomp/power/selection.ml[38,1771+12]..[38,1771+22])
                              Ppat_construct "Alinear" (asmcomp/power/selection.ml[38,1771+12]..[38,1771+19])
                              Some
                                []
                                pattern (asmcomp/power/selection.ml[38,1771+20]..[38,1771+22])
                                  Ppat_var "e1" (asmcomp/power/selection.ml[38,1771+20]..[38,1771+22])
                            pattern (asmcomp/power/selection.ml[38,1771+24]..[38,1771+26])
                              Ppat_var "n1" (asmcomp/power/selection.ml[38,1771+24]..[38,1771+26])
                            pattern (asmcomp/power/selection.ml[38,1771+28]..[38,1771+29])
                              Ppat_any
                          ]
                        pattern (asmcomp/power/selection.ml[38,1771+32]..[38,1771+51])
                          Ppat_tuple
                          [
                            pattern (asmcomp/power/selection.ml[38,1771+33]..[38,1771+43])
                              Ppat_construct "Alinear" (asmcomp/power/selection.ml[38,1771+33]..[38,1771+40])
                              Some
                                []
                                pattern (asmcomp/power/selection.ml[38,1771+41]..[38,1771+43])
                                  Ppat_var "e2" (asmcomp/power/selection.ml[38,1771+41]..[38,1771+43])
                            pattern (asmcomp/power/selection.ml[38,1771+45]..[38,1771+47])
                              Ppat_var "n2" (asmcomp/power/selection.ml[38,1771+45]..[38,1771+47])
                            pattern (asmcomp/power/selection.ml[38,1771+49]..[38,1771+50])
                              Ppat_any
                          ]
                      ]
                    expression (asmcomp/power/selection.ml[39,1827+14]..[39,1827+42])
                      Pexp_tuple
                      [
                        expression (asmcomp/power/selection.ml[39,1827+15]..[39,1827+27])
                          Pexp_construct "Aadd" (asmcomp/power/selection.ml[39,1827+15]..[39,1827+19])
                          Some
                            expression (asmcomp/power/selection.ml[39,1827+19]..[39,1827+27])
                              Pexp_tuple
                              [
                                expression (asmcomp/power/selection.ml[39,1827+20]..[39,1827+22])
                                  Pexp_ident "e1" (asmcomp/power/selection.ml[39,1827+20]..[39,1827+22])
                                expression (asmcomp/power/selection.ml[39,1827+24]..[39,1827+26])
                                  Pexp_ident "e2" (asmcomp/power/selection.ml[39,1827+24]..[39,1827+26])
                              ]
                        expression (asmcomp/power/selection.ml[39,1827+29]..[39,1827+36])
                          Pexp_apply
                          expression (asmcomp/power/selection.ml[39,1827+32]..[39,1827+33])
                            Pexp_ident "+" (asmcomp/power/selection.ml[39,1827+32]..[39,1827+33])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/power/selection.ml[39,1827+29]..[39,1827+31])
                                Pexp_ident "n1" (asmcomp/power/selection.ml[39,1827+29]..[39,1827+31])
                            <arg>
                            Nolabel
                              expression (asmcomp/power/selection.ml[39,1827+34]..[39,1827+36])
                                Pexp_ident "n2" (asmcomp/power/selection.ml[39,1827+34]..[39,1827+36])
                          ]
                        expression (asmcomp/power/selection.ml[39,1827+38]..[39,1827+41])
                          Pexp_ident "dbg" (asmcomp/power/selection.ml[39,1827+38]..[39,1827+41])
                      ]
                  <case>
                    pattern (asmcomp/power/selection.ml[40,1870+10]..[40,1870+11])
                      Ppat_any
                    expression (asmcomp/power/selection.ml[41,1885+14]..[41,1885+40])
                      Pexp_tuple
                      [
                        expression (asmcomp/power/selection.ml[41,1885+15]..[41,1885+31])
                          Pexp_construct "Aadd" (asmcomp/power/selection.ml[41,1885+15]..[41,1885+19])
                          Some
                            expression (asmcomp/power/selection.ml[41,1885+19]..[41,1885+31])
                              Pexp_tuple
                              [
                                expression (asmcomp/power/selection.ml[41,1885+20]..[41,1885+24])
                                  Pexp_ident "arg1" (asmcomp/power/selection.ml[41,1885+20]..[41,1885+24])
                                expression (asmcomp/power/selection.ml[41,1885+26]..[41,1885+30])
                                  Pexp_ident "arg2" (asmcomp/power/selection.ml[41,1885+26]..[41,1885+30])
                              ]
                        expression (asmcomp/power/selection.ml[41,1885+33]..[41,1885+34])
                          Pexp_constant PConst_int (0,None)
                        expression (asmcomp/power/selection.ml[41,1885+36]..[41,1885+39])
                          Pexp_ident "dbg" (asmcomp/power/selection.ml[41,1885+36]..[41,1885+39])
                      ]
                ]
            <case>
              pattern (asmcomp/power/selection.ml[43,1936+4]..[43,1936+7])
                Ppat_var "exp" (asmcomp/power/selection.ml[43,1936+4]..[43,1936+7])
              expression (asmcomp/power/selection.ml[44,1947+6]..[44,1947+38])
                Pexp_tuple
                [
                  expression (asmcomp/power/selection.ml[44,1947+7]..[44,1947+18])
                    Pexp_construct "Alinear" (asmcomp/power/selection.ml[44,1947+7]..[44,1947+14])
                    Some
                      expression (asmcomp/power/selection.ml[44,1947+15]..[44,1947+18])
                        Pexp_ident "exp" (asmcomp/power/selection.ml[44,1947+15]..[44,1947+18])
                  expression (asmcomp/power/selection.ml[44,1947+20]..[44,1947+21])
                    Pexp_constant PConst_int (0,None)
                  expression (asmcomp/power/selection.ml[44,1947+23]..[44,1947+37])
                    Pexp_ident "Debuginfo.none" (asmcomp/power/selection.ml[44,1947+23]..[44,1947+37])
                ]
          ]
    ]
  structure_item (asmcomp/power/selection.ml[46,1987+0]..[46,1987+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/selection.ml[46,1987+4]..[46,1987+16])
          Ppat_var "is_immediate" (asmcomp/power/selection.ml[46,1987+4]..[46,1987+16])
        expression (asmcomp/power/selection.ml[46,1987+17]..[46,1987+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/selection.ml[46,1987+17]..[46,1987+18])
            Ppat_var "n" (asmcomp/power/selection.ml[46,1987+17]..[46,1987+18])
          expression (asmcomp/power/selection.ml[46,1987+21]..[46,1987+48])
            Pexp_apply
            expression (asmcomp/power/selection.ml[46,1987+33]..[46,1987+35])
              Pexp_ident "&&" (asmcomp/power/selection.ml[46,1987+33]..[46,1987+35])
            [
              <arg>
              Nolabel
                expression (asmcomp/power/selection.ml[46,1987+21]..[46,1987+32])
                  Pexp_apply
                  expression (asmcomp/power/selection.ml[46,1987+23]..[46,1987+25])
                    Pexp_ident "<=" (asmcomp/power/selection.ml[46,1987+23]..[46,1987+25])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/power/selection.ml[46,1987+21]..[46,1987+22])
                        Pexp_ident "n" (asmcomp/power/selection.ml[46,1987+21]..[46,1987+22])
                    <arg>
                    Nolabel
                      expression (asmcomp/power/selection.ml[46,1987+26]..[46,1987+32])
                        Pexp_constant PConst_int (0x7FFF,None)
                  ]
              <arg>
              Nolabel
                expression (asmcomp/power/selection.ml[46,1987+36]..[46,1987+48])
                  Pexp_apply
                  expression (asmcomp/power/selection.ml[46,1987+38]..[46,1987+40])
                    Pexp_ident ">=" (asmcomp/power/selection.ml[46,1987+38]..[46,1987+40])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/power/selection.ml[46,1987+36]..[46,1987+37])
                        Pexp_ident "n" (asmcomp/power/selection.ml[46,1987+36]..[46,1987+37])
                    <arg>
                    Nolabel
                      expression (asmcomp/power/selection.ml[46,1987+41]..[46,1987+48])
                        Pexp_constant PConst_int (-0x8000,None)
                  ]
            ]
    ]
  structure_item (asmcomp/power/selection.ml[47,2036+0]..[47,2036+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/selection.ml[47,2036+4]..[47,2036+24])
          Ppat_var "is_immediate_logical" (asmcomp/power/selection.ml[47,2036+4]..[47,2036+24])
        expression (asmcomp/power/selection.ml[47,2036+25]..[47,2036+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/selection.ml[47,2036+25]..[47,2036+26])
            Ppat_var "n" (asmcomp/power/selection.ml[47,2036+25]..[47,2036+26])
          expression (asmcomp/power/selection.ml[47,2036+29]..[47,2036+50])
            Pexp_apply
            expression (asmcomp/power/selection.ml[47,2036+41]..[47,2036+43])
              Pexp_ident "&&" (asmcomp/power/selection.ml[47,2036+41]..[47,2036+43])
            [
              <arg>
              Nolabel
                expression (asmcomp/power/selection.ml[47,2036+29]..[47,2036+40])
                  Pexp_apply
                  expression (asmcomp/power/selection.ml[47,2036+31]..[47,2036+33])
                    Pexp_ident "<=" (asmcomp/power/selection.ml[47,2036+31]..[47,2036+33])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/power/selection.ml[47,2036+29]..[47,2036+30])
                        Pexp_ident "n" (asmcomp/power/selection.ml[47,2036+29]..[47,2036+30])
                    <arg>
                    Nolabel
                      expression (asmcomp/power/selection.ml[47,2036+34]..[47,2036+40])
                        Pexp_constant PConst_int (0xFFFF,None)
                  ]
              <arg>
              Nolabel
                expression (asmcomp/power/selection.ml[47,2036+44]..[47,2036+50])
                  Pexp_apply
                  expression (asmcomp/power/selection.ml[47,2036+46]..[47,2036+48])
                    Pexp_ident ">=" (asmcomp/power/selection.ml[47,2036+46]..[47,2036+48])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/power/selection.ml[47,2036+44]..[47,2036+45])
                        Pexp_ident "n" (asmcomp/power/selection.ml[47,2036+44]..[47,2036+45])
                    <arg>
                    Nolabel
                      expression (asmcomp/power/selection.ml[47,2036+49]..[47,2036+50])
                        Pexp_constant PConst_int (0,None)
                  ]
            ]
    ]
  structure_item (asmcomp/power/selection.ml[51,2117+0]..[93,3485+3])
    Pstr_class
    [
      class_declaration (asmcomp/power/selection.ml[51,2117+0]..[93,3485+3])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "selector" (asmcomp/power/selection.ml[51,2117+6]..[51,2117+14])
        pci_expr =
          class_expr (asmcomp/power/selection.ml[51,2117+17]..[93,3485+3])
            Pcl_structure
            class_structure
              pattern (asmcomp/power/selection.ml[51,2117+24]..[51,2117+30])
                Ppat_var "self" (asmcomp/power/selection.ml[51,2117+25]..[51,2117+29])
              [
                class_field (asmcomp/power/selection.ml[53,2149+0]..[53,2149+43])
                  Pcf_inherit Fresh
                    class_expr (asmcomp/power/selection.ml[53,2149+8]..[53,2149+34])
                      Pcl_constr "Selectgen.selector_generic" (asmcomp/power/selection.ml[53,2149+8]..[53,2149+34])
                      []
                    Some
                      "super" (asmcomp/power/selection.ml[53,2149+38]..[53,2149+43])
                class_field (asmcomp/power/selection.ml[55,2194+0]..[58,2276+41])
                  Pcf_method Public
                    "is_immediate_test" (asmcomp/power/selection.ml[55,2194+7]..[55,2194+24])
                    Concrete Fresh
                    expression (asmcomp/power/selection.ml[55,2194+25]..[58,2276+41]) ghost
                      Pexp_poly
                      expression (asmcomp/power/selection.ml[55,2194+25]..[58,2276+41]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (asmcomp/power/selection.ml[55,2194+25]..[55,2194+28])
                          Ppat_var "cmp" (asmcomp/power/selection.ml[55,2194+25]..[55,2194+28])
                        expression (asmcomp/power/selection.ml[55,2194+29]..[58,2276+41]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (asmcomp/power/selection.ml[55,2194+29]..[55,2194+30])
                            Ppat_var "n" (asmcomp/power/selection.ml[55,2194+29]..[55,2194+30])
                          expression (asmcomp/power/selection.ml[56,2227+2]..[58,2276+41])
                            Pexp_match
                            expression (asmcomp/power/selection.ml[56,2227+8]..[56,2227+11])
                              Pexp_ident "cmp" (asmcomp/power/selection.ml[56,2227+8]..[56,2227+11])
                            [
                              <case>
                                pattern (asmcomp/power/selection.ml[57,2244+4]..[57,2244+13])
                                  Ppat_construct "Isigned" (asmcomp/power/selection.ml[57,2244+4]..[57,2244+11])
                                  Some
                                    []
                                    pattern (asmcomp/power/selection.ml[57,2244+12]..[57,2244+13])
                                      Ppat_any
                                expression (asmcomp/power/selection.ml[57,2244+17]..[57,2244+31])
                                  Pexp_apply
                                  expression (asmcomp/power/selection.ml[57,2244+17]..[57,2244+29])
                                    Pexp_ident "is_immediate" (asmcomp/power/selection.ml[57,2244+17]..[57,2244+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/selection.ml[57,2244+30]..[57,2244+31])
                                        Pexp_ident "n" (asmcomp/power/selection.ml[57,2244+30]..[57,2244+31])
                                  ]
                              <case>
                                pattern (asmcomp/power/selection.ml[58,2276+4]..[58,2276+15])
                                  Ppat_construct "Iunsigned" (asmcomp/power/selection.ml[58,2276+4]..[58,2276+13])
                                  Some
                                    []
                                    pattern (asmcomp/power/selection.ml[58,2276+14]..[58,2276+15])
                                      Ppat_any
                                expression (asmcomp/power/selection.ml[58,2276+19]..[58,2276+41])
                                  Pexp_apply
                                  expression (asmcomp/power/selection.ml[58,2276+19]..[58,2276+39])
                                    Pexp_ident "is_immediate_logical" (asmcomp/power/selection.ml[58,2276+19]..[58,2276+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/selection.ml[58,2276+40]..[58,2276+41])
                                        Pexp_ident "n" (asmcomp/power/selection.ml[58,2276+40]..[58,2276+41])
                                  ]
                            ]
                      None
                class_field (asmcomp/power/selection.ml[60,2319+0]..[68,2671+32])
                  Pcf_method Public
                    "is_immediate" (asmcomp/power/selection.ml[60,2319+8]..[60,2319+20])
                    Concrete Override
                    expression (asmcomp/power/selection.ml[60,2319+21]..[68,2671+32]) ghost
                      Pexp_poly
                      expression (asmcomp/power/selection.ml[60,2319+21]..[68,2671+32]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (asmcomp/power/selection.ml[60,2319+21]..[60,2319+23])
                          Ppat_var "op" (asmcomp/power/selection.ml[60,2319+21]..[60,2319+23])
                        expression (asmcomp/power/selection.ml[60,2319+24]..[68,2671+32]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (asmcomp/power/selection.ml[60,2319+24]..[60,2319+25])
                            Ppat_var "n" (asmcomp/power/selection.ml[60,2319+24]..[60,2319+25])
                          expression (asmcomp/power/selection.ml[61,2347+2]..[68,2671+32])
                            Pexp_match
                            expression (asmcomp/power/selection.ml[61,2347+8]..[61,2347+10])
                              Pexp_ident "op" (asmcomp/power/selection.ml[61,2347+8]..[61,2347+10])
                            [
                              <case>
                                pattern (asmcomp/power/selection.ml[62,2363+4]..[62,2363+15])
                                  Ppat_or
                                  pattern (asmcomp/power/selection.ml[62,2363+4]..[62,2363+8])
                                    Ppat_construct "Iadd" (asmcomp/power/selection.ml[62,2363+4]..[62,2363+8])
                                    None
                                  pattern (asmcomp/power/selection.ml[62,2363+11]..[62,2363+15])
                                    Ppat_construct "Imul" (asmcomp/power/selection.ml[62,2363+11]..[62,2363+15])
                                    None
                                expression (asmcomp/power/selection.ml[62,2363+19]..[62,2363+33])
                                  Pexp_apply
                                  expression (asmcomp/power/selection.ml[62,2363+19]..[62,2363+31])
                                    Pexp_ident "is_immediate" (asmcomp/power/selection.ml[62,2363+19]..[62,2363+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/selection.ml[62,2363+32]..[62,2363+33])
                                        Pexp_ident "n" (asmcomp/power/selection.ml[62,2363+32]..[62,2363+33])
                                  ]
                              <case>
                                pattern (asmcomp/power/selection.ml[63,2397+4]..[63,2397+8])
                                  Ppat_construct "Isub" (asmcomp/power/selection.ml[63,2397+4]..[63,2397+8])
                                  None
                                expression (asmcomp/power/selection.ml[63,2397+12]..[63,2397+29])
                                  Pexp_apply
                                  expression (asmcomp/power/selection.ml[63,2397+12]..[63,2397+24])
                                    Pexp_ident "is_immediate" (asmcomp/power/selection.ml[63,2397+12]..[63,2397+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/selection.ml[63,2397+25]..[63,2397+29])
                                        Pexp_apply
                                        expression (asmcomp/power/selection.ml[63,2397+26]..[63,2397+27])
                                          Pexp_ident "~-" (asmcomp/power/selection.ml[63,2397+26]..[63,2397+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/selection.ml[63,2397+27]..[63,2397+28])
                                              Pexp_ident "n" (asmcomp/power/selection.ml[63,2397+27]..[63,2397+28])
                                        ]
                                  ]
                              <case>
                                pattern (asmcomp/power/selection.ml[64,2459+4]..[64,2459+21])
                                  Ppat_or
                                  pattern (asmcomp/power/selection.ml[64,2459+4]..[64,2459+14])
                                    Ppat_or
                                    pattern (asmcomp/power/selection.ml[64,2459+4]..[64,2459+8])
                                      Ppat_construct "Iand" (asmcomp/power/selection.ml[64,2459+4]..[64,2459+8])
                                      None
                                    pattern (asmcomp/power/selection.ml[64,2459+11]..[64,2459+14])
                                      Ppat_construct "Ior" (asmcomp/power/selection.ml[64,2459+11]..[64,2459+14])
                                      None
                                  pattern (asmcomp/power/selection.ml[64,2459+17]..[64,2459+21])
                                    Ppat_construct "Ixor" (asmcomp/power/selection.ml[64,2459+17]..[64,2459+21])
                                    None
                                expression (asmcomp/power/selection.ml[64,2459+25]..[64,2459+47])
                                  Pexp_apply
                                  expression (asmcomp/power/selection.ml[64,2459+25]..[64,2459+45])
                                    Pexp_ident "is_immediate_logical" (asmcomp/power/selection.ml[64,2459+25]..[64,2459+45])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/selection.ml[64,2459+46]..[64,2459+47])
                                        Pexp_ident "n" (asmcomp/power/selection.ml[64,2459+46]..[64,2459+47])
                                  ]
                              <case>
                                pattern (asmcomp/power/selection.ml[65,2507+4]..[65,2507+11])
                                  Ppat_construct "Icomp" (asmcomp/power/selection.ml[65,2507+4]..[65,2507+9])
                                  Some
                                    []
                                    pattern (asmcomp/power/selection.ml[65,2507+10]..[65,2507+11])
                                      Ppat_var "c" (asmcomp/power/selection.ml[65,2507+10]..[65,2507+11])
                                expression (asmcomp/power/selection.ml[65,2507+15]..[65,2507+41])
                                  Pexp_apply
                                  expression (asmcomp/power/selection.ml[65,2507+15]..[65,2507+37])
                                    Pexp_send "is_immediate_test"
                                    expression (asmcomp/power/selection.ml[65,2507+15]..[65,2507+19])
                                      Pexp_ident "self" (asmcomp/power/selection.ml[65,2507+15]..[65,2507+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/selection.ml[65,2507+38]..[65,2507+39])
                                        Pexp_ident "c" (asmcomp/power/selection.ml[65,2507+38]..[65,2507+39])
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/selection.ml[65,2507+40]..[65,2507+41])
                                        Pexp_ident "n" (asmcomp/power/selection.ml[65,2507+40]..[65,2507+41])
                                  ]
                              <case>
                                pattern (asmcomp/power/selection.ml[66,2549+4]..[66,2549+15])
                                  Ppat_construct "Icheckbound" (asmcomp/power/selection.ml[66,2549+4]..[66,2549+15])
                                  None
                                expression (asmcomp/power/selection.ml[66,2549+19]..[66,2549+40])
                                  Pexp_apply
                                  expression (asmcomp/power/selection.ml[66,2549+26]..[66,2549+28])
                                    Pexp_ident "&&" (asmcomp/power/selection.ml[66,2549+26]..[66,2549+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/selection.ml[66,2549+19]..[66,2549+25])
                                        Pexp_apply
                                        expression (asmcomp/power/selection.ml[66,2549+21]..[66,2549+23])
                                          Pexp_ident "<=" (asmcomp/power/selection.ml[66,2549+21]..[66,2549+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/selection.ml[66,2549+19]..[66,2549+20])
                                              Pexp_constant PConst_int (0,None)
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/selection.ml[66,2549+24]..[66,2549+25])
                                              Pexp_ident "n" (asmcomp/power/selection.ml[66,2549+24]..[66,2549+25])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/selection.ml[66,2549+29]..[66,2549+40])
                                        Pexp_apply
                                        expression (asmcomp/power/selection.ml[66,2549+31]..[66,2549+33])
                                          Pexp_ident "<=" (asmcomp/power/selection.ml[66,2549+31]..[66,2549+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/selection.ml[66,2549+29]..[66,2549+30])
                                              Pexp_ident "n" (asmcomp/power/selection.ml[66,2549+29]..[66,2549+30])
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/selection.ml[66,2549+34]..[66,2549+40])
                                              Pexp_constant PConst_int (0x7FFF,None)
                                        ]
                                  ]
                              <case>
                                pattern (asmcomp/power/selection.ml[68,2671+4]..[68,2671+5])
                                  Ppat_any
                                expression (asmcomp/power/selection.ml[68,2671+9]..[68,2671+32])
                                  Pexp_apply
                                  expression (asmcomp/power/selection.ml[68,2671+9]..[68,2671+27])
                                    Pexp_send "is_immediate"
                                    expression (asmcomp/power/selection.ml[68,2671+9]..[68,2671+14])
                                      Pexp_ident "super" (asmcomp/power/selection.ml[68,2671+9]..[68,2671+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/selection.ml[68,2671+28]..[68,2671+30])
                                        Pexp_ident "op" (asmcomp/power/selection.ml[68,2671+28]..[68,2671+30])
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/selection.ml[68,2671+31]..[68,2671+32])
                                        Pexp_ident "n" (asmcomp/power/selection.ml[68,2671+31]..[68,2671+32])
                                  ]
                            ]
                      None
                class_field (asmcomp/power/selection.ml[70,2705+0]..[79,2966+50])
                  Pcf_method Public
                    "select_addressing" (asmcomp/power/selection.ml[70,2705+7]..[70,2705+24])
                    Concrete Fresh
                    expression (asmcomp/power/selection.ml[70,2705+25]..[79,2966+50]) ghost
                      Pexp_poly
                      expression (asmcomp/power/selection.ml[70,2705+25]..[79,2966+50]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (asmcomp/power/selection.ml[70,2705+25]..[70,2705+31])
                          Ppat_var "_chunk" (asmcomp/power/selection.ml[70,2705+25]..[70,2705+31])
                        expression (asmcomp/power/selection.ml[70,2705+32]..[79,2966+50]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (asmcomp/power/selection.ml[70,2705+32]..[70,2705+35])
                            Ppat_var "exp" (asmcomp/power/selection.ml[70,2705+32]..[70,2705+35])
                          expression (asmcomp/power/selection.ml[71,2743+2]..[79,2966+50])
                            Pexp_match
                            expression (asmcomp/power/selection.ml[71,2743+8]..[71,2743+23])
                              Pexp_apply
                              expression (asmcomp/power/selection.ml[71,2743+8]..[71,2743+19])
                                Pexp_ident "select_addr" (asmcomp/power/selection.ml[71,2743+8]..[71,2743+19])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/power/selection.ml[71,2743+20]..[71,2743+23])
                                    Pexp_ident "exp" (asmcomp/power/selection.ml[71,2743+20]..[71,2743+23])
                              ]
                            [
                              <case>
                                pattern (asmcomp/power/selection.ml[72,2772+4]..[72,2772+24])
                                  Ppat_tuple
                                  [
                                    pattern (asmcomp/power/selection.ml[72,2772+5]..[72,2772+14])
                                      Ppat_construct "Asymbol" (asmcomp/power/selection.ml[72,2772+5]..[72,2772+12])
                                      Some
                                        []
                                        pattern (asmcomp/power/selection.ml[72,2772+13]..[72,2772+14])
                                          Ppat_var "s" (asmcomp/power/selection.ml[72,2772+13]..[72,2772+14])
                                    pattern (asmcomp/power/selection.ml[72,2772+16]..[72,2772+17])
                                      Ppat_var "d" (asmcomp/power/selection.ml[72,2772+16]..[72,2772+17])
                                    pattern (asmcomp/power/selection.ml[72,2772+19]..[72,2772+23])
                                      Ppat_var "_dbg" (asmcomp/power/selection.ml[72,2772+19]..[72,2772+23])
                                  ]
                                expression (asmcomp/power/selection.ml[73,2800+6]..[73,2800+31])
                                  Pexp_tuple
                                  [
                                    expression (asmcomp/power/selection.ml[73,2800+7]..[73,2800+19])
                                      Pexp_construct "Ibased" (asmcomp/power/selection.ml[73,2800+7]..[73,2800+13])
                                      Some
                                        expression (asmcomp/power/selection.ml[73,2800+13]..[73,2800+19])
                                          Pexp_tuple
                                          [
                                            expression (asmcomp/power/selection.ml[73,2800+14]..[73,2800+15])
                                              Pexp_ident "s" (asmcomp/power/selection.ml[73,2800+14]..[73,2800+15])
                                            expression (asmcomp/power/selection.ml[73,2800+17]..[73,2800+18])
                                              Pexp_ident "d" (asmcomp/power/selection.ml[73,2800+17]..[73,2800+18])
                                          ]
                                    expression (asmcomp/power/selection.ml[73,2800+21]..[73,2800+30])
                                      Pexp_construct "Ctuple" (asmcomp/power/selection.ml[73,2800+21]..[73,2800+27])
                                      Some
                                        expression (asmcomp/power/selection.ml[73,2800+28]..[73,2800+30])
                                          Pexp_construct "[]" (asmcomp/power/selection.ml[73,2800+28]..[73,2800+30])
                                          None
                                  ]
                              <case>
                                pattern (asmcomp/power/selection.ml[74,2832+4]..[74,2832+24])
                                  Ppat_tuple
                                  [
                                    pattern (asmcomp/power/selection.ml[74,2832+5]..[74,2832+14])
                                      Ppat_construct "Alinear" (asmcomp/power/selection.ml[74,2832+5]..[74,2832+12])
                                      Some
                                        []
                                        pattern (asmcomp/power/selection.ml[74,2832+13]..[74,2832+14])
                                          Ppat_var "e" (asmcomp/power/selection.ml[74,2832+13]..[74,2832+14])
                                    pattern (asmcomp/power/selection.ml[74,2832+16]..[74,2832+17])
                                      Ppat_var "d" (asmcomp/power/selection.ml[74,2832+16]..[74,2832+17])
                                    pattern (asmcomp/power/selection.ml[74,2832+19]..[74,2832+23])
                                      Ppat_var "_dbg" (asmcomp/power/selection.ml[74,2832+19]..[74,2832+23])
                                  ]
                                expression (asmcomp/power/selection.ml[75,2860+6]..[75,2860+21])
                                  Pexp_tuple
                                  [
                                    expression (asmcomp/power/selection.ml[75,2860+7]..[75,2860+17])
                                      Pexp_construct "Iindexed" (asmcomp/power/selection.ml[75,2860+7]..[75,2860+15])
                                      Some
                                        expression (asmcomp/power/selection.ml[75,2860+16]..[75,2860+17])
                                          Pexp_ident "d" (asmcomp/power/selection.ml[75,2860+16]..[75,2860+17])
                                    expression (asmcomp/power/selection.ml[75,2860+19]..[75,2860+20])
                                      Pexp_ident "e" (asmcomp/power/selection.ml[75,2860+19]..[75,2860+20])
                                  ]
                              <case>
                                pattern (asmcomp/power/selection.ml[76,2882+4]..[76,2882+26])
                                  Ppat_tuple
                                  [
                                    pattern (asmcomp/power/selection.ml[76,2882+5]..[76,2882+17])
                                      Ppat_construct "Aadd" (asmcomp/power/selection.ml[76,2882+5]..[76,2882+9])
                                      Some
                                        []
                                        pattern (asmcomp/power/selection.ml[76,2882+9]..[76,2882+17])
                                          Ppat_tuple
                                          [
                                            pattern (asmcomp/power/selection.ml[76,2882+10]..[76,2882+12])
                                              Ppat_var "e1" (asmcomp/power/selection.ml[76,2882+10]..[76,2882+12])
                                            pattern (asmcomp/power/selection.ml[76,2882+14]..[76,2882+16])
                                              Ppat_var "e2" (asmcomp/power/selection.ml[76,2882+14]..[76,2882+16])
                                          ]
                                    pattern (asmcomp/power/selection.ml[76,2882+19]..[76,2882+20])
                                      Ppat_var "d" (asmcomp/power/selection.ml[76,2882+19]..[76,2882+20])
                                    pattern (asmcomp/power/selection.ml[76,2882+22]..[76,2882+25])
                                      Ppat_var "dbg" (asmcomp/power/selection.ml[76,2882+22]..[76,2882+25])
                                  ]
                                expression (asmcomp/power/selection.ml[77,2912+6]..[79,2966+50])
                                  Pexp_ifthenelse
                                  expression (asmcomp/power/selection.ml[77,2912+9]..[77,2912+14])
                                    Pexp_apply
                                    expression (asmcomp/power/selection.ml[77,2912+11]..[77,2912+12])
                                      Pexp_ident "=" (asmcomp/power/selection.ml[77,2912+11]..[77,2912+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/selection.ml[77,2912+9]..[77,2912+10])
                                          Pexp_ident "d" (asmcomp/power/selection.ml[77,2912+9]..[77,2912+10])
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/selection.ml[77,2912+13]..[77,2912+14])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                  expression (asmcomp/power/selection.ml[78,2927+11]..[78,2927+38])
                                    Pexp_tuple
                                    [
                                      expression (asmcomp/power/selection.ml[78,2927+12]..[78,2927+21])
                                        Pexp_construct "Iindexed2" (asmcomp/power/selection.ml[78,2927+12]..[78,2927+21])
                                        None
                                      expression (asmcomp/power/selection.ml[78,2927+23]..[78,2927+37])
                                        Pexp_construct "Ctuple" (asmcomp/power/selection.ml[78,2927+23]..[78,2927+29])
                                        Some
                                          expression (asmcomp/power/selection.ml[78,2927+29]..[78,2927+37])
                                            Pexp_construct "::" (asmcomp/power/selection.ml[78,2927+30]..[78,2927+37]) ghost
                                            Some
                                              expression (asmcomp/power/selection.ml[78,2927+30]..[78,2927+37]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (asmcomp/power/selection.ml[78,2927+30]..[78,2927+32])
                                                    Pexp_ident "e1" (asmcomp/power/selection.ml[78,2927+30]..[78,2927+32])
                                                  expression (asmcomp/power/selection.ml[78,2927+34]..[78,2927+37]) ghost
                                                    Pexp_construct "::" (asmcomp/power/selection.ml[78,2927+34]..[78,2927+37]) ghost
                                                    Some
                                                      expression (asmcomp/power/selection.ml[78,2927+34]..[78,2927+37]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (asmcomp/power/selection.ml[78,2927+34]..[78,2927+36])
                                                            Pexp_ident "e2" (asmcomp/power/selection.ml[78,2927+34]..[78,2927+36])
                                                          expression (asmcomp/power/selection.ml[78,2927+36]..[78,2927+37]) ghost
                                                            Pexp_construct "[]" (asmcomp/power/selection.ml[78,2927+36]..[78,2927+37]) ghost
                                                            None
                                                        ]
                                                ]
                                    ]
                                  Some
                                    expression (asmcomp/power/selection.ml[79,2966+11]..[79,2966+50])
                                      Pexp_tuple
                                      [
                                        expression (asmcomp/power/selection.ml[79,2966+12]..[79,2966+22])
                                          Pexp_construct "Iindexed" (asmcomp/power/selection.ml[79,2966+12]..[79,2966+20])
                                          Some
                                            expression (asmcomp/power/selection.ml[79,2966+21]..[79,2966+22])
                                              Pexp_ident "d" (asmcomp/power/selection.ml[79,2966+21]..[79,2966+22])
                                        expression (asmcomp/power/selection.ml[79,2966+24]..[79,2966+49])
                                          Pexp_construct "Cop" (asmcomp/power/selection.ml[79,2966+24]..[79,2966+27])
                                          Some
                                            expression (asmcomp/power/selection.ml[79,2966+27]..[79,2966+49])
                                              Pexp_tuple
                                              [
                                                expression (asmcomp/power/selection.ml[79,2966+28]..[79,2966+33])
                                                  Pexp_construct "Cadda" (asmcomp/power/selection.ml[79,2966+28]..[79,2966+33])
                                                  None
                                                expression (asmcomp/power/selection.ml[79,2966+35]..[79,2966+43])
                                                  Pexp_construct "::" (asmcomp/power/selection.ml[79,2966+36]..[79,2966+43]) ghost
                                                  Some
                                                    expression (asmcomp/power/selection.ml[79,2966+36]..[79,2966+43]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (asmcomp/power/selection.ml[79,2966+36]..[79,2966+38])
                                                          Pexp_ident "e1" (asmcomp/power/selection.ml[79,2966+36]..[79,2966+38])
                                                        expression (asmcomp/power/selection.ml[79,2966+40]..[79,2966+43]) ghost
                                                          Pexp_construct "::" (asmcomp/power/selection.ml[79,2966+40]..[79,2966+43]) ghost
                                                          Some
                                                            expression (asmcomp/power/selection.ml[79,2966+40]..[79,2966+43]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (asmcomp/power/selection.ml[79,2966+40]..[79,2966+42])
                                                                  Pexp_ident "e2" (asmcomp/power/selection.ml[79,2966+40]..[79,2966+42])
                                                                expression (asmcomp/power/selection.ml[79,2966+42]..[79,2966+43]) ghost
                                                                  Pexp_construct "[]" (asmcomp/power/selection.ml[79,2966+42]..[79,2966+43]) ghost
                                                                  None
                                                              ]
                                                      ]
                                                expression (asmcomp/power/selection.ml[79,2966+45]..[79,2966+48])
                                                  Pexp_ident "dbg" (asmcomp/power/selection.ml[79,2966+45]..[79,2966+48])
                                              ]
                                      ]
                            ]
                      None
                class_field (asmcomp/power/selection.ml[81,3018+0]..[91,3443+40])
                  Pcf_method Public
                    "select_operation" (asmcomp/power/selection.ml[81,3018+8]..[81,3018+24])
                    Concrete Override
                    expression (asmcomp/power/selection.ml[81,3018+25]..[91,3443+40]) ghost
                      Pexp_poly
                      expression (asmcomp/power/selection.ml[81,3018+25]..[91,3443+40]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (asmcomp/power/selection.ml[81,3018+25]..[81,3018+27])
                          Ppat_var "op" (asmcomp/power/selection.ml[81,3018+25]..[81,3018+27])
                        expression (asmcomp/power/selection.ml[81,3018+28]..[91,3443+40]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (asmcomp/power/selection.ml[81,3018+28]..[81,3018+32])
                            Ppat_var "args" (asmcomp/power/selection.ml[81,3018+28]..[81,3018+32])
                          expression (asmcomp/power/selection.ml[81,3018+33]..[91,3443+40]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (asmcomp/power/selection.ml[81,3018+33]..[81,3018+36])
                              Ppat_var "dbg" (asmcomp/power/selection.ml[81,3018+33]..[81,3018+36])
                            expression (asmcomp/power/selection.ml[82,3057+2]..[91,3443+40])
                              Pexp_match
                              expression (asmcomp/power/selection.ml[82,3057+8]..[82,3057+18])
                                Pexp_tuple
                                [
                                  expression (asmcomp/power/selection.ml[82,3057+9]..[82,3057+11])
                                    Pexp_ident "op" (asmcomp/power/selection.ml[82,3057+9]..[82,3057+11])
                                  expression (asmcomp/power/selection.ml[82,3057+13]..[82,3057+17])
                                    Pexp_ident "args" (asmcomp/power/selection.ml[82,3057+13]..[82,3057+17])
                                ]
                              [
                                <case>
                                  pattern (asmcomp/power/selection.ml[84,3134+4]..[84,3134+48])
                                    Ppat_tuple
                                    [
                                      pattern (asmcomp/power/selection.ml[84,3134+5]..[84,3134+10])
                                        Ppat_construct "Caddf" (asmcomp/power/selection.ml[84,3134+5]..[84,3134+10])
                                        None
                                      pattern (asmcomp/power/selection.ml[84,3134+12]..[84,3134+47])
                                        Ppat_construct "::" (asmcomp/power/selection.ml[84,3134+13]..[84,3134+47]) ghost
                                        Some
                                          []
                                          pattern (asmcomp/power/selection.ml[84,3134+13]..[84,3134+47]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (asmcomp/power/selection.ml[84,3134+13]..[84,3134+40])
                                                Ppat_construct "Cop" (asmcomp/power/selection.ml[84,3134+13]..[84,3134+16])
                                                Some
                                                  []
                                                  pattern (asmcomp/power/selection.ml[84,3134+16]..[84,3134+40])
                                                    Ppat_tuple
                                                    [
                                                      pattern (asmcomp/power/selection.ml[84,3134+17]..[84,3134+22])
                                                        Ppat_construct "Cmulf" (asmcomp/power/selection.ml[84,3134+17]..[84,3134+22])
                                                        None
                                                      pattern (asmcomp/power/selection.ml[84,3134+24]..[84,3134+36])
                                                        Ppat_construct "::" (asmcomp/power/selection.ml[84,3134+25]..[84,3134+36]) ghost
                                                        Some
                                                          []
                                                          pattern (asmcomp/power/selection.ml[84,3134+25]..[84,3134+36]) ghost
                                                            Ppat_tuple
                                                            [
                                                              pattern (asmcomp/power/selection.ml[84,3134+25]..[84,3134+29])
                                                                Ppat_var "arg1" (asmcomp/power/selection.ml[84,3134+25]..[84,3134+29])
                                                              pattern (asmcomp/power/selection.ml[84,3134+31]..[84,3134+36]) ghost
                                                                Ppat_construct "::" (asmcomp/power/selection.ml[84,3134+31]..[84,3134+36]) ghost
                                                                Some
                                                                  []
                                                                  pattern (asmcomp/power/selection.ml[84,3134+31]..[84,3134+36]) ghost
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (asmcomp/power/selection.ml[84,3134+31]..[84,3134+35])
Ppat_var "arg2" (asmcomp/power/selection.ml[84,3134+31]..[84,3134+35])
                                                                      pattern (asmcomp/power/selection.ml[84,3134+35]..[84,3134+36]) ghost
Ppat_construct "[]" (asmcomp/power/selection.ml[84,3134+35]..[84,3134+36]) ghost
None
                                                                    ]
                                                            ]
                                                      pattern (asmcomp/power/selection.ml[84,3134+38]..[84,3134+39])
                                                        Ppat_any
                                                    ]
                                              pattern (asmcomp/power/selection.ml[84,3134+42]..[84,3134+47]) ghost
                                                Ppat_construct "::" (asmcomp/power/selection.ml[84,3134+42]..[84,3134+47]) ghost
                                                Some
                                                  []
                                                  pattern (asmcomp/power/selection.ml[84,3134+42]..[84,3134+47]) ghost
                                                    Ppat_tuple
                                                    [
                                                      pattern (asmcomp/power/selection.ml[84,3134+42]..[84,3134+46])
                                                        Ppat_var "arg3" (asmcomp/power/selection.ml[84,3134+42]..[84,3134+46])
                                                      pattern (asmcomp/power/selection.ml[84,3134+46]..[84,3134+47]) ghost
                                                        Ppat_construct "[]" (asmcomp/power/selection.ml[84,3134+46]..[84,3134+47]) ghost
                                                        None
                                                    ]
                                            ]
                                    ]
                                  expression (asmcomp/power/selection.ml[85,3186+6]..[85,3186+47])
                                    Pexp_tuple
                                    [
                                      expression (asmcomp/power/selection.ml[85,3186+7]..[85,3186+26])
                                        Pexp_construct "Ispecific" (asmcomp/power/selection.ml[85,3186+7]..[85,3186+16])
                                        Some
                                          expression (asmcomp/power/selection.ml[85,3186+17]..[85,3186+26])
                                            Pexp_construct "Imultaddf" (asmcomp/power/selection.ml[85,3186+17]..[85,3186+26])
                                            None
                                      expression (asmcomp/power/selection.ml[85,3186+28]..[85,3186+46])
                                        Pexp_construct "::" (asmcomp/power/selection.ml[85,3186+29]..[85,3186+46]) ghost
                                        Some
                                          expression (asmcomp/power/selection.ml[85,3186+29]..[85,3186+46]) ghost
                                            Pexp_tuple
                                            [
                                              expression (asmcomp/power/selection.ml[85,3186+29]..[85,3186+33])
                                                Pexp_ident "arg1" (asmcomp/power/selection.ml[85,3186+29]..[85,3186+33])
                                              expression (asmcomp/power/selection.ml[85,3186+35]..[85,3186+46]) ghost
                                                Pexp_construct "::" (asmcomp/power/selection.ml[85,3186+35]..[85,3186+46]) ghost
                                                Some
                                                  expression (asmcomp/power/selection.ml[85,3186+35]..[85,3186+46]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (asmcomp/power/selection.ml[85,3186+35]..[85,3186+39])
                                                        Pexp_ident "arg2" (asmcomp/power/selection.ml[85,3186+35]..[85,3186+39])
                                                      expression (asmcomp/power/selection.ml[85,3186+41]..[85,3186+46]) ghost
                                                        Pexp_construct "::" (asmcomp/power/selection.ml[85,3186+41]..[85,3186+46]) ghost
                                                        Some
                                                          expression (asmcomp/power/selection.ml[85,3186+41]..[85,3186+46]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (asmcomp/power/selection.ml[85,3186+41]..[85,3186+45])
                                                                Pexp_ident "arg3" (asmcomp/power/selection.ml[85,3186+41]..[85,3186+45])
                                                              expression (asmcomp/power/selection.ml[85,3186+45]..[85,3186+46]) ghost
                                                                Pexp_construct "[]" (asmcomp/power/selection.ml[85,3186+45]..[85,3186+46]) ghost
                                                                None
                                                            ]
                                                    ]
                                            ]
                                    ]
                                <case>
                                  pattern (asmcomp/power/selection.ml[86,3234+4]..[86,3234+48])
                                    Ppat_tuple
                                    [
                                      pattern (asmcomp/power/selection.ml[86,3234+5]..[86,3234+10])
                                        Ppat_construct "Caddf" (asmcomp/power/selection.ml[86,3234+5]..[86,3234+10])
                                        None
                                      pattern (asmcomp/power/selection.ml[86,3234+12]..[86,3234+47])
                                        Ppat_construct "::" (asmcomp/power/selection.ml[86,3234+13]..[86,3234+47]) ghost
                                        Some
                                          []
                                          pattern (asmcomp/power/selection.ml[86,3234+13]..[86,3234+47]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (asmcomp/power/selection.ml[86,3234+13]..[86,3234+17])
                                                Ppat_var "arg3" (asmcomp/power/selection.ml[86,3234+13]..[86,3234+17])
                                              pattern (asmcomp/power/selection.ml[86,3234+19]..[86,3234+47]) ghost
                                                Ppat_construct "::" (asmcomp/power/selection.ml[86,3234+19]..[86,3234+47]) ghost
                                                Some
                                                  []
                                                  pattern (asmcomp/power/selection.ml[86,3234+19]..[86,3234+47]) ghost
                                                    Ppat_tuple
                                                    [
                                                      pattern (asmcomp/power/selection.ml[86,3234+19]..[86,3234+46])
                                                        Ppat_construct "Cop" (asmcomp/power/selection.ml[86,3234+19]..[86,3234+22])
                                                        Some
                                                          []
                                                          pattern (asmcomp/power/selection.ml[86,3234+22]..[86,3234+46])
                                                            Ppat_tuple
                                                            [
                                                              pattern (asmcomp/power/selection.ml[86,3234+23]..[86,3234+28])
                                                                Ppat_construct "Cmulf" (asmcomp/power/selection.ml[86,3234+23]..[86,3234+28])
                                                                None
                                                              pattern (asmcomp/power/selection.ml[86,3234+30]..[86,3234+42])
                                                                Ppat_construct "::" (asmcomp/power/selection.ml[86,3234+31]..[86,3234+42]) ghost
                                                                Some
                                                                  []
                                                                  pattern (asmcomp/power/selection.ml[86,3234+31]..[86,3234+42]) ghost
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (asmcomp/power/selection.ml[86,3234+31]..[86,3234+35])
Ppat_var "arg1" (asmcomp/power/selection.ml[86,3234+31]..[86,3234+35])
                                                                      pattern (asmcomp/power/selection.ml[86,3234+37]..[86,3234+42]) ghost
Ppat_construct "::" (asmcomp/power/selection.ml[86,3234+37]..[86,3234+42]) ghost
Some
  []
  pattern (asmcomp/power/selection.ml[86,3234+37]..[86,3234+42]) ghost
    Ppat_tuple
    [
      pattern (asmcomp/power/selection.ml[86,3234+37]..[86,3234+41])
        Ppat_var "arg2" (asmcomp/power/selection.ml[86,3234+37]..[86,3234+41])
      pattern (asmcomp/power/selection.ml[86,3234+41]..[86,3234+42]) ghost
        Ppat_construct "[]" (asmcomp/power/selection.ml[86,3234+41]..[86,3234+42]) ghost
        None
    ]
                                                                    ]
                                                              pattern (asmcomp/power/selection.ml[86,3234+44]..[86,3234+45])
                                                                Ppat_any
                                                            ]
                                                      pattern (asmcomp/power/selection.ml[86,3234+46]..[86,3234+47]) ghost
                                                        Ppat_construct "[]" (asmcomp/power/selection.ml[86,3234+46]..[86,3234+47]) ghost
                                                        None
                                                    ]
                                            ]
                                    ]
                                  expression (asmcomp/power/selection.ml[87,3286+6]..[87,3286+47])
                                    Pexp_tuple
                                    [
                                      expression (asmcomp/power/selection.ml[87,3286+7]..[87,3286+26])
                                        Pexp_construct "Ispecific" (asmcomp/power/selection.ml[87,3286+7]..[87,3286+16])
                                        Some
                                          expression (asmcomp/power/selection.ml[87,3286+17]..[87,3286+26])
                                            Pexp_construct "Imultaddf" (asmcomp/power/selection.ml[87,3286+17]..[87,3286+26])
                                            None
                                      expression (asmcomp/power/selection.ml[87,3286+28]..[87,3286+46])
                                        Pexp_construct "::" (asmcomp/power/selection.ml[87,3286+29]..[87,3286+46]) ghost
                                        Some
                                          expression (asmcomp/power/selection.ml[87,3286+29]..[87,3286+46]) ghost
                                            Pexp_tuple
                                            [
                                              expression (asmcomp/power/selection.ml[87,3286+29]..[87,3286+33])
                                                Pexp_ident "arg1" (asmcomp/power/selection.ml[87,3286+29]..[87,3286+33])
                                              expression (asmcomp/power/selection.ml[87,3286+35]..[87,3286+46]) ghost
                                                Pexp_construct "::" (asmcomp/power/selection.ml[87,3286+35]..[87,3286+46]) ghost
                                                Some
                                                  expression (asmcomp/power/selection.ml[87,3286+35]..[87,3286+46]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (asmcomp/power/selection.ml[87,3286+35]..[87,3286+39])
                                                        Pexp_ident "arg2" (asmcomp/power/selection.ml[87,3286+35]..[87,3286+39])
                                                      expression (asmcomp/power/selection.ml[87,3286+41]..[87,3286+46]) ghost
                                                        Pexp_construct "::" (asmcomp/power/selection.ml[87,3286+41]..[87,3286+46]) ghost
                                                        Some
                                                          expression (asmcomp/power/selection.ml[87,3286+41]..[87,3286+46]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (asmcomp/power/selection.ml[87,3286+41]..[87,3286+45])
                                                                Pexp_ident "arg3" (asmcomp/power/selection.ml[87,3286+41]..[87,3286+45])
                                                              expression (asmcomp/power/selection.ml[87,3286+45]..[87,3286+46]) ghost
                                                                Pexp_construct "[]" (asmcomp/power/selection.ml[87,3286+45]..[87,3286+46]) ghost
                                                                None
                                                            ]
                                                    ]
                                            ]
                                    ]
                                <case>
                                  pattern (asmcomp/power/selection.ml[88,3334+4]..[88,3334+48])
                                    Ppat_tuple
                                    [
                                      pattern (asmcomp/power/selection.ml[88,3334+5]..[88,3334+10])
                                        Ppat_construct "Csubf" (asmcomp/power/selection.ml[88,3334+5]..[88,3334+10])
                                        None
                                      pattern (asmcomp/power/selection.ml[88,3334+12]..[88,3334+47])
                                        Ppat_construct "::" (asmcomp/power/selection.ml[88,3334+13]..[88,3334+47]) ghost
                                        Some
                                          []
                                          pattern (asmcomp/power/selection.ml[88,3334+13]..[88,3334+47]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (asmcomp/power/selection.ml[88,3334+13]..[88,3334+40])
                                                Ppat_construct "Cop" (asmcomp/power/selection.ml[88,3334+13]..[88,3334+16])
                                                Some
                                                  []
                                                  pattern (asmcomp/power/selection.ml[88,3334+16]..[88,3334+40])
                                                    Ppat_tuple
                                                    [
                                                      pattern (asmcomp/power/selection.ml[88,3334+17]..[88,3334+22])
                                                        Ppat_construct "Cmulf" (asmcomp/power/selection.ml[88,3334+17]..[88,3334+22])
                                                        None
                                                      pattern (asmcomp/power/selection.ml[88,3334+24]..[88,3334+36])
                                                        Ppat_construct "::" (asmcomp/power/selection.ml[88,3334+25]..[88,3334+36]) ghost
                                                        Some
                                                          []
                                                          pattern (asmcomp/power/selection.ml[88,3334+25]..[88,3334+36]) ghost
                                                            Ppat_tuple
                                                            [
                                                              pattern (asmcomp/power/selection.ml[88,3334+25]..[88,3334+29])
                                                                Ppat_var "arg1" (asmcomp/power/selection.ml[88,3334+25]..[88,3334+29])
                                                              pattern (asmcomp/power/selection.ml[88,3334+31]..[88,3334+36]) ghost
                                                                Ppat_construct "::" (asmcomp/power/selection.ml[88,3334+31]..[88,3334+36]) ghost
                                                                Some
                                                                  []
                                                                  pattern (asmcomp/power/selection.ml[88,3334+31]..[88,3334+36]) ghost
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (asmcomp/power/selection.ml[88,3334+31]..[88,3334+35])
Ppat_var "arg2" (asmcomp/power/selection.ml[88,3334+31]..[88,3334+35])
                                                                      pattern (asmcomp/power/selection.ml[88,3334+35]..[88,3334+36]) ghost
Ppat_construct "[]" (asmcomp/power/selection.ml[88,3334+35]..[88,3334+36]) ghost
None
                                                                    ]
                                                            ]
                                                      pattern (asmcomp/power/selection.ml[88,3334+38]..[88,3334+39])
                                                        Ppat_any
                                                    ]
                                              pattern (asmcomp/power/selection.ml[88,3334+42]..[88,3334+47]) ghost
                                                Ppat_construct "::" (asmcomp/power/selection.ml[88,3334+42]..[88,3334+47]) ghost
                                                Some
                                                  []
                                                  pattern (asmcomp/power/selection.ml[88,3334+42]..[88,3334+47]) ghost
                                                    Ppat_tuple
                                                    [
                                                      pattern (asmcomp/power/selection.ml[88,3334+42]..[88,3334+46])
                                                        Ppat_var "arg3" (asmcomp/power/selection.ml[88,3334+42]..[88,3334+46])
                                                      pattern (asmcomp/power/selection.ml[88,3334+46]..[88,3334+47]) ghost
                                                        Ppat_construct "[]" (asmcomp/power/selection.ml[88,3334+46]..[88,3334+47]) ghost
                                                        None
                                                    ]
                                            ]
                                    ]
                                  expression (asmcomp/power/selection.ml[89,3386+6]..[89,3386+47])
                                    Pexp_tuple
                                    [
                                      expression (asmcomp/power/selection.ml[89,3386+7]..[89,3386+26])
                                        Pexp_construct "Ispecific" (asmcomp/power/selection.ml[89,3386+7]..[89,3386+16])
                                        Some
                                          expression (asmcomp/power/selection.ml[89,3386+17]..[89,3386+26])
                                            Pexp_construct "Imultsubf" (asmcomp/power/selection.ml[89,3386+17]..[89,3386+26])
                                            None
                                      expression (asmcomp/power/selection.ml[89,3386+28]..[89,3386+46])
                                        Pexp_construct "::" (asmcomp/power/selection.ml[89,3386+29]..[89,3386+46]) ghost
                                        Some
                                          expression (asmcomp/power/selection.ml[89,3386+29]..[89,3386+46]) ghost
                                            Pexp_tuple
                                            [
                                              expression (asmcomp/power/selection.ml[89,3386+29]..[89,3386+33])
                                                Pexp_ident "arg1" (asmcomp/power/selection.ml[89,3386+29]..[89,3386+33])
                                              expression (asmcomp/power/selection.ml[89,3386+35]..[89,3386+46]) ghost
                                                Pexp_construct "::" (asmcomp/power/selection.ml[89,3386+35]..[89,3386+46]) ghost
                                                Some
                                                  expression (asmcomp/power/selection.ml[89,3386+35]..[89,3386+46]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (asmcomp/power/selection.ml[89,3386+35]..[89,3386+39])
                                                        Pexp_ident "arg2" (asmcomp/power/selection.ml[89,3386+35]..[89,3386+39])
                                                      expression (asmcomp/power/selection.ml[89,3386+41]..[89,3386+46]) ghost
                                                        Pexp_construct "::" (asmcomp/power/selection.ml[89,3386+41]..[89,3386+46]) ghost
                                                        Some
                                                          expression (asmcomp/power/selection.ml[89,3386+41]..[89,3386+46]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (asmcomp/power/selection.ml[89,3386+41]..[89,3386+45])
                                                                Pexp_ident "arg3" (asmcomp/power/selection.ml[89,3386+41]..[89,3386+45])
                                                              expression (asmcomp/power/selection.ml[89,3386+45]..[89,3386+46]) ghost
                                                                Pexp_construct "[]" (asmcomp/power/selection.ml[89,3386+45]..[89,3386+46]) ghost
                                                                None
                                                            ]
                                                    ]
                                            ]
                                    ]
                                <case>
                                  pattern (asmcomp/power/selection.ml[90,3434+4]..[90,3434+5])
                                    Ppat_any
                                  expression (asmcomp/power/selection.ml[91,3443+6]..[91,3443+40])
                                    Pexp_apply
                                    expression (asmcomp/power/selection.ml[91,3443+6]..[91,3443+28])
                                      Pexp_send "select_operation"
                                      expression (asmcomp/power/selection.ml[91,3443+6]..[91,3443+11])
                                        Pexp_ident "super" (asmcomp/power/selection.ml[91,3443+6]..[91,3443+11])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/selection.ml[91,3443+29]..[91,3443+31])
                                          Pexp_ident "op" (asmcomp/power/selection.ml[91,3443+29]..[91,3443+31])
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/selection.ml[91,3443+32]..[91,3443+36])
                                          Pexp_ident "args" (asmcomp/power/selection.ml[91,3443+32]..[91,3443+36])
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/selection.ml[91,3443+37]..[91,3443+40])
                                          Pexp_ident "dbg" (asmcomp/power/selection.ml[91,3443+37]..[91,3443+40])
                                    ]
                              ]
                      None
              ]
    ]
  structure_item (asmcomp/power/selection.ml[95,3490+0]..[96,3524+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/selection.ml[95,3490+4]..[95,3490+11])
          Ppat_var "fundecl" (asmcomp/power/selection.ml[95,3490+4]..[95,3490+11])
        expression (asmcomp/power/selection.ml[95,3490+12]..[96,3524+49]) ghost
          Pexp_fun
          Labelled "future_funcnames"
          None
          pattern (asmcomp/power/selection.ml[95,3490+13]..[95,3490+29])
            Ppat_var "future_funcnames" (asmcomp/power/selection.ml[95,3490+13]..[95,3490+29])
          expression (asmcomp/power/selection.ml[95,3490+30]..[96,3524+49]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/power/selection.ml[95,3490+30]..[95,3490+31])
              Ppat_var "f" (asmcomp/power/selection.ml[95,3490+30]..[95,3490+31])
            expression (asmcomp/power/selection.ml[96,3524+2]..[96,3524+49])
              Pexp_apply
              expression (asmcomp/power/selection.ml[96,3524+2]..[96,3524+29])
                Pexp_send "emit_fundecl"
                expression (asmcomp/power/selection.ml[96,3524+2]..[96,3524+16])
                  Pexp_new "selector" (asmcomp/power/selection.ml[96,3524+7]..[96,3524+15])
              [
                <arg>
                Labelled "future_funcnames"
                  expression (asmcomp/power/selection.ml[96,3524+31]..[96,3524+47])
                    Pexp_ident "future_funcnames" (asmcomp/power/selection.ml[96,3524+31]..[96,3524+47])
                <arg>
                Nolabel
                  expression (asmcomp/power/selection.ml[96,3524+48]..[96,3524+49])
                    Pexp_ident "f" (asmcomp/power/selection.ml[96,3524+48]..[96,3524+49])
              ]
    ]
]

