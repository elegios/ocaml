[
  structure_item (typing/includeclass.ml[18,1126+0]..[18,1126+10])
    Pstr_open Fresh
    module_expr (typing/includeclass.ml[18,1126+5]..[18,1126+10])
      Pmod_ident "Types" (typing/includeclass.ml[18,1126+5]..[18,1126+10])
  structure_item (typing/includeclass.ml[20,1138+0]..[21,1170+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includeclass.ml[20,1138+4]..[20,1138+15])
          Ppat_var "class_types" (typing/includeclass.ml[20,1138+4]..[20,1138+15])
        expression (typing/includeclass.ml[20,1138+16]..[21,1170+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includeclass.ml[20,1138+16]..[20,1138+19])
            Ppat_var "env" (typing/includeclass.ml[20,1138+16]..[20,1138+19])
          expression (typing/includeclass.ml[20,1138+20]..[21,1170+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includeclass.ml[20,1138+20]..[20,1138+24])
              Ppat_var "cty1" (typing/includeclass.ml[20,1138+20]..[20,1138+24])
            expression (typing/includeclass.ml[20,1138+25]..[21,1170+39]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includeclass.ml[20,1138+25]..[20,1138+29])
                Ppat_var "cty2" (typing/includeclass.ml[20,1138+25]..[20,1138+29])
              expression (typing/includeclass.ml[21,1170+2]..[21,1170+39])
                Pexp_apply
                expression (typing/includeclass.ml[21,1170+2]..[21,1170+25])
                  Pexp_ident "Ctype.match_class_types" (typing/includeclass.ml[21,1170+2]..[21,1170+25])
                [
                  <arg>
                  Nolabel
                    expression (typing/includeclass.ml[21,1170+26]..[21,1170+29])
                      Pexp_ident "env" (typing/includeclass.ml[21,1170+26]..[21,1170+29])
                  <arg>
                  Nolabel
                    expression (typing/includeclass.ml[21,1170+30]..[21,1170+34])
                      Pexp_ident "cty1" (typing/includeclass.ml[21,1170+30]..[21,1170+34])
                  <arg>
                  Nolabel
                    expression (typing/includeclass.ml[21,1170+35]..[21,1170+39])
                      Pexp_ident "cty2" (typing/includeclass.ml[21,1170+35]..[21,1170+39])
                ]
    ]
  structure_item (typing/includeclass.ml[23,1211+0]..[32,1509+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includeclass.ml[23,1211+4]..[23,1211+27])
          Ppat_var "class_type_declarations" (typing/includeclass.ml[23,1211+4]..[23,1211+27])
        expression (typing/includeclass.ml[23,1211+28]..[32,1509+35]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (typing/includeclass.ml[23,1211+29]..[23,1211+32])
            Ppat_var "loc" (typing/includeclass.ml[23,1211+29]..[23,1211+32])
          expression (typing/includeclass.ml[23,1211+33]..[32,1509+35]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includeclass.ml[23,1211+33]..[23,1211+36])
              Ppat_var "env" (typing/includeclass.ml[23,1211+33]..[23,1211+36])
            expression (typing/includeclass.ml[23,1211+37]..[32,1509+35]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includeclass.ml[23,1211+37]..[23,1211+41])
                Ppat_var "cty1" (typing/includeclass.ml[23,1211+37]..[23,1211+41])
              expression (typing/includeclass.ml[23,1211+42]..[32,1509+35]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/includeclass.ml[23,1211+42]..[23,1211+46])
                  Ppat_var "cty2" (typing/includeclass.ml[23,1211+42]..[23,1211+46])
                expression (typing/includeclass.ml[24,1260+2]..[32,1509+35])
                  Pexp_sequence
                  expression (typing/includeclass.ml[24,1260+2]..[29,1404+30])
                    Pexp_apply
                    expression (typing/includeclass.ml[24,1260+2]..[24,1260+43])
                      Pexp_ident "Builtin_attributes.check_alerts_inclusion" (typing/includeclass.ml[24,1260+2]..[24,1260+43])
                    [
                      <arg>
                      Labelled "def"
                        expression (typing/includeclass.ml[25,1304+9]..[25,1304+22])
                          Pexp_field
                          expression (typing/includeclass.ml[25,1304+9]..[25,1304+13])
                            Pexp_ident "cty1" (typing/includeclass.ml[25,1304+9]..[25,1304+13])
                          "clty_loc" (typing/includeclass.ml[25,1304+14]..[25,1304+22])
                      <arg>
                      Labelled "use"
                        expression (typing/includeclass.ml[26,1327+9]..[26,1327+22])
                          Pexp_field
                          expression (typing/includeclass.ml[26,1327+9]..[26,1327+13])
                            Pexp_ident "cty2" (typing/includeclass.ml[26,1327+9]..[26,1327+13])
                          "clty_loc" (typing/includeclass.ml[26,1327+14]..[26,1327+22])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[27,1350+4]..[27,1350+7])
                          Pexp_ident "loc" (typing/includeclass.ml[27,1350+4]..[27,1350+7])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[28,1358+4]..[28,1358+24])
                          Pexp_field
                          expression (typing/includeclass.ml[28,1358+4]..[28,1358+8])
                            Pexp_ident "cty1" (typing/includeclass.ml[28,1358+4]..[28,1358+8])
                          "clty_attributes" (typing/includeclass.ml[28,1358+9]..[28,1358+24])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[28,1358+25]..[28,1358+45])
                          Pexp_field
                          expression (typing/includeclass.ml[28,1358+25]..[28,1358+29])
                            Pexp_ident "cty2" (typing/includeclass.ml[28,1358+25]..[28,1358+29])
                          "clty_attributes" (typing/includeclass.ml[28,1358+30]..[28,1358+45])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[29,1404+4]..[29,1404+30])
                          Pexp_apply
                          expression (typing/includeclass.ml[29,1404+5]..[29,1404+14])
                            Pexp_ident "Path.last" (typing/includeclass.ml[29,1404+5]..[29,1404+14])
                          [
                            <arg>
                            Nolabel
                              expression (typing/includeclass.ml[29,1404+15]..[29,1404+29])
                                Pexp_field
                                expression (typing/includeclass.ml[29,1404+15]..[29,1404+19])
                                  Pexp_ident "cty1" (typing/includeclass.ml[29,1404+15]..[29,1404+19])
                                "clty_path" (typing/includeclass.ml[29,1404+20]..[29,1404+29])
                          ]
                    ]
                  expression (typing/includeclass.ml[30,1436+2]..[32,1509+35])
                    Pexp_apply
                    expression (typing/includeclass.ml[30,1436+2]..[30,1436+32])
                      Pexp_ident "Ctype.match_class_declarations" (typing/includeclass.ml[30,1436+2]..[30,1436+32])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[30,1436+33]..[30,1436+36])
                          Pexp_ident "env" (typing/includeclass.ml[30,1436+33]..[30,1436+36])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[31,1473+4]..[31,1473+20])
                          Pexp_field
                          expression (typing/includeclass.ml[31,1473+4]..[31,1473+8])
                            Pexp_ident "cty1" (typing/includeclass.ml[31,1473+4]..[31,1473+8])
                          "clty_params" (typing/includeclass.ml[31,1473+9]..[31,1473+20])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[31,1473+21]..[31,1473+35])
                          Pexp_field
                          expression (typing/includeclass.ml[31,1473+21]..[31,1473+25])
                            Pexp_ident "cty1" (typing/includeclass.ml[31,1473+21]..[31,1473+25])
                          "clty_type" (typing/includeclass.ml[31,1473+26]..[31,1473+35])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[32,1509+4]..[32,1509+20])
                          Pexp_field
                          expression (typing/includeclass.ml[32,1509+4]..[32,1509+8])
                            Pexp_ident "cty2" (typing/includeclass.ml[32,1509+4]..[32,1509+8])
                          "clty_params" (typing/includeclass.ml[32,1509+9]..[32,1509+20])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[32,1509+21]..[32,1509+35])
                          Pexp_field
                          expression (typing/includeclass.ml[32,1509+21]..[32,1509+25])
                            Pexp_ident "cty2" (typing/includeclass.ml[32,1509+21]..[32,1509+25])
                          "clty_type" (typing/includeclass.ml[32,1509+26]..[32,1509+35])
                    ]
    ]
  structure_item (typing/includeclass.ml[34,1546+0]..[41,1764+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includeclass.ml[34,1546+4]..[34,1546+22])
          Ppat_var "class_declarations" (typing/includeclass.ml[34,1546+4]..[34,1546+22])
        expression (typing/includeclass.ml[34,1546+23]..[41,1764+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includeclass.ml[34,1546+23]..[34,1546+26])
            Ppat_var "env" (typing/includeclass.ml[34,1546+23]..[34,1546+26])
          expression (typing/includeclass.ml[34,1546+27]..[41,1764+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includeclass.ml[34,1546+27]..[34,1546+31])
              Ppat_var "cty1" (typing/includeclass.ml[34,1546+27]..[34,1546+31])
            expression (typing/includeclass.ml[34,1546+32]..[41,1764+37]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/includeclass.ml[34,1546+32]..[34,1546+36])
                Ppat_var "cty2" (typing/includeclass.ml[34,1546+32]..[34,1546+36])
              expression (typing/includeclass.ml[35,1585+2]..[41,1764+37])
                Pexp_match
                expression (typing/includeclass.ml[35,1585+8]..[35,1585+34])
                  Pexp_tuple
                  [
                    expression (typing/includeclass.ml[35,1585+8]..[35,1585+20])
                      Pexp_field
                      expression (typing/includeclass.ml[35,1585+8]..[35,1585+12])
                        Pexp_ident "cty1" (typing/includeclass.ml[35,1585+8]..[35,1585+12])
                      "cty_new" (typing/includeclass.ml[35,1585+13]..[35,1585+20])
                    expression (typing/includeclass.ml[35,1585+22]..[35,1585+34])
                      Pexp_field
                      expression (typing/includeclass.ml[35,1585+22]..[35,1585+26])
                        Pexp_ident "cty2" (typing/includeclass.ml[35,1585+22]..[35,1585+26])
                      "cty_new" (typing/includeclass.ml[35,1585+27]..[35,1585+34])
                  ]
                [
                  <case>
                    pattern (typing/includeclass.ml[36,1625+4]..[36,1625+16])
                      Ppat_tuple
                      [
                        pattern (typing/includeclass.ml[36,1625+4]..[36,1625+8])
                          Ppat_construct "None" (typing/includeclass.ml[36,1625+4]..[36,1625+8])
                          None
                        pattern (typing/includeclass.ml[36,1625+10]..[36,1625+16])
                          Ppat_construct "Some" (typing/includeclass.ml[36,1625+10]..[36,1625+14])
                          Some
                            []
                            pattern (typing/includeclass.ml[36,1625+15]..[36,1625+16])
                              Ppat_any
                      ]
                    expression (typing/includeclass.ml[37,1645+6]..[37,1645+30])
                      Pexp_construct "::" (typing/includeclass.ml[37,1645+7]..[37,1645+30]) ghost
                      Some
                        expression (typing/includeclass.ml[37,1645+7]..[37,1645+30]) ghost
                          Pexp_tuple
                          [
                            expression (typing/includeclass.ml[37,1645+7]..[37,1645+29])
                              Pexp_construct "Ctype.CM_Virtual_class" (typing/includeclass.ml[37,1645+7]..[37,1645+29])
                              None
                            expression (typing/includeclass.ml[37,1645+29]..[37,1645+30]) ghost
                              Pexp_construct "[]" (typing/includeclass.ml[37,1645+29]..[37,1645+30]) ghost
                              None
                          ]
                  <case>
                    pattern (typing/includeclass.ml[38,1676+4]..[38,1676+5])
                      Ppat_any
                    expression (typing/includeclass.ml[39,1685+6]..[41,1764+37])
                      Pexp_apply
                      expression (typing/includeclass.ml[39,1685+6]..[39,1685+36])
                        Pexp_ident "Ctype.match_class_declarations" (typing/includeclass.ml[39,1685+6]..[39,1685+36])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includeclass.ml[39,1685+37]..[39,1685+40])
                            Pexp_ident "env" (typing/includeclass.ml[39,1685+37]..[39,1685+40])
                        <arg>
                        Nolabel
                          expression (typing/includeclass.ml[40,1726+8]..[40,1726+23])
                            Pexp_field
                            expression (typing/includeclass.ml[40,1726+8]..[40,1726+12])
                              Pexp_ident "cty1" (typing/includeclass.ml[40,1726+8]..[40,1726+12])
                            "cty_params" (typing/includeclass.ml[40,1726+13]..[40,1726+23])
                        <arg>
                        Nolabel
                          expression (typing/includeclass.ml[40,1726+24]..[40,1726+37])
                            Pexp_field
                            expression (typing/includeclass.ml[40,1726+24]..[40,1726+28])
                              Pexp_ident "cty1" (typing/includeclass.ml[40,1726+24]..[40,1726+28])
                            "cty_type" (typing/includeclass.ml[40,1726+29]..[40,1726+37])
                        <arg>
                        Nolabel
                          expression (typing/includeclass.ml[41,1764+8]..[41,1764+23])
                            Pexp_field
                            expression (typing/includeclass.ml[41,1764+8]..[41,1764+12])
                              Pexp_ident "cty2" (typing/includeclass.ml[41,1764+8]..[41,1764+12])
                            "cty_params" (typing/includeclass.ml[41,1764+13]..[41,1764+23])
                        <arg>
                        Nolabel
                          expression (typing/includeclass.ml[41,1764+24]..[41,1764+37])
                            Pexp_field
                            expression (typing/includeclass.ml[41,1764+24]..[41,1764+28])
                              Pexp_ident "cty2" (typing/includeclass.ml[41,1764+24]..[41,1764+28])
                            "cty_type" (typing/includeclass.ml[41,1764+29]..[41,1764+37])
                      ]
                ]
    ]
  structure_item (typing/includeclass.ml[43,1803+0]..[43,1803+11])
    Pstr_open Fresh
    module_expr (typing/includeclass.ml[43,1803+5]..[43,1803+11])
      Pmod_ident "Format" (typing/includeclass.ml[43,1803+5]..[43,1803+11])
  structure_item (typing/includeclass.ml[44,1815+0]..[44,1815+10])
    Pstr_open Fresh
    module_expr (typing/includeclass.ml[44,1815+5]..[44,1815+10])
      Pmod_ident "Ctype" (typing/includeclass.ml[44,1815+5]..[44,1815+10])
  structure_item (typing/includeclass.ml[52,1928+0]..[109,4373+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includeclass.ml[52,1928+4]..[52,1928+15])
          Ppat_var "include_err" (typing/includeclass.ml[52,1928+4]..[52,1928+15])
        expression (typing/includeclass.ml[52,1928+16]..[109,4373+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includeclass.ml[52,1928+16]..[52,1928+20])
            Ppat_var "mode" (typing/includeclass.ml[52,1928+16]..[52,1928+20])
          expression (typing/includeclass.ml[52,1928+21]..[109,4373+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includeclass.ml[52,1928+21]..[52,1928+24])
              Ppat_var "ppf" (typing/includeclass.ml[52,1928+21]..[52,1928+24])
            expression (typing/includeclass.ml[53,1955+2]..[109,4373+70])
              Pexp_function
              [
                <case>
                  pattern (typing/includeclass.ml[54,1966+4]..[54,1966+20])
                    Ppat_construct "CM_Virtual_class" (typing/includeclass.ml[54,1966+4]..[54,1966+20])
                    None
                  expression (typing/includeclass.ml[55,1990+6]..[55,1990+70])
                    Pexp_apply
                    expression (typing/includeclass.ml[55,1990+6]..[55,1990+13])
                      Pexp_ident "fprintf" (typing/includeclass.ml[55,1990+6]..[55,1990+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[55,1990+14]..[55,1990+17])
                          Pexp_ident "ppf" (typing/includeclass.ml[55,1990+14]..[55,1990+17])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[55,1990+18]..[55,1990+70])
                          Pexp_constant PConst_string("A class cannot be changed from virtual to concrete",(typing/includeclass.ml[55,1990+19]..[55,1990+69]),None)
                    ]
                <case>
                  pattern (typing/includeclass.ml[56,2061+4]..[56,2061+33])
                    Ppat_construct "CM_Parameter_arity_mismatch" (typing/includeclass.ml[56,2061+4]..[56,2061+31])
                    Some
                      []
                      pattern (typing/includeclass.ml[56,2061+32]..[56,2061+33])
                        Ppat_any
                  expression (typing/includeclass.ml[57,2098+6]..[58,2116+68])
                    Pexp_apply
                    expression (typing/includeclass.ml[57,2098+6]..[57,2098+13])
                      Pexp_ident "fprintf" (typing/includeclass.ml[57,2098+6]..[57,2098+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[57,2098+14]..[57,2098+17])
                          Pexp_ident "ppf" (typing/includeclass.ml[57,2098+14]..[57,2098+17])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[58,2116+8]..[58,2116+68])
                          Pexp_constant PConst_string("The classes do not have the same number of type parameters",(typing/includeclass.ml[58,2116+9]..[58,2116+67]),None)
                    ]
                <case>
                  pattern (typing/includeclass.ml[59,2185+4]..[59,2185+41])
                    Ppat_construct "CM_Type_parameter_mismatch" (typing/includeclass.ml[59,2185+4]..[59,2185+30])
                    Some
                      []
                      pattern (typing/includeclass.ml[59,2185+31]..[59,2185+41])
                        Ppat_tuple
                        [
                          pattern (typing/includeclass.ml[59,2185+32]..[59,2185+35])
                            Ppat_var "env" (typing/includeclass.ml[59,2185+32]..[59,2185+35])
                          pattern (typing/includeclass.ml[59,2185+37]..[59,2185+40])
                            Ppat_var "err" (typing/includeclass.ml[59,2185+37]..[59,2185+40])
                        ]
                  expression (typing/includeclass.ml[60,2230+6]..[64,2385+53])
                    Pexp_apply
                    expression (typing/includeclass.ml[60,2230+6]..[60,2230+36])
                      Pexp_ident "Printtyp.report_equality_error" (typing/includeclass.ml[60,2230+6]..[60,2230+36])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[60,2230+37]..[60,2230+40])
                          Pexp_ident "ppf" (typing/includeclass.ml[60,2230+37]..[60,2230+40])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[60,2230+41]..[60,2230+45])
                          Pexp_ident "mode" (typing/includeclass.ml[60,2230+41]..[60,2230+45])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[60,2230+46]..[60,2230+49])
                          Pexp_ident "env" (typing/includeclass.ml[60,2230+46]..[60,2230+49])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[60,2230+50]..[60,2230+53])
                          Pexp_ident "err" (typing/includeclass.ml[60,2230+50]..[60,2230+53])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[61,2284+8]..[62,2309+50])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/includeclass.ml[61,2284+18]..[61,2284+21])
                                Ppat_var "ppf" (typing/includeclass.ml[61,2284+18]..[61,2284+21])
                              expression (typing/includeclass.ml[62,2309+10]..[62,2309+49])
                                Pexp_apply
                                expression (typing/includeclass.ml[62,2309+10]..[62,2309+17])
                                  Pexp_ident "fprintf" (typing/includeclass.ml[62,2309+10]..[62,2309+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[62,2309+18]..[62,2309+21])
                                      Pexp_ident "ppf" (typing/includeclass.ml[62,2309+18]..[62,2309+21])
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[62,2309+22]..[62,2309+49])
                                      Pexp_constant PConst_string("A type parameter has type",(typing/includeclass.ml[62,2309+23]..[62,2309+48]),None)
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[63,2360+8]..[64,2385+53])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/includeclass.ml[63,2360+18]..[63,2360+21])
                                Ppat_var "ppf" (typing/includeclass.ml[63,2360+18]..[63,2360+21])
                              expression (typing/includeclass.ml[64,2385+10]..[64,2385+52])
                                Pexp_apply
                                expression (typing/includeclass.ml[64,2385+10]..[64,2385+17])
                                  Pexp_ident "fprintf" (typing/includeclass.ml[64,2385+10]..[64,2385+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[64,2385+18]..[64,2385+21])
                                      Pexp_ident "ppf" (typing/includeclass.ml[64,2385+18]..[64,2385+21])
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[64,2385+22]..[64,2385+52])
                                      Pexp_constant PConst_string("but is expected to have type",(typing/includeclass.ml[64,2385+23]..[64,2385+51]),None)
                                ]
                          ]
                    ]
                <case>
                  pattern (typing/includeclass.ml[65,2439+4]..[65,2439+44])
                    Ppat_construct "CM_Class_type_mismatch" (typing/includeclass.ml[65,2439+4]..[65,2439+26])
                    Some
                      []
                      pattern (typing/includeclass.ml[65,2439+27]..[65,2439+44])
                        Ppat_tuple
                        [
                          pattern (typing/includeclass.ml[65,2439+28]..[65,2439+31])
                            Ppat_var "env" (typing/includeclass.ml[65,2439+28]..[65,2439+31])
                          pattern (typing/includeclass.ml[65,2439+33]..[65,2439+37])
                            Ppat_var "cty1" (typing/includeclass.ml[65,2439+33]..[65,2439+37])
                          pattern (typing/includeclass.ml[65,2439+39]..[65,2439+43])
                            Ppat_var "cty2" (typing/includeclass.ml[65,2439+39]..[65,2439+43])
                        ]
                  expression (typing/includeclass.ml[66,2487+6]..[71,2700+35])
                    Pexp_apply
                    expression (typing/includeclass.ml[66,2487+6]..[66,2487+32])
                      Pexp_ident "Printtyp.wrap_printing_env" (typing/includeclass.ml[66,2487+6]..[66,2487+32])
                    [
                      <arg>
                      Labelled "error"
                        expression (typing/includeclass.ml[66,2487+40]..[66,2487+44])
                          Pexp_construct "true" (typing/includeclass.ml[66,2487+40]..[66,2487+44])
                          None
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[66,2487+45]..[66,2487+48])
                          Pexp_ident "env" (typing/includeclass.ml[66,2487+45]..[66,2487+48])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[66,2487+49]..[71,2700+35])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includeclass.ml[66,2487+54]..[66,2487+56])
                            Ppat_construct "()" (typing/includeclass.ml[66,2487+54]..[66,2487+56])
                            None
                          expression (typing/includeclass.ml[67,2547+8]..[71,2700+34])
                            Pexp_apply
                            expression (typing/includeclass.ml[67,2547+8]..[67,2547+15])
                              Pexp_ident "fprintf" (typing/includeclass.ml[67,2547+8]..[67,2547+15])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includeclass.ml[67,2547+16]..[67,2547+19])
                                  Pexp_ident "ppf" (typing/includeclass.ml[67,2547+16]..[67,2547+19])
                              <arg>
                              Nolabel
                                expression (typing/includeclass.ml[68,2567+10]..[68,2567+52])
                                  Pexp_constant PConst_string("@[The class type@;<1 2>%a@ %s@;<1 2>%a@]",(typing/includeclass.ml[68,2567+11]..[68,2567+51]),None)
                              <arg>
                              Nolabel
                                expression (typing/includeclass.ml[69,2620+10]..[69,2620+29])
                                  Pexp_ident "Printtyp.class_type" (typing/includeclass.ml[69,2620+10]..[69,2620+29])
                              <arg>
                              Nolabel
                                expression (typing/includeclass.ml[69,2620+30]..[69,2620+34])
                                  Pexp_ident "cty1" (typing/includeclass.ml[69,2620+30]..[69,2620+34])
                              <arg>
                              Nolabel
                                expression (typing/includeclass.ml[70,2655+10]..[70,2655+44])
                                  Pexp_constant PConst_string("is not matched by the class type",(typing/includeclass.ml[70,2655+11]..[70,2655+43]),None)
                              <arg>
                              Nolabel
                                expression (typing/includeclass.ml[71,2700+10]..[71,2700+29])
                                  Pexp_ident "Printtyp.class_type" (typing/includeclass.ml[71,2700+10]..[71,2700+29])
                              <arg>
                              Nolabel
                                expression (typing/includeclass.ml[71,2700+30]..[71,2700+34])
                                  Pexp_ident "cty2" (typing/includeclass.ml[71,2700+30]..[71,2700+34])
                            ]
                    ]
                <case>
                  pattern (typing/includeclass.ml[72,2736+4]..[72,2736+36])
                    Ppat_construct "CM_Parameter_mismatch" (typing/includeclass.ml[72,2736+4]..[72,2736+25])
                    Some
                      []
                      pattern (typing/includeclass.ml[72,2736+26]..[72,2736+36])
                        Ppat_tuple
                        [
                          pattern (typing/includeclass.ml[72,2736+27]..[72,2736+30])
                            Ppat_var "env" (typing/includeclass.ml[72,2736+27]..[72,2736+30])
                          pattern (typing/includeclass.ml[72,2736+32]..[72,2736+35])
                            Ppat_var "err" (typing/includeclass.ml[72,2736+32]..[72,2736+35])
                        ]
                  expression (typing/includeclass.ml[73,2776+6]..[77,2925+53])
                    Pexp_apply
                    expression (typing/includeclass.ml[73,2776+6]..[73,2776+35])
                      Pexp_ident "Printtyp.report_moregen_error" (typing/includeclass.ml[73,2776+6]..[73,2776+35])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[73,2776+36]..[73,2776+39])
                          Pexp_ident "ppf" (typing/includeclass.ml[73,2776+36]..[73,2776+39])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[73,2776+40]..[73,2776+44])
                          Pexp_ident "mode" (typing/includeclass.ml[73,2776+40]..[73,2776+44])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[73,2776+45]..[73,2776+48])
                          Pexp_ident "env" (typing/includeclass.ml[73,2776+45]..[73,2776+48])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[73,2776+49]..[73,2776+52])
                          Pexp_ident "err" (typing/includeclass.ml[73,2776+49]..[73,2776+52])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[74,2829+8]..[75,2854+45])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/includeclass.ml[74,2829+18]..[74,2829+21])
                                Ppat_var "ppf" (typing/includeclass.ml[74,2829+18]..[74,2829+21])
                              expression (typing/includeclass.ml[75,2854+10]..[75,2854+44])
                                Pexp_apply
                                expression (typing/includeclass.ml[75,2854+10]..[75,2854+17])
                                  Pexp_ident "fprintf" (typing/includeclass.ml[75,2854+10]..[75,2854+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[75,2854+18]..[75,2854+21])
                                      Pexp_ident "ppf" (typing/includeclass.ml[75,2854+18]..[75,2854+21])
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[75,2854+22]..[75,2854+44])
                                      Pexp_constant PConst_string("A parameter has type",(typing/includeclass.ml[75,2854+23]..[75,2854+43]),None)
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[76,2900+8]..[77,2925+53])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/includeclass.ml[76,2900+18]..[76,2900+21])
                                Ppat_var "ppf" (typing/includeclass.ml[76,2900+18]..[76,2900+21])
                              expression (typing/includeclass.ml[77,2925+10]..[77,2925+52])
                                Pexp_apply
                                expression (typing/includeclass.ml[77,2925+10]..[77,2925+17])
                                  Pexp_ident "fprintf" (typing/includeclass.ml[77,2925+10]..[77,2925+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[77,2925+18]..[77,2925+21])
                                      Pexp_ident "ppf" (typing/includeclass.ml[77,2925+18]..[77,2925+21])
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[77,2925+22]..[77,2925+52])
                                      Pexp_constant PConst_string("but is expected to have type",(typing/includeclass.ml[77,2925+23]..[77,2925+51]),None)
                                ]
                          ]
                    ]
                <case>
                  pattern (typing/includeclass.ml[78,2979+4]..[78,2979+40])
                    Ppat_construct "CM_Val_type_mismatch" (typing/includeclass.ml[78,2979+4]..[78,2979+24])
                    Some
                      []
                      pattern (typing/includeclass.ml[78,2979+25]..[78,2979+40])
                        Ppat_tuple
                        [
                          pattern (typing/includeclass.ml[78,2979+26]..[78,2979+29])
                            Ppat_var "lab" (typing/includeclass.ml[78,2979+26]..[78,2979+29])
                          pattern (typing/includeclass.ml[78,2979+31]..[78,2979+34])
                            Ppat_var "env" (typing/includeclass.ml[78,2979+31]..[78,2979+34])
                          pattern (typing/includeclass.ml[78,2979+36]..[78,2979+39])
                            Ppat_var "err" (typing/includeclass.ml[78,2979+36]..[78,2979+39])
                        ]
                  expression (typing/includeclass.ml[79,3023+6]..[83,3193+53])
                    Pexp_apply
                    expression (typing/includeclass.ml[79,3023+6]..[79,3023+38])
                      Pexp_ident "Printtyp.report_comparison_error" (typing/includeclass.ml[79,3023+6]..[79,3023+38])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[79,3023+39]..[79,3023+42])
                          Pexp_ident "ppf" (typing/includeclass.ml[79,3023+39]..[79,3023+42])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[79,3023+43]..[79,3023+47])
                          Pexp_ident "mode" (typing/includeclass.ml[79,3023+43]..[79,3023+47])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[79,3023+48]..[79,3023+51])
                          Pexp_ident "env" (typing/includeclass.ml[79,3023+48]..[79,3023+51])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[79,3023+52]..[79,3023+55])
                          Pexp_ident "err" (typing/includeclass.ml[79,3023+52]..[79,3023+55])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[80,3079+8]..[81,3104+63])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/includeclass.ml[80,3079+18]..[80,3079+21])
                                Ppat_var "ppf" (typing/includeclass.ml[80,3079+18]..[80,3079+21])
                              expression (typing/includeclass.ml[81,3104+10]..[81,3104+62])
                                Pexp_apply
                                expression (typing/includeclass.ml[81,3104+10]..[81,3104+17])
                                  Pexp_ident "fprintf" (typing/includeclass.ml[81,3104+10]..[81,3104+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[81,3104+18]..[81,3104+21])
                                      Pexp_ident "ppf" (typing/includeclass.ml[81,3104+18]..[81,3104+21])
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[81,3104+22]..[81,3104+58])
                                      Pexp_constant PConst_string("The instance variable %s@ has type",(typing/includeclass.ml[81,3104+23]..[81,3104+57]),None)
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[81,3104+59]..[81,3104+62])
                                      Pexp_ident "lab" (typing/includeclass.ml[81,3104+59]..[81,3104+62])
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[82,3168+8]..[83,3193+53])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/includeclass.ml[82,3168+18]..[82,3168+21])
                                Ppat_var "ppf" (typing/includeclass.ml[82,3168+18]..[82,3168+21])
                              expression (typing/includeclass.ml[83,3193+10]..[83,3193+52])
                                Pexp_apply
                                expression (typing/includeclass.ml[83,3193+10]..[83,3193+17])
                                  Pexp_ident "fprintf" (typing/includeclass.ml[83,3193+10]..[83,3193+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[83,3193+18]..[83,3193+21])
                                      Pexp_ident "ppf" (typing/includeclass.ml[83,3193+18]..[83,3193+21])
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[83,3193+22]..[83,3193+52])
                                      Pexp_constant PConst_string("but is expected to have type",(typing/includeclass.ml[83,3193+23]..[83,3193+51]),None)
                                ]
                          ]
                    ]
                <case>
                  pattern (typing/includeclass.ml[84,3247+4]..[84,3247+41])
                    Ppat_construct "CM_Meth_type_mismatch" (typing/includeclass.ml[84,3247+4]..[84,3247+25])
                    Some
                      []
                      pattern (typing/includeclass.ml[84,3247+26]..[84,3247+41])
                        Ppat_tuple
                        [
                          pattern (typing/includeclass.ml[84,3247+27]..[84,3247+30])
                            Ppat_var "lab" (typing/includeclass.ml[84,3247+27]..[84,3247+30])
                          pattern (typing/includeclass.ml[84,3247+32]..[84,3247+35])
                            Ppat_var "env" (typing/includeclass.ml[84,3247+32]..[84,3247+35])
                          pattern (typing/includeclass.ml[84,3247+37]..[84,3247+40])
                            Ppat_var "err" (typing/includeclass.ml[84,3247+37]..[84,3247+40])
                        ]
                  expression (typing/includeclass.ml[85,3292+6]..[89,3451+53])
                    Pexp_apply
                    expression (typing/includeclass.ml[85,3292+6]..[85,3292+38])
                      Pexp_ident "Printtyp.report_comparison_error" (typing/includeclass.ml[85,3292+6]..[85,3292+38])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[85,3292+39]..[85,3292+42])
                          Pexp_ident "ppf" (typing/includeclass.ml[85,3292+39]..[85,3292+42])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[85,3292+43]..[85,3292+47])
                          Pexp_ident "mode" (typing/includeclass.ml[85,3292+43]..[85,3292+47])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[85,3292+48]..[85,3292+51])
                          Pexp_ident "env" (typing/includeclass.ml[85,3292+48]..[85,3292+51])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[85,3292+52]..[85,3292+55])
                          Pexp_ident "err" (typing/includeclass.ml[85,3292+52]..[85,3292+55])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[86,3348+8]..[87,3373+52])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/includeclass.ml[86,3348+18]..[86,3348+21])
                                Ppat_var "ppf" (typing/includeclass.ml[86,3348+18]..[86,3348+21])
                              expression (typing/includeclass.ml[87,3373+10]..[87,3373+51])
                                Pexp_apply
                                expression (typing/includeclass.ml[87,3373+10]..[87,3373+17])
                                  Pexp_ident "fprintf" (typing/includeclass.ml[87,3373+10]..[87,3373+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[87,3373+18]..[87,3373+21])
                                      Pexp_ident "ppf" (typing/includeclass.ml[87,3373+18]..[87,3373+21])
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[87,3373+22]..[87,3373+47])
                                      Pexp_constant PConst_string("The method %s@ has type",(typing/includeclass.ml[87,3373+23]..[87,3373+46]),None)
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[87,3373+48]..[87,3373+51])
                                      Pexp_ident "lab" (typing/includeclass.ml[87,3373+48]..[87,3373+51])
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[88,3426+8]..[89,3451+53])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/includeclass.ml[88,3426+18]..[88,3426+21])
                                Ppat_var "ppf" (typing/includeclass.ml[88,3426+18]..[88,3426+21])
                              expression (typing/includeclass.ml[89,3451+10]..[89,3451+52])
                                Pexp_apply
                                expression (typing/includeclass.ml[89,3451+10]..[89,3451+17])
                                  Pexp_ident "fprintf" (typing/includeclass.ml[89,3451+10]..[89,3451+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[89,3451+18]..[89,3451+21])
                                      Pexp_ident "ppf" (typing/includeclass.ml[89,3451+18]..[89,3451+21])
                                  <arg>
                                  Nolabel
                                    expression (typing/includeclass.ml[89,3451+22]..[89,3451+52])
                                      Pexp_constant PConst_string("but is expected to have type",(typing/includeclass.ml[89,3451+23]..[89,3451+51]),None)
                                ]
                          ]
                    ]
                <case>
                  pattern (typing/includeclass.ml[90,3505+4]..[90,3505+28])
                    Ppat_construct "CM_Non_mutable_value" (typing/includeclass.ml[90,3505+4]..[90,3505+24])
                    Some
                      []
                      pattern (typing/includeclass.ml[90,3505+25]..[90,3505+28])
                        Ppat_var "lab" (typing/includeclass.ml[90,3505+25]..[90,3505+28])
                  expression (typing/includeclass.ml[91,3537+6]..[92,3555+75])
                    Pexp_apply
                    expression (typing/includeclass.ml[91,3537+6]..[91,3537+13])
                      Pexp_ident "fprintf" (typing/includeclass.ml[91,3537+6]..[91,3537+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[91,3537+14]..[91,3537+17])
                          Pexp_ident "ppf" (typing/includeclass.ml[91,3537+14]..[91,3537+17])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[92,3555+7]..[92,3555+71])
                          Pexp_constant PConst_string("@[The non-mutable instance variable %s cannot become mutable@]",(typing/includeclass.ml[92,3555+8]..[92,3555+70]),None)
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[92,3555+72]..[92,3555+75])
                          Pexp_ident "lab" (typing/includeclass.ml[92,3555+72]..[92,3555+75])
                    ]
                <case>
                  pattern (typing/includeclass.ml[93,3631+4]..[93,3631+29])
                    Ppat_construct "CM_Non_concrete_value" (typing/includeclass.ml[93,3631+4]..[93,3631+25])
                    Some
                      []
                      pattern (typing/includeclass.ml[93,3631+26]..[93,3631+29])
                        Ppat_var "lab" (typing/includeclass.ml[93,3631+26]..[93,3631+29])
                  expression (typing/includeclass.ml[94,3664+6]..[95,3682+72])
                    Pexp_apply
                    expression (typing/includeclass.ml[94,3664+6]..[94,3664+13])
                      Pexp_ident "fprintf" (typing/includeclass.ml[94,3664+6]..[94,3664+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[94,3664+14]..[94,3664+17])
                          Pexp_ident "ppf" (typing/includeclass.ml[94,3664+14]..[94,3664+17])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[95,3682+7]..[95,3682+68])
                          Pexp_constant PConst_string("@[The virtual instance variable %s cannot become concrete@]",(typing/includeclass.ml[95,3682+8]..[95,3682+67]),None)
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[95,3682+69]..[95,3682+72])
                          Pexp_ident "lab" (typing/includeclass.ml[95,3682+69]..[95,3682+72])
                    ]
                <case>
                  pattern (typing/includeclass.ml[96,3755+4]..[96,3755+24])
                    Ppat_construct "CM_Missing_value" (typing/includeclass.ml[96,3755+4]..[96,3755+20])
                    Some
                      []
                      pattern (typing/includeclass.ml[96,3755+21]..[96,3755+24])
                        Ppat_var "lab" (typing/includeclass.ml[96,3755+21]..[96,3755+24])
                  expression (typing/includeclass.ml[97,3783+6]..[97,3783+76])
                    Pexp_apply
                    expression (typing/includeclass.ml[97,3783+6]..[97,3783+13])
                      Pexp_ident "fprintf" (typing/includeclass.ml[97,3783+6]..[97,3783+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[97,3783+14]..[97,3783+17])
                          Pexp_ident "ppf" (typing/includeclass.ml[97,3783+14]..[97,3783+17])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[97,3783+18]..[97,3783+72])
                          Pexp_constant PConst_string("@[The first class type has no instance variable %s@]",(typing/includeclass.ml[97,3783+19]..[97,3783+71]),None)
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[97,3783+73]..[97,3783+76])
                          Pexp_ident "lab" (typing/includeclass.ml[97,3783+73]..[97,3783+76])
                    ]
                <case>
                  pattern (typing/includeclass.ml[98,3860+4]..[98,3860+25])
                    Ppat_construct "CM_Missing_method" (typing/includeclass.ml[98,3860+4]..[98,3860+21])
                    Some
                      []
                      pattern (typing/includeclass.ml[98,3860+22]..[98,3860+25])
                        Ppat_var "lab" (typing/includeclass.ml[98,3860+22]..[98,3860+25])
                  expression (typing/includeclass.ml[99,3889+6]..[99,3889+65])
                    Pexp_apply
                    expression (typing/includeclass.ml[99,3889+6]..[99,3889+13])
                      Pexp_ident "fprintf" (typing/includeclass.ml[99,3889+6]..[99,3889+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[99,3889+14]..[99,3889+17])
                          Pexp_ident "ppf" (typing/includeclass.ml[99,3889+14]..[99,3889+17])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[99,3889+18]..[99,3889+61])
                          Pexp_constant PConst_string("@[The first class type has no method %s@]",(typing/includeclass.ml[99,3889+19]..[99,3889+60]),None)
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[99,3889+62]..[99,3889+65])
                          Pexp_ident "lab" (typing/includeclass.ml[99,3889+62]..[99,3889+65])
                    ]
                <case>
                  pattern (typing/includeclass.ml[100,3955+4]..[100,3955+22])
                    Ppat_construct "CM_Hide_public" (typing/includeclass.ml[100,3955+4]..[100,3955+18])
                    Some
                      []
                      pattern (typing/includeclass.ml[100,3955+19]..[100,3955+22])
                        Ppat_var "lab" (typing/includeclass.ml[100,3955+19]..[100,3955+22])
                  expression (typing/includeclass.ml[101,3981+5]..[101,3981+64])
                    Pexp_apply
                    expression (typing/includeclass.ml[101,3981+5]..[101,3981+12])
                      Pexp_ident "fprintf" (typing/includeclass.ml[101,3981+5]..[101,3981+12])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[101,3981+13]..[101,3981+16])
                          Pexp_ident "ppf" (typing/includeclass.ml[101,3981+13]..[101,3981+16])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[101,3981+17]..[101,3981+60])
                          Pexp_constant PConst_string("@[The public method %s cannot be hidden@]",(typing/includeclass.ml[101,3981+18]..[101,3981+59]),None)
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[101,3981+61]..[101,3981+64])
                          Pexp_ident "lab" (typing/includeclass.ml[101,3981+61]..[101,3981+64])
                    ]
                <case>
                  pattern (typing/includeclass.ml[102,4046+4]..[102,4046+28])
                    Ppat_construct "CM_Hide_virtual" (typing/includeclass.ml[102,4046+4]..[102,4046+19])
                    Some
                      []
                      pattern (typing/includeclass.ml[102,4046+20]..[102,4046+28])
                        Ppat_tuple
                        [
                          pattern (typing/includeclass.ml[102,4046+21]..[102,4046+22])
                            Ppat_var "k" (typing/includeclass.ml[102,4046+21]..[102,4046+22])
                          pattern (typing/includeclass.ml[102,4046+24]..[102,4046+27])
                            Ppat_var "lab" (typing/includeclass.ml[102,4046+24]..[102,4046+27])
                        ]
                  expression (typing/includeclass.ml[103,4078+6]..[103,4078+64])
                    Pexp_apply
                    expression (typing/includeclass.ml[103,4078+6]..[103,4078+13])
                      Pexp_ident "fprintf" (typing/includeclass.ml[103,4078+6]..[103,4078+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[103,4078+14]..[103,4078+17])
                          Pexp_ident "ppf" (typing/includeclass.ml[103,4078+14]..[103,4078+17])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[103,4078+18]..[103,4078+58])
                          Pexp_constant PConst_string("@[The virtual %s %s cannot be hidden@]",(typing/includeclass.ml[103,4078+19]..[103,4078+57]),None)
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[103,4078+59]..[103,4078+60])
                          Pexp_ident "k" (typing/includeclass.ml[103,4078+59]..[103,4078+60])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[103,4078+61]..[103,4078+64])
                          Pexp_ident "lab" (typing/includeclass.ml[103,4078+61]..[103,4078+64])
                    ]
                <case>
                  pattern (typing/includeclass.ml[104,4143+4]..[104,4143+24])
                    Ppat_construct "CM_Public_method" (typing/includeclass.ml[104,4143+4]..[104,4143+20])
                    Some
                      []
                      pattern (typing/includeclass.ml[104,4143+21]..[104,4143+24])
                        Ppat_var "lab" (typing/includeclass.ml[104,4143+21]..[104,4143+24])
                  expression (typing/includeclass.ml[105,4171+6]..[105,4171+70])
                    Pexp_apply
                    expression (typing/includeclass.ml[105,4171+6]..[105,4171+13])
                      Pexp_ident "fprintf" (typing/includeclass.ml[105,4171+6]..[105,4171+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[105,4171+14]..[105,4171+17])
                          Pexp_ident "ppf" (typing/includeclass.ml[105,4171+14]..[105,4171+17])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[105,4171+18]..[105,4171+66])
                          Pexp_constant PConst_string("@[The public method %s cannot become private@]",(typing/includeclass.ml[105,4171+19]..[105,4171+65]),None)
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[105,4171+67]..[105,4171+70])
                          Pexp_ident "lab" (typing/includeclass.ml[105,4171+67]..[105,4171+70])
                    ]
                <case>
                  pattern (typing/includeclass.ml[106,4242+4]..[106,4242+25])
                    Ppat_construct "CM_Virtual_method" (typing/includeclass.ml[106,4242+4]..[106,4242+21])
                    Some
                      []
                      pattern (typing/includeclass.ml[106,4242+22]..[106,4242+25])
                        Ppat_var "lab" (typing/includeclass.ml[106,4242+22]..[106,4242+25])
                  expression (typing/includeclass.ml[107,4271+6]..[107,4271+72])
                    Pexp_apply
                    expression (typing/includeclass.ml[107,4271+6]..[107,4271+13])
                      Pexp_ident "fprintf" (typing/includeclass.ml[107,4271+6]..[107,4271+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[107,4271+14]..[107,4271+17])
                          Pexp_ident "ppf" (typing/includeclass.ml[107,4271+14]..[107,4271+17])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[107,4271+18]..[107,4271+68])
                          Pexp_constant PConst_string("@[The virtual method %s cannot become concrete@]",(typing/includeclass.ml[107,4271+19]..[107,4271+67]),None)
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[107,4271+69]..[107,4271+72])
                          Pexp_ident "lab" (typing/includeclass.ml[107,4271+69]..[107,4271+72])
                    ]
                <case>
                  pattern (typing/includeclass.ml[108,4344+4]..[108,4344+25])
                    Ppat_construct "CM_Private_method" (typing/includeclass.ml[108,4344+4]..[108,4344+21])
                    Some
                      []
                      pattern (typing/includeclass.ml[108,4344+22]..[108,4344+25])
                        Ppat_var "lab" (typing/includeclass.ml[108,4344+22]..[108,4344+25])
                  expression (typing/includeclass.ml[109,4373+6]..[109,4373+70])
                    Pexp_apply
                    expression (typing/includeclass.ml[109,4373+6]..[109,4373+13])
                      Pexp_ident "fprintf" (typing/includeclass.ml[109,4373+6]..[109,4373+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[109,4373+14]..[109,4373+17])
                          Pexp_ident "ppf" (typing/includeclass.ml[109,4373+14]..[109,4373+17])
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[109,4373+18]..[109,4373+66])
                          Pexp_constant PConst_string("@[The private method %s cannot become public@]",(typing/includeclass.ml[109,4373+19]..[109,4373+65]),None)
                      <arg>
                      Nolabel
                        expression (typing/includeclass.ml[109,4373+67]..[109,4373+70])
                          Pexp_ident "lab" (typing/includeclass.ml[109,4373+67]..[109,4373+70])
                    ]
              ]
    ]
  structure_item (typing/includeclass.ml[111,4445+0]..[116,4628+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/includeclass.ml[111,4445+4]..[111,4445+16])
          Ppat_var "report_error" (typing/includeclass.ml[111,4445+4]..[111,4445+16])
        expression (typing/includeclass.ml[111,4445+17]..[116,4628+70]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/includeclass.ml[111,4445+17]..[111,4445+21])
            Ppat_var "mode" (typing/includeclass.ml[111,4445+17]..[111,4445+21])
          expression (typing/includeclass.ml[111,4445+22]..[116,4628+70]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/includeclass.ml[111,4445+22]..[111,4445+25])
              Ppat_var "ppf" (typing/includeclass.ml[111,4445+22]..[111,4445+25])
            expression (typing/includeclass.ml[111,4445+28]..[116,4628+70])
              Pexp_function
              [
                <case>
                  pattern (typing/includeclass.ml[112,4482+5]..[112,4482+7])
                    Ppat_construct "[]" (typing/includeclass.ml[112,4482+5]..[112,4482+7])
                    None
                  expression (typing/includeclass.ml[112,4482+11]..[112,4482+13])
                    Pexp_construct "()" (typing/includeclass.ml[112,4482+11]..[112,4482+13])
                    None
                <case>
                  pattern (typing/includeclass.ml[113,4496+4]..[113,4496+15])
                    Ppat_construct "::" (typing/includeclass.ml[113,4496+8]..[113,4496+10])
                    Some
                      []
                      pattern (typing/includeclass.ml[113,4496+4]..[113,4496+15]) ghost
                        Ppat_tuple
                        [
                          pattern (typing/includeclass.ml[113,4496+4]..[113,4496+7])
                            Ppat_var "err" (typing/includeclass.ml[113,4496+4]..[113,4496+7])
                          pattern (typing/includeclass.ml[113,4496+11]..[113,4496+15])
                            Ppat_var "errs" (typing/includeclass.ml[113,4496+11]..[113,4496+15])
                        ]
                  expression (typing/includeclass.ml[114,4515+6]..[116,4628+70])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/includeclass.ml[114,4515+10]..[114,4515+20])
                          Ppat_var "print_errs" (typing/includeclass.ml[114,4515+10]..[114,4515+20])
                        expression (typing/includeclass.ml[114,4515+21]..[115,4547+77]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/includeclass.ml[114,4515+21]..[114,4515+24])
                            Ppat_var "ppf" (typing/includeclass.ml[114,4515+21]..[114,4515+24])
                          expression (typing/includeclass.ml[114,4515+25]..[115,4547+77]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/includeclass.ml[114,4515+25]..[114,4515+29])
                              Ppat_var "errs" (typing/includeclass.ml[114,4515+25]..[114,4515+29])
                            expression (typing/includeclass.ml[115,4547+8]..[115,4547+77])
                              Pexp_apply
                              expression (typing/includeclass.ml[115,4547+8]..[115,4547+17])
                                Pexp_ident "List.iter" (typing/includeclass.ml[115,4547+8]..[115,4547+17])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/includeclass.ml[115,4547+18]..[115,4547+72])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/includeclass.ml[115,4547+23]..[115,4547+26])
                                      Ppat_var "err" (typing/includeclass.ml[115,4547+23]..[115,4547+26])
                                    expression (typing/includeclass.ml[115,4547+30]..[115,4547+71])
                                      Pexp_apply
                                      expression (typing/includeclass.ml[115,4547+30]..[115,4547+37])
                                        Pexp_ident "fprintf" (typing/includeclass.ml[115,4547+30]..[115,4547+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/includeclass.ml[115,4547+38]..[115,4547+41])
                                            Pexp_ident "ppf" (typing/includeclass.ml[115,4547+38]..[115,4547+41])
                                        <arg>
                                        Nolabel
                                          expression (typing/includeclass.ml[115,4547+42]..[115,4547+48])
                                            Pexp_constant PConst_string("@ %a",(typing/includeclass.ml[115,4547+43]..[115,4547+47]),None)
                                        <arg>
                                        Nolabel
                                          expression (typing/includeclass.ml[115,4547+49]..[115,4547+67])
                                            Pexp_apply
                                            expression (typing/includeclass.ml[115,4547+50]..[115,4547+61])
                                              Pexp_ident "include_err" (typing/includeclass.ml[115,4547+50]..[115,4547+61])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/includeclass.ml[115,4547+62]..[115,4547+66])
                                                  Pexp_ident "mode" (typing/includeclass.ml[115,4547+62]..[115,4547+66])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (typing/includeclass.ml[115,4547+68]..[115,4547+71])
                                            Pexp_ident "err" (typing/includeclass.ml[115,4547+68]..[115,4547+71])
                                      ]
                                <arg>
                                Nolabel
                                  expression (typing/includeclass.ml[115,4547+73]..[115,4547+77])
                                    Pexp_ident "errs" (typing/includeclass.ml[115,4547+73]..[115,4547+77])
                              ]
                    ]
                    expression (typing/includeclass.ml[116,4628+6]..[116,4628+70])
                      Pexp_apply
                      expression (typing/includeclass.ml[116,4628+6]..[116,4628+13])
                        Pexp_ident "fprintf" (typing/includeclass.ml[116,4628+6]..[116,4628+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/includeclass.ml[116,4628+14]..[116,4628+17])
                            Pexp_ident "ppf" (typing/includeclass.ml[116,4628+14]..[116,4628+17])
                        <arg>
                        Nolabel
                          expression (typing/includeclass.ml[116,4628+18]..[116,4628+31])
                            Pexp_constant PConst_string("@[<v>%a%a@]",(typing/includeclass.ml[116,4628+19]..[116,4628+30]),None)
                        <arg>
                        Nolabel
                          expression (typing/includeclass.ml[116,4628+32]..[116,4628+50])
                            Pexp_apply
                            expression (typing/includeclass.ml[116,4628+33]..[116,4628+44])
                              Pexp_ident "include_err" (typing/includeclass.ml[116,4628+33]..[116,4628+44])
                            [
                              <arg>
                              Nolabel
                                expression (typing/includeclass.ml[116,4628+45]..[116,4628+49])
                                  Pexp_ident "mode" (typing/includeclass.ml[116,4628+45]..[116,4628+49])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/includeclass.ml[116,4628+51]..[116,4628+54])
                            Pexp_ident "err" (typing/includeclass.ml[116,4628+51]..[116,4628+54])
                        <arg>
                        Nolabel
                          expression (typing/includeclass.ml[116,4628+55]..[116,4628+65])
                            Pexp_ident "print_errs" (typing/includeclass.ml[116,4628+55]..[116,4628+65])
                        <arg>
                        Nolabel
                          expression (typing/includeclass.ml[116,4628+66]..[116,4628+70])
                            Pexp_ident "errs" (typing/includeclass.ml[116,4628+66]..[116,4628+70])
                      ]
              ]
    ]
]

